data$ciiu3 <- sprintf("%04d",data$ciiu3_m04)
# Recodificar variable CIIU 4 para que queden de 4 dígitos
data$ciiu4 <- sprintf("%04d",data$ciiu4_m04)
# Creación de variable CIIU 4 con CIIU 3
## Carga bbdd con comparacion 31 y 4
isic4_isic31 <- read_csv(here::here("input/ISIC4_ISIC31.txt"))
## Recodificación CIIU 3 -> CIIU 4
indices <- match(data$ciiu3,isic4_isic31$ISIC31code)
data$ciiu4_rec <- isic4_isic31$ISIC4code[indices]
# Creación variable isic4 con ciiu4 y ciiu4_rec (ex ciiu3) 4 digitos
data$isic4 <- ifelse(!is.na(data$ciiu4_rec),data$ciiu4_rec,data$ciiu4) # es la unión en una variable de todo en ciiu4
# Crear una columna con la variable "isic4" adelantada una ola
data$isic4 <- as.numeric(data$isic4)
data <- data %>%
arrange(ola) %>%  # Ordena por ola, por si acaso no está ordenado
group_by(idencuesta) %>%        # Agrupa por id para trabajar en cada individuo
mutate(isic4_lagged=lag(isic4,n=1)) %>%  # Desplaza "isic4" a la siguiente ola
ungroup()
# Rellenar los valores NA en la variable original
data <- data %>%
mutate(isic4=ifelse(!is.na(isic4),isic4,isic4_lagged)) %>%  # Si isic4 es NA, sustituir con el valor de la ola anterior
select(-isic4_lagged)                 # Elimina la columna temporal
# CIIU 4: creación de variable con 2 dígitos
data$isic4 <- sprintf("%04d",data$isic4)
data$isic4_2d <- as.character(data$isic4)
data$isic4_2d <- substr(data$isic4,1,2)
data$isic4_2d <- as.numeric(data$isic4_2d)
# Creación de variable con letra
data <- mutate(data,
rama=factor(case_when(isic4_2d<=03~"A",
isic4_2d>=05&isic4_2d<=09~"B",
isic4_2d>=10&isic4_2d<=33~"C",
isic4_2d==35~"D",
isic4_2d>=36&isic4_2d<=39~"E",
isic4_2d>=41&isic4_2d<=43~"F",
isic4_2d>=45&isic4_2d<=47~"G",
isic4_2d>=49&isic4_2d<=53~"H",
isic4_2d>=55&isic4_2d<=56~"I",
isic4_2d>=58&isic4_2d<=63~"J",
isic4_2d>=64&isic4_2d<=66~"K",
isic4_2d==68~"L",
isic4_2d>=69&isic4_2d<=75~"M",
isic4_2d>=77&isic4_2d<=82~"N",
isic4_2d==84~"O",
isic4_2d==85~"P",
isic4_2d>=86&isic4_2d<=88~"Q",
isic4_2d>=90&isic4_2d<=93~"R",
isic4_2d>=94&isic4_2d<=96~"S",
isic4_2d>=97&isic4_2d<=98~"T",
isic4_2d==99~"U")))
# Tabla de frecuencias y porcentajes
sjt.xtab(data$rama,data$ola,
show.col.prc=TRUE,
var.labels=c("Rama de Actividad Económica","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de la Rama de Actividad Económica, por ola")
# Creación de variable rama 2
data <- mutate(data,
rama_2=factor(case_when(rama=="A"~"A",
rama=="B"|rama=="C"~"BC",
rama=="D"|rama=="E"|rama=="F"~"DEF",
rama=="G"|rama=="I"~"GI",
rama=="H"~"H",
rama=="J"|rama=="K"|rama=="L"|rama=="M"|rama=="N"~"JKLMN",
rama=="O"~"O",
rama=="P"|rama=="Q"~"PQ",
rama=="R"|rama=="S"|rama=="U"~"RSU",
rama=="T"~"T")))
# Tabla de frecuencias y porcentajes
sjt.xtab(data$rama_2,data$ola,
show.col.prc=TRUE,
var.labels=c("Rama 2","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de la Rama 2, por ola")
# Crear variable supervisa==1, no supervisa==0
data <- data %>%
mutate(supervisa=case_when(m06==0~0,
m06>=1~1))
# Crear una columna con la variable "m06" adelantada una ola
data <- data %>%
arrange(ola) %>%  # Ordena por ola, por si acaso no está ordenado
group_by(idencuesta) %>%        # Agrupa por id para trabajar en cada individuo
mutate(m06_lagged=lag(m06,n=1)) %>%  # Desplaza "m06" a la siguiente ola
ungroup()
# Rellenar los valores NA en la variable original
data <- data %>%
mutate(m06_full=ifelse(!is.na(m06),m06,m06_lagged)) %>%  # Si m06 es NA, sustituir con el valor de la ola anterior
select(-m06_lagged)
# Crear variable supervisa==1, no supervisa==0
data <- data %>%
mutate(supervisa=case_when(m06_full==0~0,
m06_full>=1~1))
# Tabla de frecuencias y porcentajes
sjt.xtab(data$supervisa,data$ola,
show.col.prc=TRUE,
var.labels=c("Supervisa","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de variable Supervisa, por ola")
# Creación de variable posición de clase
data <- mutate(data,
class1=case_when(rel_empleo=="Patrón/a o empleador/a"|rel_empleo=="Trabaja solo, no tiene empleados"&educ>=9~"Petit bourgeoisie",
rel_empleo=="Trabaja solo, no tiene empleados"&educ<9~"Informal",
cualificacion=="Experts"&supervisa==1~"Expert managers",
cualificacion=="Experts"&supervisa==0~"Experts",
cualificacion=="Skilled"|cualificacion=="Unskilled"&supervisa==1~"Supervisors",
cualificacion=="Skilled"|cualificacion=="Unskilled"&supervisa==0~"Workers"))
data$class1 <- factor(data$class1,
levels=c("Petit bourgeoisie",
"Informal",
"Expert managers",
"Experts",
"Supervisors",
"Workers"))
# Tabla de frecuencias y porcentajes
sjt.xtab(data$class1, data$ola,
show.col.prc = TRUE,
var.labels = c("Posición de clase 1","Ola"),
show.summary = FALSE,
title = "Frecuencias y porcentajes de la Posición de clase 1, por ola")
data$class1a <- factor(data$class1,
levels=c("Expert managers",
"Petit bourgeoisie",
"Informal",
"Experts",
"Supervisors",
"Workers"))
# Tabla de frecuencias y porcentajes
sjt.xtab(data$class1a,data$ola,
show.col.prc=TRUE,
var.labels=c("Posición de clase 1 a","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de la Posición de clase 1 a, por ola")
# Creación de variable posición de clase
data <- mutate(data,
class2=case_when(rel_empleo=="Patrón/a o empleador/a"|rel_empleo=="Trabaja solo, no tiene empleados"&educ>=9~"Petit bourgeoisie",
rel_empleo=="Trabaja solo, no tiene empleados"&educ<9~"Informal",
cualificacion=="Experts"&supervisa==1~"Expert managers",
cualificacion=="Experts"&supervisa==0~"Experts",
cualificacion=="Skilled"|cualificacion=="Unskilled"&supervisa==1~"Supervisors",
cualificacion=="Skilled"|cualificacion=="Unskilled"&supervisa==0~"Workers",
actividad=="Jubilado o pensionado"|actividad=="Desempleado, buscando trabajo"~"Desocupados/Retirados"))
data$class2 <- factor(data$class2,
levels=c("Petit bourgeoisie",
"Informal",
"Expert managers",
"Experts",
"Supervisors",
"Workers",
"Desocupados/Retirados"))
# Tabla de frecuencias y porcentajes
sjt.xtab(data$class2,data$ola,
show.col.prc=TRUE,
var.labels=c("Posición de clase 2","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de la Posición de clase 2, por ola")
data$class2a <- factor(data$class2,
levels=c("Expert managers",
"Petit bourgeoisie",
"Informal",
"Experts",
"Supervisors",
"Workers",
"Desocupados/Retirados"))
# Tabla de frecuencias y porcentajes
sjt.xtab(data$class2a,data$ola,
show.col.prc=TRUE,
var.labels=c("Posición de clase 2 a","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de la Posición de clase 2 a, por ola")
# Identificar los valores de "class1" en la ola 3
class1_ola3 <- data %>%
filter(ola==3) %>%
select(idencuesta,class1) %>%
rename(class3=class1) # Renombrar "class1" a "class3"
# Unir esta información con la base de datos original
data <- data %>%
left_join(class1_ola3,by="idencuesta")
# Tabla de frecuencias y porcentajes
sjt.xtab(data$class3,data$ola,
show.col.prc=TRUE,
var.labels=c("Posición de clase 3","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de la Posición de clase 3, por ola")
# Identificar los valores de "class1a" en la ola 3
class1a_ola3 <- data %>%
filter(ola==3) %>%
select(idencuesta,class1a) %>%
rename(class3a=class1a) # Renombrar "class2" a "class3"
# Unir esta información con la base de datos original
data <- data %>%
left_join(class1a_ola3,by="idencuesta")
# Tabla de frecuencias y porcentajes
sjt.xtab(data$class3a,data$ola,
show.col.prc=TRUE,
var.labels=c("Posición de clase 3 a","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de la Posición de clase 3 a, por ola")
# Identificar los valores de "class1" en la ola 3
class2_ola3 <- data %>%
filter(ola==3) %>%
select(idencuesta,class2) %>%
rename(class4=class2) # Renombrar "class2" a "class3"
# Unir esta información con la base de datos original
data <- data %>%
left_join(class2_ola3,by="idencuesta")
# Tabla de frecuencias y porcentajes
sjt.xtab(data$class4,data$ola,
show.col.prc=TRUE,
var.labels=c("Posición de clase 4","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de la Posición de clase 4, por ola")
# Identificar los valores de "class1" en la ola 3
class2a_ola3 <- data %>%
filter(ola==3) %>%
select(idencuesta,class2a) %>%
rename(class4a=class2a) # Renombrar "class2" a "class3"
# Unir esta información con la base de datos original
data <- data %>%
left_join(class2a_ola3,by="idencuesta")
# Tabla de frecuencias y porcentajes
sjt.xtab(data$class4a,data$ola,
show.col.prc=TRUE,
var.labels=c("Posición de clase 4 a","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de la Posición de clase 4 a, por ola")
# Crear una columna con la variable "c12_04" adelantada una ola
data <- data %>%
arrange(ola) %>%  # Ordena por ola, por si acaso no está ordenado
group_by(idencuesta) %>%        # Agrupa por id para trabajar en cada individuo
mutate(c12_04_lagged=lag(c12_04,n=1)) %>%  # Desplaza c12_04 a la siguiente ola
ungroup()
# Rellenar los valores NA en la variable original
data <- data %>%
mutate(c12_04_full=ifelse(!is.na(c12_04),c12_04,c12_04_lagged)) %>%  # Si c12_04 es NA, sustituir con el valor de la ola anterior
select(-c12_04_lagged)
# Recodficar
data <- data %>%
mutate(mem_sindicato=car::recode(c12_04_full,
recodes=c("1='No es miembro';
2='Miembro inactivo';
3='Miembro activo'"),
as.factor=TRUE, # convertir a factor
levels=c("No es miembro",
"Miembro inactivo",
"Miembro activo"))) # ordenar niveles
# Tabla de frecuencias y porcentajes
sjt.xtab(data$mem_sindicato,data$ola,
show.col.prc=TRUE,
var.labels=c("Membresía sindical","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de Trabajadores/as miembros/as de sindicatos, por ola")
# Crear variable binaria: unionized
data <- mutate(data,
unionized=if_else(c12_04_full==2|c12_04_full==3,1,0))
# Tabla de frecuencias y porcentajes
sjt.xtab(data$unionized,data$ola,
show.col.prc=TRUE,
var.labels=c("Unionized","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de Trabajadores/as Sindicalizados/as, por ola")
# Tabla de frecuencias y porcentajes
sjt.xtab(data$c15,data$ola,
show.col.prc=TRUE,
var.labels=c("Autoposicionamiento","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de Actividad principal, por ola")
# Recodficar
data <- data[!is.na(data$c15), ]
data$pol_id <- car::recode(data$c15,
recodes=c("c(11,12,-888,-999)='No se identifica';
c(0,1,2,3,4)='Izquierda';
c(5)='Centro';
c(6,7,8,9,10)='Derecha'"),
as.factor=TRUE,
levels=c('Izquierda',
'Centro',
'Derecha',
'No se identifica'))
# Tabla de frecuencias y porcentajes
sjt.xtab(data$pol_id,data$ola,
show.col.prc=TRUE,
var.labels=c("Identificación política","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de Identificación Política, por ola")
# Recodficar
data <- data[!is.na(data$c13), ]
data <- data %>%
mutate(pol_interes=c13)
# Tabla de frecuencias y porcentajes
sjt.xtab(data$pol_interes,data$ola,
show.col.prc=TRUE,
var.labels=c("Interés en la política","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de Trabajadores/as interesados en la política, por ola")
# Recodficar
data <- data[!is.na(data$c14_01), ]
data <- data %>%
mutate(pol_habla=c14_01)
# Tabla de frecuencias y porcentajes
sjt.xtab(data$pol_habla,data$ola,
show.col.prc=TRUE,
var.labels=c("Habla de política","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de Habla de política, por ola")
# Recodficar
data <- data[!is.na(data$c14_02), ]
data <- data %>%
mutate(pol_inform=c14_02)
# Tabla de frecuencias y porcentajes
sjt.xtab(data$pol_inform,data$ola,
show.col.prc=TRUE,
var.labels=c("Se informa de política","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de Se informa de política, por ola")
# Crear variable sector
data <- data %>%
mutate(metrop=if_else(region_cod==13,1,0))
# Tabla de frecuencias y porcentajes
sjt.xtab(data$metrop,data$ola,
show.col.prc=TRUE,
var.labels=c("Región Metropolitana","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de variable Región Metropolitana, por ola")
data <- data[!is.na(data$educ), ]
data$educ <- car::recode(data$educ,
recodes=c("c(1,2,3)='Básica';
c(4,5)='Media';
c(6,7)='Técnica';
c(8,9,10)='Superior'"),
as.factor=TRUE,
levels=c('Básica',
'Media',
'Técnica',
'Superior'))
# Tabla de frecuencias y porcentajes
sjt.xtab(data$educ,data$ola,
show.col.prc=TRUE,
var.labels=c("Educación","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de variable Educación, por ola")
# data <- data[!is.na(data$c33), ]
data$class_id <- car::recode(data$c33,
recodes=c("c(1,2)='Baja';
c(3)='Media';
c(4,5)='Alta'"),
as.factor=TRUE,
levels=c('Baja',
'Media',
'Alta'))
# Crear una columna con la variable class_id adelantada una ola
data <- data %>%
group_by(idencuesta) %>%  # Agrupa por id para trabajar en cada individuo
mutate(class_id_lagged=if_else(ola==2,lag(as.character(class_id),n=1),NA_character_)) %>%  # Desplaza class_id solo para la ola 2
ungroup() %>%
# Rellenar los valores NA (de las olas que no estaban) en la variable original
mutate(class_id=ifelse(!is.na(class_id),as.character(class_id),class_id_lagged)) %>%  # Sustituye valores de class_id si es NA solo con la variable desplazada
mutate(class_id=factor(class_id)) %>%  # Convierte de nuevo a factor
select(-class_id_lagged)  # Elimina la columna temporal
# Volver a establecer niveles
data$class_id <- factor(data$class_id,
levels=c("Baja",
"Media",
"Alta"))
# Tabla de frecuencias y porcentajes
sjt.xtab(data$class_id,data$ola,
show.col.prc=TRUE,
var.labels=c("Identidad de Clase","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de variable Identidad de Clase, por ola")
data <- data[!is.na(data$d01_01), ]
data <- data %>%
mutate(class_estatus=d01_01)
# Tabla de frecuencias y porcentajes
sjt.xtab(data$class_estatus,data$ola,
show.col.prc=TRUE,
var.labels=c("Estatus social subjetivo","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de variable Estatus social subjetivo, por ola")
#Impute midpoint of income ranges
data$m14_rec <- as.numeric(car::recode(data$m14,
"1=20000;
2=62500;
3=105000;
4=147500;
5=190000;
6=220000;
7=255000;
8=300000;
9=340000;
10=380000;
11=432500;
12=502500;
13=602500;
14=757500;
15=1075000;
16=1300000"))
#Impute midpoint of income ranges (2021)
data$m14b_rec <- as.numeric(car::recode(data$m14b,
"1=125000;
2=300000;
3=400000;
4=575000;
5=700000;
c(9,10,11,12,16)=NA"))
#Recode DK/DA of Income to NA
data$m13_rec <- as.numeric(car::recode(data$m13,"c(-888,-999)=NA"))
#replace NA of income with new imputed variable
data$m13_imp <- ifelse(!is.na(data$m13_rec),data$m13_rec,data$m14_rec)
summary(data$m13_imp)
data$m13_imp <- ifelse(is.na(data$m13_imp),data$m14b_rec,data$m13_imp)
summary(data$m13_imp)
data$ingreso <- data$m13_imp
data$ingreso_log <- log(data$ingreso)
data$edad2 <- (data$edad)**2
# Seleccionar variables
elsoc_minicoes <- data %>%
select(idencuesta,                                     # identificacion enctdo
ola,                                            # identificacion ola
version,muestra,tipo_atricion,estrato,          # identificacion srvy
segmento_disenno,ponderador02,estrato_disenno,  # identificacion srvy
sexo,edad,edad2,educ,metrop,                    # caract sociodem
ingreso,ingreso_log,                            # caract sociodem
actividad,rel_empleo,rama,rama_2,               # caract ocupacional
isco08,isco08_1d,isco08_2d,                     # caract ocupacional
class_id,class_estatus,                         # clase y estatus
class1,class1a,class2,class2a,                  # clase y estatus
class3,class3a,class4,class4a,                  # clase y estatus
mem_sindicato,unionized,                        # membresia sindicato
marcha,                                         # freq participa marchas
huelga,                                         # freq participa huelgas
c15,pol_id,pol_interes,pol_habla,pol_informa,   # interes politica
perc_gerente,                                   # Salario percibido gerente
perc_obrero,                                    # Salario percibido obrero
just_gerente,                                   # Salario justo gerente
just_obrero                                     # Salario justo obrero
) %>%
sjlabelled::set_na(.,na=c(-999,-888,-777,-666))
View(data)
# Seleccionar variables
elsoc_minicoes <- data %>%
select(idencuesta,                                     # identificacion enctdo
ola,                                            # identificacion ola
version,muestra,tipo_atricion,estrato,          # identificacion srvy
segmento_disenno,ponderador02,estrato_disenno,  # identificacion srvy
sexo,edad,edad2,educ,metrop,                    # caract sociodem
ingreso,ingreso_log,                            # caract sociodem
actividad,rel_empleo,rama,rama_2,               # caract ocupacional
isco08,isco08_1d,isco08_2d,                     # caract ocupacional
class_id,class_estatus,                         # clase y estatus
class1,class1a,class2,class2a,                  # clase y estatus
class3,class3a,class4,class4a,                  # clase y estatus
mem_sindicato,unionized,                        # membresia sindicato
marcha,                                         # freq participa marchas
huelga,                                         # freq participa huelgas
c15,pol_id,pol_interes,pol_habla,pol_inform,    # interes politica
perc_gerente,                                   # Salario percibido gerente
perc_obrero,                                    # Salario percibido obrero
just_gerente,                                   # Salario justo gerente
just_obrero                                     # Salario justo obrero
) %>%
sjlabelled::set_na(.,na=c(-999,-888,-777,-666))
# Seleccionar variables
elsoc_minicoes <- data %>%
select(idencuesta,                                     # identificacion enctdo
ola,                                            # identificacion ola
version,muestra,tipo_atricion,estrato,          # identificacion srvy
segmento_disenno,ponderador02,estrato_disenno,  # identificacion srvy
sexo,edad,edad2,educ,metrop,                    # caract sociodem
ingreso,ingreso_log,                            # caract sociodem
actividad,rel_empleo,rama,rama_2,supervisa,     # caract ocupacional
isco08,isco08_1d,isco08_2d,sector,cualificacion,# caract ocupacional
class_id,class_estatus,                         # clase y estatus
class1,class1a,class2,class2a,                  # clase y estatus
class3,class3a,class4,class4a,                  # clase y estatus
mem_sindicato,unionized,                        # membresia sindicato
marcha,                                         # freq participa marchas
huelga,                                         # freq participa huelgas
c15,pol_id,pol_interes,pol_habla,pol_inform,    # interes politica
perc_gerente,                                   # Salario percibido gerente
perc_obrero,                                    # Salario percibido obrero
just_gerente,                                   # Salario justo gerente
just_obrero                                     # Salario justo obrero
) %>%
sjlabelled::set_na(.,na=c(-999,-888,-777,-666))
# Seleccionar variables
elsoc_minicoes <- data %>%
select(idencuesta,                                     # identificacion enctdo
ola,                                            # identificacion ola
version,muestra,tipo_atricion,estrato,          # identificacion srvy
segmento_disenno,ponderador02,estrato_disenno,  # identificacion srvy
sexo,edad,edad2,educ,metrop,                    # caract sociodem
ingreso,ingreso_log,                            # caract sociodem
actividad,rel_empleo,rama,rama_2,supervisa,     # caract ocupacional
isco08,isco08_1d,isco08_2d,sector,cualificacion,# caract ocupacional
class_id,class_estatus,                         # clase y estatus
class1,class1a,class2,class2a,                  # clase y estatus
class3,class3a,class4,class4a,                  # clase y estatus
mem_sindicato,unionized,                        # membresia sindicato
marcha,                                         # freq participa marchas
huelga,                                         # freq participa huelgas
c15,pol_id,pol_interes,pol_habla,pol_inform,    # interes politica
perc_gerente,                                   # Salario percibido gerente
perc_obrero,                                    # Salario percibido obrero
just_gerente,                                   # Salario justo gerente
just_obrero                                     # Salario justo obrero
) %>%
sjlabelled::set_na(.,na=c(-999,-888,-777,-666))
save(elsoc_minicoes,file=(here::here("output/elsoc-minicoes.Rdata")))
saveRDS(elsoc_minicoes,file=(here::here("output/elsoc-minicoes.rds")))
elsoc_minicoes_sa <- elsoc_minicoes %>%
filter(tipo_atricion==1)
n_sa <- nrow(elsoc_minicoes_sa)

rename(class4=class2) # Renombrar "class2" a "class3"
# Unir esta información con la base de datos original
data <- data %>%
left_join(class2_ola3, by = "idencuesta")
# Identificar los valores de "class1" en la ola 3
class2a_ola3 <- data %>%
filter(ola==3) %>%
select(idencuesta,class2a) %>%
rename(class4a=class2a) # Renombrar "class2" a "class3"
# Unir esta información con la base de datos original
data <- data %>%
left_join(class2a_ola3, by = "idencuesta")
rm(list=ls())
options(scipen = 999)
library(pacman)
p_load(tidyverse,
knitr,
bookdown,
car,
sjmisc,
sjPlot,
sjlabelled,
psych,
kableExtra,
gridExtra,
lubridate,
viridis,
statar,
readxl,
tinytex,
ggrepel,
ggalluvial,
survey,
httr,
readr,
ggplot2,
labelled,
shadowtext)
load(here::here("input/data/ELSOC_Long_2016_2023.RData"))
# Seleccion solo para mirar, aun sin ponderadores
data <- elsoc_long_2016_2023 %>%
select(idencuesta,                                     # identificacion enctdo
ola,ola_w01,ola_w02,ola_w03,                    # identificacion ola
ola_w04,ola_w05,ola_w06,ola_w07,                # identificacion ola
version,muestra,tipo_atricion,estrato,          # identificacion srvy
segmento_disenno,ponderador02,estrato_disenno,  # identificacion srvy
ponderador_long_total,                          # ponderador longit
sexo=m0_sexo,edad=m0_edad,educ=m01,             # caract sociodem
m02,m06,m07,m08,m10,                            # caract sociodem
m03,ciuo88_m03,ciuo08_m03,                      # caract ocupacional
m04,ciiu3_m04,ciiu4_m04,                        # caract ocupacional
c12_04,                                         # membresia sindicato
marcha=c08_02,                                  # freq participa marchas
huelga=c08_03,                                  # freq participa huelgas
c13,c14_01,c14_02,c15,                          # interes politica
perc_gerente=d03_01,                            # Salario percibido gerente
perc_obrero=d03_02,                             # Salario percibido obrero
just_gerente=d04_01,                            # Salario justo gerente
just_obrero=d04_02                              # Salario justo obrero
) %>%
sjlabelled::set_na(.,na=c(-999,-888,-777,-666))
n <- nrow(data)
# Recodficar
data$actividad <- car::recode(data$m02,
recodes=c("1='Trabaja de manera remunerada con jornada completa';
2='Trabaja de manera remunerada a tiempo parcial';
3='Estudia y trabaja';
4='Solo estudia';
5='Jubilado o pensionado';
6='Desempleado, buscando trabajo';
7='Realiza tareas no remuneradas';
8='Esta enfermo o tiene una discapacidad';
9='No estudia, no trabaja y no busca trabajo'"),
as.factor=TRUE,
levels=c("Trabaja de manera remunerada con jornada completa",
"Trabaja de manera remunerada a tiempo parcial",
"Estudia y trabaja",
"Solo estudia",
"Jubilado o pensionado",
"Desempleado, buscando trabajo",
"Realiza tareas no remuneradas",
"Esta enfermo o tiene una discapacidad",
"No estudia, no trabaja y no busca trabajo"))
# Tabla de frecuencias y porcentajes
sjt.xtab(data$actividad,data$ola,
show.col.prc=TRUE,
var.labels=c("Actividad","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de Actividad principal, por ola")
# Recodficar
data$rel_empleo <- car::recode(data$m07,
recodes=c("1='Empleado u obrero en empresa privada';
2='Empleado u obrero del sector público';
3='Miembro de las Fuerzas Armadas y de Orden';
4='Patrón/a o empleador/a';
5='Trabaja solo, no tiene empleados';
6='Familiar no remunerado';
7='Servicio doméstico'"),
as.factor=TRUE, # convertir a factor
levels=c("Empleado u obrero en empresa privada",
"Empleado u obrero del sector público",
"Miembro de las Fuerzas Armadas y de Orden",
"Patrón/a o empleador/a",
"Trabaja solo, no tiene empleados",
"Familiar no remunerado",
"Servicio doméstico")) # ordenar niveles
# Tabla de frecuencias y porcentajes
sjt.xtab(data$rel_empleo,data$ola,
show.col.prc=TRUE,
var.labels=c("Relación de empleo","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de la Relación de empleo, por ola")
# Crear una columna con la variable rel_empleo adelantada una ola
data <- data %>%
# arrange(idencuesta, ola) %>%  # Ordena por id y ola, por si acaso no está ordenado
group_by(idencuesta) %>%        # Agrupa por id para trabajar en cada individuo
mutate(rel_empleo_lagged=lag(as.character(rel_empleo),n=1)) %>%  # Desplaza rel_empleo a la siguiente ola, conviertiendo el factor en character temporalmente
ungroup()
# Rellenar los valores NA (de las olas que no estaban) en la variable original
data <- data %>%
mutate(rel_empleo=ifelse(!is.na(rel_empleo),as.character(rel_empleo),rel_empleo_lagged)) %>%  # Si rel empleo no es NA, sustituir con el valor de rel_empleo, y si es NA con la ola variable desplazada una ola y asegurarse que actividad esté en formato carácter
mutate(rel_empleo=factor(rel_empleo)) %>%  # Convertir de nuevo a factor
select(-rel_empleo_lagged)                 # Elimina la columna temporal
# Volver a establecer niveles
data$rel_empleo <- factor(data$rel_empleo,
levels=c("Empleado u obrero en empresa privada",
"Empleado u obrero del sector público",
"Miembro de las Fuerzas Armadas y de Orden",
"Patrón/a o empleador/a",
"Trabaja solo, no tiene empleados",
"Familiar no remunerado",
"Servicio doméstico"))
# Tabla de frecuencias y porcentajes
sjt.xtab(data$rel_empleo,data$ola,
show.col.prc=TRUE,
var.labels=c("Relación de empleo","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de la Relación de Empleo, por ola")
# Crear variable sector
data <- data %>%
mutate(sector=if_else(rel_empleo=="Empleado u obrero del sector público"|rel_empleo=="Miembro de las Fuerzas Armadas y de Orden",0,1))
# Tabla de frecuencias y porcentajes
sjt.xtab(data$sector, data$ola,
show.col.prc = TRUE,
var.labels = c("Sector","Ola"),
show.summary = FALSE,
title = "Frecuencias y porcentajes de variable Sector, por ola")
# Carga bbdd con comparacion 88 y 08
isco08_88 <- read_excel(here::here("input/isco08-88.xls"))
isco08_88 <- isco08_88 %>%
rename(isco08=`ISCO 08 Code`,isco88=`ISCO-88 code`)
# Exploración
valores_repetidos <- table(isco08_88$isco88) # Contar los valores repetidos en la variable
valores_repetidos <- valores_repetidos[valores_repetidos > 1]
valores_repetidos <- table(isco08_88$isco08) # Contar los valores repetidos en la variable
valores_repetidos <- valores_repetidos[valores_repetidos > 1]
# data %>%
#   group_by(ola) %>%
#   summarise(datos_validos = sum(!is.na(ciuo88_m03)))
#
# data %>%
#   group_by(ola) %>%
#   summarise(datos_validos = sum(!is.na(ciuo08_m03)))
# CIUO - ISCO: Recodificación 88->08 4 digitos en datos elsoc
indices <- match(data$ciuo88_m03,isco08_88$isco88)
data$ciuo08_rec <- isco08_88$isco08[indices]
data$ciuo08_rec <- as.numeric(data$ciuo08_rec) # es solo la recodificación de las que eran 88 en data, es decir, año 2016
# Creación variable isco08 con ciuo08_m03 y ciuo08_rec (ex ciuo88_m03) 4 digitos
data$isco08 <- ifelse(!is.na(data$ciuo08_rec),data$ciuo08_rec,data$ciuo08_m03) # es la unión en una variable de todo en 08
# Crear una columna con la variable "isco08" adelantada una ola
data <- data %>%
# arrange(idencuesta, ola) %>%  # Ordena por id y ola, por si acaso no está ordenado
group_by(idencuesta) %>%        # Agrupa por id para trabajar en cada individuo
mutate(isco08_lagged=lag(isco08,n=1)) %>%  # Desplaza isco08 a la siguiente ola
ungroup()
# Rellenar los valores NA en la variable original
data <- data %>%
mutate(isco08=ifelse(!is.na(isco08),isco08,isco08_lagged)) %>%  # Si isco08 es NA, sustituir con el valor de la ola anterior
select(-isco08_lagged)                 # Elimina la columna temporal
# CIUO - ISCO: creación de variables con 1 dígito
data$isco08_1d <- as.character(data$isco08)
data$isco08_1d <- substr(data$isco08_1d,1,1)
data$isco08_1d <- as.numeric(data$isco08_1d)
# CIUO - ISCO: creación de variables con 2 dígitos
data$isco08_2d <- as.character(data$isco08)
data$isco08_2d <- substr(data$isco08_2d,1,2)
data$isco08_2d <- as.numeric(data$isco08_2d)
# Tabla de frecuencias y porcentajes 1 dígito
sjt.xtab(data$isco08_1d,data$ola,
show.col.prc=TRUE,
var.labels=c("CIUO08","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de Ocupación con 1 dígito, por ola")
# Tabla de frecuencias y porcentajes 2 dígitos
sjt.xtab(data$isco08_2d,data$ola,
show.col.prc=TRUE,
var.labels=c("CIUO08","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de Ocupación con 2 dígitos, por ola")
# Creación variable Nivel de cualificación
data <- mutate(data,
cualificacion = case_when(isco08_2d <= 34 & educ >= 9 ~ "Experts",
isco08_2d <= 34 & educ < 9 ~ "Skilled",
isco08_2d == 35 ~ "Skilled",
isco08_2d >= 41 & isco08_2d <= 44 ~ "Skilled",
isco08_2d == 53 ~ "Skilled",
isco08_2d == 51 & educ <= 5 ~ "Unskilled",
isco08_2d == 51 & educ > 5 ~ "Skilled",
isco08_2d == 54 & educ <= 5 ~ "Unskilled",
isco08_2d == 54 & educ > 5 ~ "Skilled",
isco08_2d == 61 & educ <= 5 ~ "Unskilled",
isco08_2d == 61 & educ > 5 ~ "Skilled",
isco08_2d == 62 & educ <= 5 ~ "Unskilled",
isco08_2d == 62 & educ > 5 ~ "Skilled",
isco08_2d == 71 & educ <= 5 ~ "Unskilled",
isco08_2d == 71 & educ > 5 ~ "Skilled",
isco08_2d == 72 & educ <= 5 ~ "Unskilled",
isco08_2d == 72 & educ > 5 ~ "Skilled",
isco08_2d == 73 & educ <= 5 ~ "Unskilled",
isco08_2d == 73 & educ > 5 ~ "Skilled",
isco08_2d == 74 & educ <= 5 ~ "Unskilled",
isco08_2d == 74 & educ > 5 ~ "Skilled",
isco08_2d == 75 & educ <= 5 ~ "Unskilled",
isco08_2d == 75 & educ > 5 ~ "Skilled",
isco08_2d == 81 & educ <= 5 ~ "Unskilled",
isco08_2d == 81 & educ > 5 ~ "Skilled",
isco08_2d == 52 ~ "Unskilled",
isco08_2d == 61 ~ "Unskilled",
isco08_2d == 63 ~ "Unskilled",
isco08_2d == 75 ~ "Unskilled",
isco08_2d == 82 ~ "Unskilled",
isco08_2d == 83 ~ "Unskilled",
isco08_2d == 90 ~ "Unskilled"))
# Tabla de frecuencias y porcentajes
sjt.xtab(data$cualificacion, data$ola,
show.col.prc = TRUE,
var.labels = c("Nivel de cualificación","Ola"),
show.summary = FALSE,
title = "Frecuencias y porcentajes del Nivel de Cualificación, por ola")
# Recodificar variable CIIU 3 para que queden de 4 dígitos
data$ciiu3 <- sprintf("%04d",data$ciiu3_m04)
# Recodificar variable CIIU 4 para que queden de 4 dígitos
data$ciiu4 <- sprintf("%04d",data$ciiu4_m04)
# data %>%
#   group_by(ola) %>%
#   summarise(datos_validos = sum(!is.na(ciiu3_m04)))
#
# data %>%
#   group_by(ola) %>%
#   summarise(datos_validos = sum(!is.na(ciiu4_m04)))
# Creación de variable CIIU 4 con CIIU 3
## Carga bbdd con comparacion 31 y 4
isic4_isic31 <- read_csv(here::here("input/ISIC4_ISIC31.txt"))
## Recodificación CIIU 3 -> CIIU 4
indices <- match(data$ciiu3,isic4_isic31$ISIC31code)
data$ciiu4_rec <- isic4_isic31$ISIC4code[indices]
# Creación variable isic4 con ciiu4 y ciiu4_rec (ex ciiu3) 4 digitos
data$isic4 <- ifelse(!is.na(data$ciiu4_rec),data$ciiu4_rec,data$ciiu4) # es la unión en una variable de todo en ciiu4
# Crear una columna con la variable "isic4" adelantada una ola
data$isic4 <- as.numeric(data$isic4)
data <- data %>%
arrange(ola) %>%  # Ordena por ola, por si acaso no está ordenado
group_by(idencuesta) %>%        # Agrupa por id para trabajar en cada individuo
mutate(isic4_lagged=lag(isic4,n=1)) %>%  # Desplaza "isic4" a la siguiente ola
ungroup()
# Rellenar los valores NA en la variable original
data <- data %>%
mutate(isic4=ifelse(!is.na(isic4),isic4,isic4_lagged)) %>%  # Si isic4 es NA, sustituir con el valor de la ola anterior
select(-isic4_lagged)                 # Elimina la columna temporal
# CIIU 4: creación de variable con 2 dígitos
data$isic4 <- sprintf("%04d",data$isic4)
data$isic4_2d <- as.character(data$isic4)
data$isic4_2d <- substr(data$isic4,1,2)
data$isic4_2d <- as.numeric(data$isic4_2d)
# Creación de variable con letra
data <- mutate(data,
rama=case_when(isic4_2d<=03~"A",
isic4_2d>=05&isic4_2d<=09~"B",
isic4_2d>=10&isic4_2d<=33~"C",
isic4_2d==35~"D",
isic4_2d>=36&isic4_2d<=39~"E",
isic4_2d>=41&isic4_2d<=43~"F",
isic4_2d>=45&isic4_2d<=47~"G",
isic4_2d>=49&isic4_2d<=53~"H",
isic4_2d>=55&isic4_2d<=56~"I",
isic4_2d>=58&isic4_2d<=63~"J",
isic4_2d>=64&isic4_2d<=66~"K",
isic4_2d==68~"L",
isic4_2d>=69&isic4_2d<=75~"M",
isic4_2d>=77&isic4_2d<=82~"N",
isic4_2d==84~"O",
isic4_2d==85~"P",
isic4_2d>=86&isic4_2d<=88~"Q",
isic4_2d>=90&isic4_2d<=93~"R",
isic4_2d>=94&isic4_2d<=96~"S",
isic4_2d>=97&isic4_2d<=98~"T",
isic4_2d==99~"U"))
# Tabla de frecuencias y porcentajes
sjt.xtab(data$rama,data$ola,
show.col.prc=TRUE,
var.labels=c("Rama de Actividad Económica","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de la Rama de Actividad Económica, por ola")
# Creación de variable rama 2
data <- mutate(data,
rama_2=case_when(rama=="A"~"A",
rama=="B"|rama=="C"~"BC",
rama=="D"|rama=="E"|rama=="F"~"DEF",
rama=="G"|rama=="I"~"GI",
rama=="H"~"H",
rama=="J"|rama=="K"|rama=="L"|rama=="M"|rama=="N"~"JKLMN",
rama=="O"~"O",
rama=="P"|rama=="Q"~"PQ",
rama=="R"|rama=="S"|rama=="U"~"RSU",
rama=="T"~"T"))
# Tabla de frecuencias y porcentajes
sjt.xtab(data$rama_2,data$ola,
show.col.prc=TRUE,
var.labels=c("Rama 2","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de la Rama 2, por ola")
# Crear variable supervisa==1, no supervisa==0
data <- data %>%
mutate(supervisa=case_when(m06 == 0 ~ 0,
m06 >= 1 ~ 1,
m06 == -888 ~ NA,
m06 == -999 ~ NA))
# Tabla de frecuencias y porcentajes
sjt.xtab(data$supervisa, data$ola,
show.col.prc = TRUE,
var.labels = c("Supervisa","Ola"),
show.summary = FALSE,
title = "Frecuencias y porcentajes de variable Supervisa, por ola")
# Crear una columna con la variable "m06" adelantada una ola
data <- data %>%
arrange(ola) %>%  # Ordena por ola, por si acaso no está ordenado
group_by(idencuesta) %>%        # Agrupa por id para trabajar en cada individuo
mutate(m06_lagged=lag(m06,n=1)) %>%  # Desplaza "m06" a la siguiente ola
ungroup()
# Rellenar los valores NA en la variable original
data <- data %>%
mutate(m06_full=ifelse(!is.na(m06),m06,m06_lagged)) %>%  # Si m06 es NA, sustituir con el valor de la ola anterior
select(-m06_lagged)
# Crear variable supervisa==1, no supervisa==0
data <- data %>%
mutate(supervisa=case_when(m06_full==0~0,
m06_full>=1~1,
m06_full==-888~NA,
m06_full==-999~NA))
# Tabla de frecuencias y porcentajes
sjt.xtab(data$supervisa,data$ola,
show.col.prc=TRUE,
var.labels=c("Supervisa","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de variable Supervisa, por ola")
# Creación de variable posición de clase
data <- mutate(data,
class1=case_when(rel_empleo=="Patrón/a o empleador/a"|rel_empleo=="Trabaja solo, no tiene empleados"&educ>=9~"Petit bourgeoisie",
rel_empleo=="Trabaja solo, no tiene empleados"&educ<9~"Informal",
cualificacion=="Experts"&supervisa==1~"Expert managers",
cualificacion=="Experts"&supervisa==0~"Experts",
cualificacion=="Skilled"|cualificacion=="Unskilled"&supervisa==1~"Supervisors",
cualificacion=="Skilled"|cualificacion=="Unskilled"&supervisa==0~"Workers"))
data$class1 <- factor(data$class1,
levels = c("Petit bourgeoisie",
"Informal",
"Expert managers",
"Experts",
"Supervisors",
"Workers"))
# Tabla de frecuencias y porcentajes
sjt.xtab(data$class1, data$ola,
show.col.prc = TRUE,
var.labels = c("Posición de clase 1","Ola"),
show.summary = FALSE,
title = "Frecuencias y porcentajes de la Posición de clase 1, por ola")
data$class1a <- factor(data$class1,
levels=c("Expert managers",
"Petit bourgeoisie",
"Informal",
"Experts",
"Supervisors",
"Workers"))
# Tabla de frecuencias y porcentajes
sjt.xtab(data$class1a,data$ola,
show.col.prc=TRUE,
var.labels=c("Posición de clase 1 a","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de la Posición de clase 1 a, por ola")
# Creación de variable posición de clase
data <- mutate(data,
class2=case_when(rel_empleo=="Patrón/a o empleador/a"|rel_empleo=="Trabaja solo, no tiene empleados"&educ>=9~"Petit bourgeoisie",
rel_empleo=="Trabaja solo, no tiene empleados"&educ<9~"Informal",
cualificacion=="Experts"&supervisa==1~"Expert managers",
cualificacion=="Experts"&supervisa==0~"Experts",
cualificacion=="Skilled"|cualificacion=="Unskilled"&supervisa==1~"Supervisors",
cualificacion=="Skilled"|cualificacion=="Unskilled"&supervisa==0~"Workers",
actividad=="Jubilado o pensionado"|actividad=="Desempleado, buscando trabajo"~"Desocupados/Retirados"))
data$class2 <- factor(data$class2,
levels=c("Petit bourgeoisie",
"Informal",
"Expert managers",
"Experts",
"Supervisors",
"Workers",
"Desocupados/Retirados"))
# Tabla de frecuencias y porcentajes
sjt.xtab(data$class2,data$ola,
show.col.prc=TRUE,
var.labels=c("Posición de clase 2","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de la Posición de clase 2, por ola")
data$class2a <- factor(data$class2,
levels=c("Expert managers",
"Petit bourgeoisie",
"Informal",
"Experts",
"Supervisors",
"Workers",
"Desocupados/Retirados"))
# Tabla de frecuencias y porcentajes
sjt.xtab(data$class2a,data$ola,
show.col.prc=TRUE,
var.labels=c("Posición de clase 2 a","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de la Posición de clase 2 a, por ola")
# Identificar los valores de "class1" en la ola 3
class1_ola3 <- data %>%
filter(ola==3) %>%
select(idencuesta,class1) %>%
rename(class3=class1) # Renombrar "class2" a "class3"
# Unir esta información con la base de datos original
data <- data %>%
left_join(class1_ola3, by = "idencuesta")
# Tabla de frecuencias y porcentajes
sjt.xtab(data$class3,data$ola,
show.col.prc=TRUE,
var.labels=c("Posición de clase 3","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de la Posición de clase 3, por ola")
# Identificar los valores de "class1a" en la ola 3
class1a_ola3 <- data %>%
filter(ola==3) %>%
select(idencuesta,class1a) %>%
rename(class3a=class1a) # Renombrar "class2" a "class3"
# Unir esta información con la base de datos original
data <- data %>%
left_join(class1a_ola3,by="idencuesta")
# Tabla de frecuencias y porcentajes
sjt.xtab(data$class3a,data$ola,
show.col.prc=TRUE,
var.labels=c("Posición de clase 3 a","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de la Posición de clase 3 a, por ola")
# Identificar los valores de "class1" en la ola 3
class2_ola3 <- data %>%
filter(ola==3) %>%
select(idencuesta,class2) %>%
rename(class4=class2) # Renombrar "class2" a "class3"
# Unir esta información con la base de datos original
data <- data %>%
left_join(class2_ola3,by="idencuesta")
# Tabla de frecuencias y porcentajes
sjt.xtab(data$class4,data$ola,
show.col.prc=TRUE,
var.labels=c("Posición de clase 4","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de la Posición de clase 4, por ola")
# Identificar los valores de "class1" en la ola 3
class2a_ola3 <- data %>%
filter(ola==3) %>%
select(idencuesta,class2a) %>%
rename(class4a=class2a) # Renombrar "class2" a "class3"
# Unir esta información con la base de datos original
data <- data %>%
left_join(class2a_ola3,by="idencuesta")
# Tabla de frecuencias y porcentajes
sjt.xtab(data$class4a,data$ola,
show.col.prc=TRUE,
var.labels=c("Posición de clase 4 a","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de la Posición de clase 4 a, por ola")
# Recodficar
data$pol_id <- car::recode(data$c15,
recodes=c("c(11,12,-888,-999)='No se identifica';
c(0,1,2,3,4)='Izquierda';
c(5)='Centro';
c(6,7,8,9,10)='Derecha'"),
as.factor=TRUE,
levels=c('Izquierda',
'Centro',
'Derecha',
'No se identifica'))
# Tabla de frecuencias y porcentajes
sjt.xtab(data$pol_id,data$ola,
show.col.prc=TRUE,
var.labels=c("Identificación política","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de Identificación Política, por ola")
# Recodficar
data <- data %>%
mutate(pol_interes = c13)
# Recodficar
data <- data %>%
mutate(pol_interes = c13)
# Tabla de frecuencias y porcentajes
sjt.xtab(data$pol_interes,data$ola,
show.col.prc=TRUE,
var.labels=c("Interés en la política","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de Trabajadores/as interesados en la política, por ola")
class(data$pol_interes)

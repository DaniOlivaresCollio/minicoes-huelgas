data$brecha_just <- log(data$just_gerente/data$just_obrero)
data$brecha_gerente <- log(data$perc_gerente/data$just_gerente)
data$brecha_obrero <- log(data$perc_obrero/data$just_obrero)
summary(data$brecha_perc)
summary(data$brecha_just)
summary(data$brecha_gerente)
summary(data$brecha_obrero)
# Crear variable sector
data <- data %>%
mutate(metrop=if_else(region_cod==13,1,0))
# Tabla de frecuencias y porcentajes
sjt.xtab(data$metrop,data$ola,
show.col.prc=TRUE,
var.labels=c("Región Metropolitana","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de variable Región Metropolitana, por ola")
data <- data[!is.na(data$educ), ]
data$educ <- car::recode(data$educ,
recodes=c("c(1,2,3)='Básica';
c(4,5)='Media';
c(6,7)='Técnica';
c(8,9,10)='Superior'"),
as.factor=TRUE,
levels=c('Básica',
'Media',
'Técnica',
'Superior'))
# Tabla de frecuencias y porcentajes
sjt.xtab(data$educ,data$ola,
show.col.prc=TRUE,
var.labels=c("Educación","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de variable Educación, por ola")
# data <- data[!is.na(data$c33), ]
data$class_id <- car::recode(data$c33,
recodes=c("c(1,2)='Baja';
c(3)='Media';
c(4,5)='Alta'"),
as.factor=TRUE,
levels=c('Baja',
'Media',
'Alta'))
# Crear una columna con la variable class_id adelantada una ola
data <- data %>%
group_by(idencuesta) %>%  # Agrupa por id para trabajar en cada individuo
mutate(class_id_lagged=if_else(ola==2,lag(as.character(class_id),n=1),NA_character_)) %>%  # Desplaza class_id solo para la ola 2
ungroup() %>%
# Rellenar los valores NA (de las olas que no estaban) en la variable original
mutate(class_id=ifelse(!is.na(class_id),as.character(class_id),class_id_lagged)) %>%  # Sustituye valores de class_id si es NA solo con la variable desplazada
mutate(class_id=factor(class_id)) %>%  # Convierte de nuevo a factor
select(-class_id_lagged)  # Elimina la columna temporal
# Volver a establecer niveles
data$class_id <- factor(data$class_id,
levels=c("Baja",
"Media",
"Alta"))
# Tabla de frecuencias y porcentajes
sjt.xtab(data$class_id,data$ola,
show.col.prc=TRUE,
var.labels=c("Identidad de Clase","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de variable Identidad de Clase, por ola")
data <- data[!is.na(data$d01_01), ]
data <- data %>%
mutate(class_estatus=d01_01)
# Tabla de frecuencias y porcentajes
sjt.xtab(data$class_estatus,data$ola,
show.col.prc=TRUE,
var.labels=c("Estatus social subjetivo","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de variable Estatus social subjetivo, por ola")
#Impute midpoint of income ranges
data$m14_rec <- as.numeric(car::recode(data$m14,
"1=20000;
2=62500;
3=105000;
4=147500;
5=190000;
6=220000;
7=255000;
8=300000;
9=340000;
10=380000;
11=432500;
12=502500;
13=602500;
14=757500;
15=1075000;
16=1300000"))
#Impute midpoint of income ranges (2021)
data$m14b_rec <- as.numeric(car::recode(data$m14b,
"1=125000;
2=300000;
3=400000;
4=575000;
5=700000;
c(9,10,11,12,16)=NA"))
#Recode DK/DA of Income to NA
data$m13_rec <- as.numeric(car::recode(data$m13,"c(-888,-999)=NA"))
#replace NA of income with new imputed variable
data$m13_imp <- ifelse(!is.na(data$m13_rec),data$m13_rec,data$m14_rec)
summary(data$m13_imp)
data$m13_imp <- ifelse(is.na(data$m13_imp),data$m14b_rec,data$m13_imp)
summary(data$m13_imp)
data$ingreso <- data$m13_imp
data$ingreso_log <- log(data$ingreso)
data$edad2 <- (data$edad)**2
# Crear variable binaria: female
data <- mutate(data,
female=if_else(sexo==2,1,0))
# Tabla de frecuencias y porcentajes
sjt.xtab(data$female,data$ola,
show.col.prc=TRUE,
var.labels=c("Female","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de Mujeres, por ola")
# Tabla de frecuencias y porcentajes
sjt.xtab(data$voto_deber,data$ola,
show.col.prc=TRUE,
var.labels=c("Habla de política","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de Habla de política, por ola")
# Tabla de frecuencias y porcentajes
sjt.xtab(data$voto_deber,data$ola,
show.col.prc=TRUE,
var.labels=c("Votar es mi deber como ciudadano","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de Votar es mi deber como ciudadano, por ola")
class(data$voto_deber)
table(data$voto_deber)
# Tabla de frecuencias y porcentajes
sjt.xtab(data$voto_influye,data$ola,
show.col.prc=TRUE,
var.labels=c("Mi voto influye","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de Mi voto influye, por ola")
class(data$voto_influye)
table(data$voto_influye)
data <- data %>%
mutate(inf_sup=c18_01)
# Tabla de frecuencias y porcentajes
sjt.xtab(data$inf_sup,data$ola,
show.col.prc=TRUE,
var.labels=c("Sociedad requiere grupos inferiores y superiores","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de Sociedad requiere grupos inferiores y superiores, por ola")
data <- data %>%
mutate(mismas_oportunidades=c18_02)
# Tabla de frecuencias y porcentajes
sjt.xtab(data$mismas_oportunidades,data$ola,
show.col.prc=TRUE,
var.labels=c("Se debe dar a todos las mismas oportunidades","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de Se debe dar a todos las mismas oportunidades, por ola")
data <- data %>%
mutate(igualar_condiciones=c18_03)
# Tabla de frecuencias y porcentajes
sjt.xtab(data$igualar_condiciones,data$ola,
show.col.prc=TRUE,
var.labels=c("Se debe igualar las condiciones","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de Se debe igualar las condiciones, por ola")
data <- data %>%
mutate(cambio_posible=c18_08)
# Tabla de frecuencias y porcentajes
sjt.xtab(data$cambio_posible,data$ola,
show.col.prc=TRUE,
var.labels=c("Cambio social es posible","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de Cambio social es posible, por ola")
data <- data %>%
mutate(recompensa_esfuerzo=c18_09)
# Tabla de frecuencias y porcentajes
sjt.xtab(data$recompensa_esfuerzo,data$ola,
show.col.prc=TRUE,
var.labels=c("Las personas son recompensadas por su esfuerzo","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de Las personas son recompensadas por su esfuerzo, por ola")
data <- data %>%
mutate(recompensa_inteligencia=c18_10)
# Tabla de frecuencias y porcentajes
sjt.xtab(data$recompensa_inteligencia,data$ola,
show.col.prc=TRUE,
var.labels=c("Las personas son recompensadas por su inteligencia","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de Las personas son recompensadas por su inteligencia, por ola")
data <- data %>%
mutate(dif_ingreso=c18_11)
# Tabla de frecuencias y porcentajes
sjt.xtab(data$dif_ingreso,data$ola,
show.col.prc=TRUE,
var.labels=c("Las diferencias de ingreso son demasiado grandes","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de Las diferencias de ingreso son demasiado grandes, por ola")
data_2019 <- read_dta("https://github.com/justicia-distributiva/brechas-genero/raw/refs/heads/main/input/original/ISSP2019.dta")
pacman::p_load(dplyr, haven, stargazer, sjmisc, sjPlot, sjlabelled, tidyverse, summarytools)
data_2019 <- read_dta("https://github.com/justicia-distributiva/brechas-genero/raw/refs/heads/main/input/original/ISSP2019.dta")
load(url("https://github.com/justicia-distributiva/brechas-genero/raw/refs/heads/main/input/proc/inter_2019.RData"))
inter_2019 <- inter_2019 %>% mutate_at(vars(starts_with(c("v", "brecha"))), ~(as.numeric(.)))
inter_2019_exp <- inter_2019 %>% as_survey_design(ids = 1,
weights = WEIGHT)
pacman::p_load(dplyr, haven, stargazer, sjmisc, sjPlot, sjlabelled, tidyverse, summarytools, srvyr)
load(url("https://github.com/justicia-distributiva/brechas-genero/raw/refs/heads/main/input/proc/inter_2019.RData"))
inter_2019_exp <- inter_2019 %>% as_survey_design(ids = 1,
weights = WEIGHT)
brecha_pais_2019 <- inter_2019_exp %>% filter(!is.na(sex)) %>%
group_by(pais) %>%
summarise(brecha_perc_2019 = survey_median(brecha_perc_2019, na.rm = T),
brecha_just_2019 = survey_median(brecha_just_2019, na.rm = T)
) %>%
arrange(brecha_perc_2019)
brecha_pais_2019$pais <- factor(brecha_pais_2019$pais, labels = get_labels(inter_2019$pais))
View(brecha_pais_2019)
brecha_2019 <- brecha_pais_2019 %>%
pivot_longer(cols = c("brecha_perc_2019",
"brecha_just_2019"),
names_to = "year",
values_to = "mean")
View(brecha_2019)
class(brecha_2019$sex)
brecha_pais_2019$pais <- factor(brecha_pais_2019$pais, labels = c("Norway", "Denmark", "Sweden", "Bulgaria", "Philippines", "Croatia", "Czech Republic", "Iceland", "Lithuania", "Israel", "Italy", "Finland", "Thailand", "Slovenia", "Great Britain", "Japan", "New Zealand", "Suriname", "Switzerland", "Austria", "South Africa", "Venezuela", "Taiwan", "France", "Australia", "Chile", "Germany", "United States", "Russia"))
brecha_2019_ord <- arrange(brecha_pais_2019, mean)
brecha_2019_ord <- arrange(brecha_pais_2019, mean)
brecha_2019_ord <- arrange(brecha_pais_2019, brecha_perc_2019)
cleveland_2019 <- brecha_2019_ord %>% filter(year=="brecha_perc_2019") %>%
ggplot(aes(mean, pais)) +
theme_bw() +
geom_point(aes(color = sex, shape = sex), size = 3) +
xlab("Brecha percibida") +
xlim(0,50) +
labs(colour = "Sexo", shape="Sexo") +
theme(axis.text.y = element_text(colour = c(rep("black", 25), "red", rep("black", 3))),
legend.position = "right")
cleveland_2019 <- brecha_2019_ord %>%
ggplot(aes(brecha_perc_2019, pais)) +
theme_bw() +
geom_point(aes(color = sex, shape = sex), size = 3) +
xlab("Brecha percibida") +
xlim(0,50) +
labs(colour = "Sexo", shape="Sexo") +
theme(axis.text.y = element_text(colour = c(rep("black", 25), "red", rep("black", 3))),
legend.position = "right")
cleveland_2019
cleveland_2019 <- brecha_2019_ord %>%
ggplot(aes(brecha_perc_2019, pais)) +
theme_bw() +
geom_point(aes(), size = 3) +
xlab("Brecha percibida") +
xlim(0,50) +
#  labs(colour = "Sexo", shape="Sexo") +
theme(axis.text.y = element_text(colour = c(rep("black", 25), "red", rep("black", 3))),
legend.position = "right")
cleveland_2019
brecha_pais_2019 <- inter_2019_exp %>% filter(!is.na(sex)) %>%
group_by(pais) %>%
summarise(brecha_perc_2019 = survey_median(brecha_perc_2019, na.rm = T),
brecha_just_2019 = survey_median(brecha_just_2019, na.rm = T)
) %>%
arrange(brecha_perc_2019)
brecha_pais_2019$pais <- factor(brecha_pais_2019$pais, labels = get_labels(inter_2019$pais))
brecha_pais_2019 <- inter_2019_exp %>% filter(!is.na(sex)) %>%
group_by(pais) %>%
summarise(brecha_perc_2019 = survey_median(brecha_perc_2019, na.rm = T),
brecha_just_2019 = survey_median(brecha_just_2019, na.rm = T)
) %>%
arrange(brecha_perc_2019)
brecha_pais_2019$pais <- factor(brecha_pais_2019$pais, labels = get_labels(inter_2019$pais))
get_labels(brecha__pais_2019$pais)
get_labels(brecha_pais_2019$pais)
brecha_pais_2019$pais <- factor(brecha_pais_2019$pais, labels = c("Norway", "Denmark", "Sweden", "Bulgaria", "Philippines", "Croatia", "Czech Republic", "Iceland", "Lithuania", "Israel", "Italy", "Finland", "Thailand", "Slovenia", "Great Britain", "Japan", "New Zealand", "Suriname", "Switzerland", "Austria", "South Africa", "Venezuela", "Taiwan", "France", "Australia", "Chile", "Germany", "United States", "Russia"))
brecha_pais_2019 <- inter_2019_exp %>% filter(!is.na(sex)) %>%
group_by(pais) %>%
summarise(brecha_perc_2019 = survey_median(brecha_perc_2019, na.rm = T),
brecha_just_2019 = survey_median(brecha_just_2019, na.rm = T)
) %>%
arrange(brecha_perc_2019)
brecha_pais_2019$pais <- factor(brecha_pais_2019$pais, labels = get_labels(inter_2019$pais))
brecha_pais_2019$pais <- sub("^[0-9]+\\.\\s*[A-Z]{2}-", "", brecha_pais_2019$pais)
get_labels(brecha_pais_2019$pais)
brecha_2019_ord <- arrange(brecha_pais_2019, brecha_perc_2019)
View(brecha_2019_ord)
cleveland_2019 <- brecha_2019_ord %>%
ggplot(aes(brecha_perc_2019, pais)) +
theme_bw() +
geom_point(aes(), size = 3) +
xlab("Brecha percibida") +
xlim(0,50) +
#  labs(colour = "Sexo", shape="Sexo") +
theme(axis.text.y = element_text(colour = c(rep("black", 25), "red", rep("black", 3))),
legend.position = "right")
cleveland_2019
cleveland_2019 <- brecha_2019_ord %>%
ggplot(aes(arrange(brecha_perc_2019), pais)) +
theme_bw() +
geom_point(aes(), size = 3) +
xlab("Brecha percibida") +
xlim(0,50) +
#  labs(colour = "Sexo", shape="Sexo") +
theme(axis.text.y = element_text(colour = c(rep("black", 25), "red", rep("black", 3))),
legend.position = "right")
cleveland_2019
cleveland_2019 <- brecha_2019_ord %>%
ggplot(aes(brecha_perc_2019, pais)) +
theme_bw() +
geom_point(aes(), size = 3) +
xlab("Brecha percibida") +
xlim(0,50) +
#  labs(colour = "Sexo", shape="Sexo") +
theme(axis.text.y = element_text(colour = c(rep("black", 25), "red", rep("black", 3))),
legend.position = "right")
cleveland_2019
cleveland_2019 <- brecha_pais_2019 %>%
ggplot(aes(brecha_perc_2019, pais)) +
theme_bw() +
geom_point(aes(), size = 3) +
xlab("Brecha percibida") +
xlim(0,50) +
#  labs(colour = "Sexo", shape="Sexo") +
theme(axis.text.y = element_text(colour = c(rep("black", 25), "red", rep("black", 3))),
legend.position = "right")
cleveland_2019
brecha_pais <- brecha_pais_2019 %>%
mutate(pais = factor(pais, levels = .$pais))
View(brecha_pais)
get_labels(brecha_pais$pais)
brecha_2019_ord <- arrange(brecha_pais, brecha_perc_2019)
cleveland_2019 <- brecha_pais %>%
ggplot(aes(brecha_perc_2019, pais)) +
theme_bw() +
geom_point(aes(), size = 3) +
xlab("Brecha percibida") +
xlim(0,50) +
#  labs(colour = "Sexo", shape="Sexo") +
theme(axis.text.y = element_text(colour = c(rep("black", 25), "red", rep("black", 3))),
legend.position = "right")
cleveland_2019
cleveland_2019 <- brecha_pais %>%
ggplot(aes(brecha_perc_2019, pais)) +
theme_bw() +
geom_point(aes(), size = 3) +
xlab("Brecha percibida") +
xlim(0,40) +
#  labs(colour = "Sexo", shape="Sexo") +
theme(axis.text.y = element_text(colour = c(rep("black", 25), "red", rep("black", 3))),
legend.position = "right")
cleveland_2019
cleveland_2019 <- brecha_pais %>%
ggplot(aes(brecha_perc_2019, pais)) +
theme_bw() +
geom_point(aes(), size = 3) +
xlab("Brecha percibida") +
xlim(0,35) +
#  labs(colour = "Sexo", shape="Sexo") +
theme(axis.text.y = element_text(colour = c(rep("black", 25), "red", rep("black", 3))),
legend.position = "right")
cleveland_2019
cleveland_2019 <- brecha_pais %>%
ggplot(aes(brecha_perc_2019, pais)) +
theme_bw() +
geom_point(aes(), size = 3) +
xlab("Brecha percibida") +
xlim(0,35) +
theme(axis.text.y = element_text(colour = c(rep("black", 26), "red", rep("black", 2))),
legend.position = "right")
cleveland_2019
cleveland_2019 <- brecha_pais %>%
ggplot(aes(brecha_perc_2019, pais)) +
theme_bw() +
geom_point(aes(), size = 3) +
xlab("Perceived gap") +
ylab("Country")
xlim(0,35) +
theme(axis.text.y = element_text(colour = c(rep("black", 26), "red", rep("black", 2))),
legend.position = "right")
cleveland_2019 <- brecha_pais %>%
ggplot(aes(brecha_perc_2019, pais)) +
theme_bw() +
geom_point(aes(), size = 3) +
xlab("Perceived gap") +
ylab("Country") +
xlim(0,35) +
theme(axis.text.y = element_text(colour = c(rep("black", 26), "red", rep("black", 2))),
legend.position = "right")
cleveland_2019
cleveland_2019 <- brecha_pais %>%
ggplot(aes(brecha_perc_2019, pais)) +
theme_bw() +
geom_point(aes(), size = 3) +
xlab("Average gap") +
ylab("Country") +
xlim(0,35) +
theme(axis.text.y = element_text(colour = c(rep("black", 26), "red", rep("black", 2))),
legend.position = "right")
cleveland_2019
pais <- brecha_2019 %>% filter(year=="brecha_just_2019") %>%
arrange(mean)
brecha_2019_just <- brecha_2019
brecha_2019_just$pais <- factor(brecha_2019$pais, levels = pais$pais)
View(brecha_2019_just)
pais <- brecha_pais_2019 %>% filter(year=="brecha_just_2019") %>%
arrange(mean)
pais <- brecha_pais_2019 %>% filter(year=="brecha_just_2019") %>%
arrange(brecha_just_2019)
brecha_pais_2019 <- inter_2019_exp %>% filter(!is.na(sex)) %>%
group_by(pais) %>%
summarise(brecha_perc_2019 = survey_median(brecha_perc_2019, na.rm = T),
brecha_just_2019 = survey_median(brecha_just_2019, na.rm = T)
) %>%
arrange(brecha_perc_2019)
brecha_pais_2019$pais <- factor(brecha_pais_2019$pais, labels = get_labels(inter_2019$pais))
brecha_pais_2019$pais <- sub("^[0-9]+\\.\\s*[A-Z]{2}-", "", brecha_pais_2019$pais)
brecha_pais <- brecha_pais_2019 %>%
mutate(pais = factor(pais, levels = .$pais))
cleveland_2019 <- brecha_pais %>%
ggplot(aes(brecha_just_2019, pais)) +
theme_bw() +
geom_point(aes(), size = 3) +
xlab("Average gap") +
ylab("Country") +
xlim(0,35) +
theme(axis.text.y = element_text(colour = c(rep("black", 26), "red", rep("black", 2))),
legend.position = "right")
cleveland_2019
ggplot(brecha_pais) +
theme_bw() +
geom_point(aes(x = brecha_perc_2019, y = pais, color = "brecha_perc_2019", shape = "brecha_perc_2019"), size = 3) +
geom_point(aes(x = brecha_just_2019, y = pais, color = "brecha_just_2019", shape = "brecha_just_2019"), size = 3) +
xlab("Average gap") +
ylab("Country") +
xlim(0, 35) +
scale_color_manual(name = "Tipo de brecha", values = c("brecha_perc_2019" = "blue", "brecha_just_2019" = "red")) +
scale_shape_manual(name = "Tipo de brecha", values = c("brecha_perc_2019" = 16, "brecha_just_2019" = 17)) +
theme(axis.text.y = element_text(colour = c(rep("black", 26), "red", rep("black", 2))),
legend.position = "right")
ggplot(brecha_pais) +
theme_bw() +
geom_line(aes(x = brecha_perc_2019, y = pais, group = pais), color = "black", size = 0.5) +
geom_line(aes(x = brecha_just_2019, y = pais, group = pais), color = "black", size = 0.5) +
geom_point(aes(x = brecha_perc_2019, y = pais, fill = "perceived gap"), shape = 21, size = 3, color = "black") +
geom_point(aes(x = brecha_just_2019, y = pais, fill = "just gap"), shape = 21, size = 3, color = "black", fill = "white") +
xlab("Average gap") +
ylab("Country") +
xlim(0, 35) +
scale_fill_manual(name = "Gap", values = c("perceived gap" = "black", "just gap" = "white")) +
theme(axis.text.y = element_text(colour = c(rep("black", 26), "red", rep("black", 2))),
legend.position = "right")
ggplot(brecha_pais) +
theme_bw() +
geom_line(aes(x = brecha_perc_2019, y = pais, group = pais), color = "black", size = 0.5) +
geom_line(aes(x = brecha_just_2019, y = pais, group = pais), color = "black", size = 0.5) +
geom_point(aes(x = brecha_perc_2019, y = pais, fill = "perceived gap"), shape = 21, size = 3, color = "black") +
geom_point(aes(x = brecha_just_2019, y = pais, fill = "just gap"), shape = 21, size = 3, color = "black", fill = "white") +
xlab("Average gap") +
ylab("Country") +
xlim(0, 35) +
scale_fill_manual(name = "Gap", values = c("perceived gap" = "black", "just gap" = "black")) +
theme(axis.text.y = element_text(colour = c(rep("black", 26), "red", rep("black", 2))),
legend.position = "right")
ggplot(brecha_pais) +
theme_bw() +
geom_line(aes(x = brecha_perc_2019, y = pais, group = pais), color = "black", size = 0.5) +
geom_line(aes(x = brecha_just_2019, y = pais, group = pais), color = "black", size = 0.5) +
geom_point(aes(x = brecha_perc_2019, y = pais, fill = "perceived gap"), shape = 21, size = 3, color = "black") +
geom_point(aes(x = brecha_just_2019, y = pais, fill = "just gap"), shape = 21, size = 3, color = "black", fill = "white") +
xlab("Average gap") +
ylab("Country") +
xlim(0, 35) +
scale_fill_manual(name = "Gap", values = c("perceived gap" = "black", "just gap" = "black")) +
theme(axis.text.y = element_text(colour = c(rep("black", 26), "red", rep("black", 2))),
legend.position = "right")
ggplot(brecha_pais) +
theme_bw() +
geom_line(aes(x = brecha_perc_2019, y = pais, group = pais), color = "black", size = 0.5) +
geom_line(aes(x = brecha_just_2019, y = pais, group = pais), color = "black", size = 0.5) +
geom_point(aes(x = brecha_perc_2019, y = pais, fill = "perceived gap"), shape = 21, size = 3, color = "black") +
geom_point(aes(x = brecha_just_2019, y = pais, fill = "just gap"), shape = 21, size = 3, color = "black") +
xlab("Average gap") +
ylab("Country") +
xlim(0, 35) +
scale_fill_manual(name = "Gap",
values = c("perceived gap" = "black", "just gap" = "white"),
breaks = c("perceived gap", "just gap")) +
theme(axis.text.y = element_text(colour = c(rep("black", 26), "red", rep("black", 2))),
legend.position = "right")
ggplot(brecha_pais) +
theme_bw() +
geom_line(aes(x = brecha_perc_2019, y = pais, group = pais), color = "black", size = 0.5) +
geom_line(aes(x = brecha_just_2019, y = pais, group = pais), color = "black", size = 0.5) +
geom_point(aes(x = brecha_perc_2019, y = pais, fill = "Perceived gap"), shape = 21, size = 3, color = "black") +
geom_point(aes(x = brecha_just_2019, y = pais, fill = "Just gap"), shape = 21, size = 3, color = "black") +
xlab("Average gap") +
ylab("Country") +
xlim(0, 35) +
scale_fill_manual(name = "Gap",
values = c("perceived gap" = "black", "just gap" = "white"),
breaks = c("perceived gap", "just gap")) +
theme(axis.text.y = element_text(colour = c(rep("black", 26), "red", rep("black", 2))),
legend.position = "right")
ggplot(brecha_pais) +
theme_bw() +
geom_line(aes(x = brecha_perc_2019, y = pais, group = pais), color = "black", size = 0.5) +
geom_line(aes(x = brecha_just_2019, y = pais, group = pais), color = "black", size = 0.5) +
geom_point(aes(x = brecha_perc_2019, y = pais, fill = "Perceived gap"), shape = 21, size = 3, color = "black") +
geom_point(aes(x = brecha_just_2019, y = pais, fill = "Just gap"), shape = 21, size = 3, color = "black") +
xlab("Average gap") +
ylab("Country") +
xlim(0, 35) +
scale_fill_manual(name = "Gap",
values = c("Perceived gap" = "black", "Just gap" = "white"),
breaks = c("Perceived gap", "Just gap")) +
theme(axis.text.y = element_text(colour = c(rep("black", 26), "red", rep("black", 2))),
legend.position = "right")

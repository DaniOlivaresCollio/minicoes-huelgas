show.col.prc = TRUE,
var.labels = c("Sector","Ola"),
show.summary = FALSE,
title = "Frecuencias y porcentajes de variable Sector, por ola")
frq(data$sector)
# Carga bbdd con comparacion 88 y 08
isco08_88 <- read_excel(here::here("input/isco08-88.xls"))
isco08_88 <- isco08_88 %>%
rename(isco08=`ISCO 08 Code`,isco88=`ISCO-88 code`)
# Exploración
valores_repetidos <- table(isco08_88$isco88) # Contar los valores repetidos en la variable
valores_repetidos <- valores_repetidos[valores_repetidos > 1]
valores_repetidos <- table(isco08_88$isco08) # Contar los valores repetidos en la variable
valores_repetidos <- valores_repetidos[valores_repetidos > 1]
# data %>%
#   group_by(ola) %>%
#   summarise(datos_validos = sum(!is.na(ciuo88_m03)))
#
# data %>%
#   group_by(ola) %>%
#   summarise(datos_validos = sum(!is.na(ciuo08_m03)))
# CIUO - ISCO: Recodificación 88->08 4 digitos en datos elsoc
indices <- match(data$ciuo88_m03,isco08_88$isco88)
data$ciuo08_rec <- isco08_88$isco08[indices]
data$ciuo08_rec <- as.numeric(data$ciuo08_rec) # es solo la recodificación de las que eran 88 en data, es decir, año 2016
# Creación variable isco08 con ciuo08_m03 y ciuo08_rec (ex ciuo88_m03) 4 digitos
data$isco08 <- ifelse(!is.na(data$ciuo08_rec),data$ciuo08_rec,data$ciuo08_m03) # es la unión en una variable de todo en 08
# Crear una columna con la variable "isco08" adelantada una ola
data <- data %>%
# arrange(idencuesta, ola) %>%  # Ordena por id y ola, por si acaso no está ordenado
group_by(idencuesta) %>%        # Agrupa por id para trabajar en cada individuo
mutate(isco08_lagged=lag(isco08,n=1)) %>%  # Desplaza isco08 a la siguiente ola
ungroup()
# Rellenar los valores NA en la variable original
data <- data %>%
mutate(isco08=ifelse(!is.na(isco08),isco08,isco08_lagged)) %>%  # Si isco08 es NA, sustituir con el valor de la ola anterior
select(-isco08_lagged)                 # Elimina la columna temporal
# CIUO - ISCO: creación de variables con 1 dígito
data$isco08_1d <- as.character(data$isco08)
data$isco08_1d <- substr(data$isco08_1d,1,1)
data$isco08_1d <- as.numeric(data$isco08_1d)
# CIUO - ISCO: creación de variables con 2 dígitos
data$isco08_2d <- as.character(data$isco08)
data$isco08_2d <- substr(data$isco08_2d,1,2)
data$isco08_2d <- as.numeric(data$isco08_2d)
# Tabla de frecuencias y porcentajes 1 dígito
sjt.xtab(data$isco08_1d,data$ola,
show.col.prc=TRUE,
var.labels=c("CIUO08","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de Ocupación con 1 dígito, por ola")
# Tabla de frecuencias y porcentajes 2 dígitos
sjt.xtab(data$isco08_2d,data$ola,
show.col.prc=TRUE,
var.labels=c("CIUO08","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de Ocupación con 2 dígitos, por ola")
# Creación variable Nivel de cualificación
data <- mutate(data,
cualificacion = case_when(isco08_2d <= 34 & educ >= 9 ~ "Experts",
isco08_2d <= 34 & educ < 9 ~ "Skilled",
isco08_2d == 35 ~ "Skilled",
isco08_2d >= 41 & isco08_2d <= 44 ~ "Skilled",
isco08_2d == 53 ~ "Skilled",
isco08_2d == 51 & educ <= 5 ~ "Unskilled",
isco08_2d == 51 & educ > 5 ~ "Skilled",
isco08_2d == 54 & educ <= 5 ~ "Unskilled",
isco08_2d == 54 & educ > 5 ~ "Skilled",
isco08_2d == 61 & educ <= 5 ~ "Unskilled",
isco08_2d == 61 & educ > 5 ~ "Skilled",
isco08_2d == 62 & educ <= 5 ~ "Unskilled",
isco08_2d == 62 & educ > 5 ~ "Skilled",
isco08_2d == 71 & educ <= 5 ~ "Unskilled",
isco08_2d == 71 & educ > 5 ~ "Skilled",
isco08_2d == 72 & educ <= 5 ~ "Unskilled",
isco08_2d == 72 & educ > 5 ~ "Skilled",
isco08_2d == 73 & educ <= 5 ~ "Unskilled",
isco08_2d == 73 & educ > 5 ~ "Skilled",
isco08_2d == 74 & educ <= 5 ~ "Unskilled",
isco08_2d == 74 & educ > 5 ~ "Skilled",
isco08_2d == 75 & educ <= 5 ~ "Unskilled",
isco08_2d == 75 & educ > 5 ~ "Skilled",
isco08_2d == 81 & educ <= 5 ~ "Unskilled",
isco08_2d == 81 & educ > 5 ~ "Skilled",
isco08_2d == 52 ~ "Unskilled",
isco08_2d == 61 ~ "Unskilled",
isco08_2d == 63 ~ "Unskilled",
isco08_2d == 75 ~ "Unskilled",
isco08_2d == 82 ~ "Unskilled",
isco08_2d == 83 ~ "Unskilled",
isco08_2d == 90 ~ "Unskilled"))
# Tabla de frecuencias y porcentajes
sjt.xtab(data$cualificacion, data$ola,
show.col.prc = TRUE,
var.labels = c("Nivel de cualificación","Ola"),
show.summary = FALSE,
title = "Frecuencias y porcentajes del Nivel de Cualificación, por ola")
# Recodificar variable CIIU 3 para que queden de 4 dígitos
data$ciiu3 <- sprintf("%04d",data$ciiu3_m04)
# Recodificar variable CIIU 4 para que queden de 4 dígitos
data$ciiu4 <- sprintf("%04d",data$ciiu4_m04)
# data %>%
#   group_by(ola) %>%
#   summarise(datos_validos = sum(!is.na(ciiu3_m04)))
#
# data %>%
#   group_by(ola) %>%
#   summarise(datos_validos = sum(!is.na(ciiu4_m04)))
# Creación de variable CIIU 4 con CIIU 3
## Carga bbdd con comparacion 31 y 4
isic4_isic31 <- read_csv(here::here("input/ISIC4_ISIC31.txt"))
## Recodificación CIIU 3 -> CIIU 4
indices <- match(data$ciiu3,isic4_isic31$ISIC31code)
data$ciiu4_rec <- isic4_isic31$ISIC4code[indices]
# Creación variable isic4 con ciiu4 y ciiu4_rec (ex ciiu3) 4 digitos
data$isic4 <- ifelse(!is.na(data$ciiu4_rec),data$ciiu4_rec,data$ciiu4) # es la unión en una variable de todo en ciiu4
# Crear una columna con la variable "isic4" adelantada una ola
data$isic4 <- as.numeric(data$isic4)
data <- data %>%
arrange(ola) %>%  # Ordena por ola, por si acaso no está ordenado
group_by(idencuesta) %>%        # Agrupa por id para trabajar en cada individuo
mutate(isic4_lagged=lag(isic4,n=1)) %>%  # Desplaza "isic4" a la siguiente ola
ungroup()
# Rellenar los valores NA en la variable original
data <- data %>%
mutate(isic4=ifelse(!is.na(isic4),isic4,isic4_lagged)) %>%  # Si isic4 es NA, sustituir con el valor de la ola anterior
select(-isic4_lagged)                 # Elimina la columna temporal
# CIIU 4: creación de variable con 2 dígitos
data$isic4 <- sprintf("%04d",data$isic4)
data$isic4_2d <- as.character(data$isic4)
data$isic4_2d <- substr(data$isic4,1,2)
data$isic4_2d <- as.numeric(data$isic4_2d)
# Creación de variable con letra
data <- mutate(data,
rama=case_when(isic4_2d<=03~"A",
isic4_2d>=05&isic4_2d<=09~"B",
isic4_2d>=10&isic4_2d<=33~"C",
isic4_2d==35~"D",
isic4_2d>=36&isic4_2d<=39~"E",
isic4_2d>=41&isic4_2d<=43~"F",
isic4_2d>=45&isic4_2d<=47~"G",
isic4_2d>=49&isic4_2d<=53~"H",
isic4_2d>=55&isic4_2d<=56~"I",
isic4_2d>=58&isic4_2d<=63~"J",
isic4_2d>=64&isic4_2d<=66~"K",
isic4_2d==68~"L",
isic4_2d>=69&isic4_2d<=75~"M",
isic4_2d>=77&isic4_2d<=82~"N",
isic4_2d==84~"O",
isic4_2d==85~"P",
isic4_2d>=86&isic4_2d<=88~"Q",
isic4_2d>=90&isic4_2d<=93~"R",
isic4_2d>=94&isic4_2d<=96~"S",
isic4_2d>=97&isic4_2d<=98~"T",
isic4_2d==99~"U"))
# Tabla de frecuencias y porcentajes
sjt.xtab(data$rama,data$ola,
show.col.prc=TRUE,
var.labels=c("Rama de Actividad Económica","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de la Rama de Actividad Económica, por ola")
# Creación de variable rama 2
data <- mutate(data,
rama_2=case_when(rama=="A"~"A",
rama=="B"|rama=="C"~"BC",
rama=="D"|rama=="E"|rama=="F"~"DEF",
rama=="G"|rama=="I"~"GI",
rama=="H"~"H",
rama=="J"|rama=="K"|rama=="L"|rama=="M"|rama=="N"~"JKLMN",
rama=="O"~"O",
rama=="P"|rama=="Q"~"PQ",
rama=="R"|rama=="S"|rama=="U"~"RSU",
rama=="T"~"T"))
# Tabla de frecuencias y porcentajes
sjt.xtab(data$rama_2,data$ola,
show.col.prc=TRUE,
var.labels=c("Rama 2","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de la Rama 2, por ola")
# Crear variable supervisa==1, no supervisa==0
data <- data %>%
mutate(supervisa=case_when(m06 == 0 ~ 0,
m06 >= 1 ~ 1,
m06 == -888 ~ NA,
m06 == -999 ~ NA))
# Tabla de frecuencias y porcentajes
sjt.xtab(data$supervisa, data$ola,
show.col.prc = TRUE,
var.labels = c("Supervisa","Ola"),
show.summary = FALSE,
title = "Frecuencias y porcentajes de variable Supervisa, por ola")
# Crear una columna con la variable "m06" adelantada una ola
data <- data %>%
arrange(ola) %>%  # Ordena por ola, por si acaso no está ordenado
group_by(idencuesta) %>%        # Agrupa por id para trabajar en cada individuo
mutate(m06_lagged=lag(m06,n=1)) %>%  # Desplaza "m06" a la siguiente ola
ungroup()
# Rellenar los valores NA en la variable original
data <- data %>%
mutate(m06_full=ifelse(!is.na(m06),m06,m06_lagged)) %>%  # Si m06 es NA, sustituir con el valor de la ola anterior
select(-m06_lagged)
# Crear variable supervisa==1, no supervisa==0
data <- data %>%
mutate(supervisa=case_when(m06_full==0~0,
m06_full>=1~1,
m06_full==-888~NA,
m06_full==-999~NA))
# Tabla de frecuencias y porcentajes
sjt.xtab(data$supervisa,data$ola,
show.col.prc=TRUE,
var.labels=c("Supervisa","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de variable Supervisa, por ola")
# Crear variable supervisa==1, no supervisa==0
data <- data %>%
mutate(supervisa=case_when(m06_full==0~0,
m06_full>=1~1,
m06_full==-888~NA,
m06_full==-999~NA))
# Tabla de frecuencias y porcentajes
sjt.xtab(data$supervisa,data$ola,
show.col.prc=TRUE,
var.labels=c("Supervisa","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de variable Supervisa, por ola")
# Creación de variable posición de clase
data <- mutate(data,
class1=case_when(rel_empleo=="Patrón/a o empleador/a"|rel_empleo=="Trabaja solo, no tiene empleados"&educ>=9~"Petit bourgeoisie",
rel_empleo=="Trabaja solo, no tiene empleados"&educ<9~"Informal",
cualificacion=="Experts"&supervisa==1~"Expert managers",
cualificacion=="Experts"&supervisa==0~"Experts",
cualificacion=="Skilled"|cualificacion=="Unskilled"&supervisa==1~"Supervisors",
cualificacion=="Skilled"|cualificacion=="Unskilled"&supervisa==0~"Workers"))
data$class1 <- factor(data$class1,
levels = c("Petit bourgeoisie",
"Informal",
"Expert managers",
"Experts",
"Supervisors",
"Workers"))
# Tabla de frecuencias y porcentajes
sjt.xtab(data$class1, data$ola,
show.col.prc = TRUE,
var.labels = c("Posición de clase 1","Ola"),
show.summary = FALSE,
title = "Frecuencias y porcentajes de la Posición de clase 1, por ola")
frq(data$rel_empleo)
frq(data$cualificacion)
frq(data$supervisa)
frq(data$actividad)
# Creación de variable posición de clase
data <- mutate(data,
class2=case_when(rel_empleo=="Patrón/a o empleador/a"|rel_empleo=="Trabaja solo, no tiene empleados"&educ>=9~"Petit bourgeoisie",
rel_empleo=="Trabaja solo, no tiene empleados"&educ<9~"Informal",
cualificacion=="Experts"&supervisa==1~"Expert managers",
cualificacion=="Experts"&supervisa==0~"Experts",
cualificacion=="Skilled"|cualificacion=="Unskilled"&supervisa==1~"Supervisors",
cualificacion=="Skilled"|cualificacion=="Unskilled"&supervisa==0~"Workers",
actividad=="Jubilado o pensionado"|actividad=="Desempleado, buscando trabajo"~"Desocupados/Retirados"))
data$class2 <- factor(data$class2,
levels = c("Petit bourgeoisie",
"Informal",
"Expert managers",
"Experts",
"Supervisors",
"Workers",
"Desocupados/Retirados"))
frq(data$class2)
frq(data$actividad)
# Recodficar
data <- data %>%
mutate(int_politica=car::recode(c13,
recodes=c("1='Nada interesado';
2='Poco interesado';
3='Algo interesado';
4='Bastante interesado';
5='Muy interesado'"),
as.factor=TRUE, # convertir a factor
levels=c("Nada interesado",
"Poco interesado",
"Algo interesado",
"Bastante interesado",
"Muy interesado"))) # ordenar niveles
# Tabla de frecuencias y porcentajes
sjt.xtab(data$c13,data$ola,
show.col.prc=TRUE,
var.labels=c("Interés en la política","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de Trabajadores/as interesados en la política, por ola")
hist(data$perc_gerente)
frq(data$perc_gerente)
options(scipen = 999)
frq(data$perc_gerente)
options(scipen = 9999)
frq(data$perc_gerente)
options(scipen = 99999)
frq(data$perc_gerente)
summary(data$perc_gerente)
data <- data %>% filter(perc_gerente<10000000000000000000)
summary(data$perc_gerente)
hist(data$perc_gerente)
frq(data$perc_gerente)
data <- data %>% filter(perc_gerente>100000)
data <- data %>% filter(perc_gerente<1200000000)
hist(data$perc_gerente)
summary(data$perc_obrero)
data <- data %>% filter(perc_obrero<280000000)
hist(data$perc_obrero)
summary(data$perc_obrero)
data <- data %>% filter(perc_obrero<35000000)
hist(data$perc_obrero)
summary(data$perc_obrero)
data <- data %>% filter(perc_obrero<21000000)
summary(data$perc_obrero)
frq(data$perc_obrero)
pacman::p_load(tidyverse,
knitr,
bookdown,
car,
sjmisc,
sjPlot,
sjlabelled,
psych,
kableExtra,
gridExtra,
lubridate,
viridis,
statar,
readxl,
tinytex,
ggrepel,
ggalluvial,
survey,
httr,
readr,
ggplot2,
labelled,
shadowtext,
lme4,
interacts)
pacman::p_load(tidyverse,
knitr,
bookdown,
car,
sjmisc,
sjPlot,
sjlabelled,
psych,
kableExtra,
gridExtra,
lubridate,
viridis,
statar,
readxl,
tinytex,
ggrepel,
ggalluvial,
survey,
httr,
readr,
ggplot2,
labelled,
shadowtext,
lme4,
interactions)
rm(list=ls())
options(scipen = 999)
library(pacman)
pacman::p_load(tidyverse,
knitr,
bookdown,
car,
sjmisc,
sjPlot,
sjlabelled,
psych,
kableExtra,
gridExtra,
lubridate,
viridis,
statar,
readxl,
tinytex,
ggrepel,
ggalluvial,
survey,
httr,
readr,
ggplot2,
labelled,
shadowtext,
lme4,
interactions)
load(here::here("output/elsoc-minicoes.Rdata"))
data <- data %>% filter(muestra==1)
# obtain the idencuesta for wave 7
ids <-
data %>%
select(idencuesta,ola) %>%
filter(ola==7) %>%
sjmisc::frq(idencuesta,show.na = F) %>% as.data.frame()
# filter data by the idencuesta of t7
data <-
data %>%
filter(idencuesta %in% ids$val)
data$ola <- factor(data$ola)
sjmisc::frq(data$class2)
data$class2 <- factor(data$class2, levels = c("Expert managers", "Petit bourgeoisie", "Experts", "Supervisors", "Informal", "Workers", "Desocupados/Retirados"))
# Political position ____________________________
data$pos_id <-
factor(
car::recode(
data$c15,
"c(11,12,-888,-999)='No se identifica';c(0,1,2,3,4)='Izquierda';
c(5)='Centro';c(6,7,8,9,10)='Derecha'"
),
levels = c('Izquierda', 'Centro', 'Derecha', 'No se identifica')
)
frq(data$class2)
data <- data %>%
dplyr::select(brecha_perc, brecha_just, brecha_obrero, brecha_gerente,
marcha, class2, sexo, edad, pos_id, idencuesta, ola, c13) %>%
na.omit()
frq(data$ola)
reg1 <- lmer(brecha_perc~ola+(1|idencuesta), data=data)
reg2 <- lmer(brecha_perc~ola+marcha+(1|idencuesta), data=data)
reg3 <- lmer(brecha_perc~ola+marcha+class2+(1|idencuesta), data=data)
reg4 <- lmer(brecha_perc~ola+marcha+class2+sexo+edad+(1|idencuesta), data=data)
reg5 <- lmer(brecha_perc~ola+marcha+class2+sexo+edad+pos_id+c13+(1|idencuesta), data=data)
reg6 <- lmer(brecha_perc~ola*class2+marcha+sexo+edad+pos_id+(1|idencuesta), data=data)
reg7 <- lmer(brecha_perc~ola*marcha+class2+sexo+edad+pos_id+(1|idencuesta), data=data)
texreg::knitreg(list(reg1, reg2, reg3, reg4, reg5, reg6, reg7),
custom.model.names=rep(c("Brecha percibida"),7))
?interactions::sim_slopes
interactions::sim_slopes(reg1, pred=ola)
interactions::sim_slopes(reg1, pred=brecha_perc, modx=ola)
interact <- lmer(lmer(brecha_perc~as.numeric(ola)*class2+marcha+sexo+edad+pos_id+(1|idencuesta), data=data))
interact <- lmer(brecha_perc~as.numeric(ola)*class2+marcha+sexo+edad+pos_id+(1|idencuesta), data=data)
interactions::sim_slopes(reg1, pred=ola, modx=class2)
interactions::sim_slopes(reg1, pred=class2, modx=ola)
interactions::sim_slopes(reg1, pred=marchar, modx=ola)
interactions::sim_slopes(reg1, pred=marcha, modx=ola)
interact <- lmer(brecha_perc~ola*marcha+class2+sexo+edad+pos_id+(1|idencuesta), data=data)
interactions::sim_slopes(interact, pred=marcha, modx=ola)
interact <- lmer(brecha_perc~as.numeric(ola)*marcha+class2+sexo+edad+pos_id+(1|idencuesta), data=data)
interactions::sim_slopes(interact, pred=marcha, modx=ola)
data$ola_num <- as.numeric(data$ola)
interact <- lmer(brecha_perc~ola_num*marcha+class2+sexo+edad+pos_id+(1|idencuesta), data=data)
interactions::sim_slopes(interact, pred=marcha, modx=ola)
interact <- lmer(brecha_perc~ola_num*as.numeric(marcha)+class2+sexo+edad+pos_id+(1|idencuesta), data=data)
interactions::sim_slopes(interact, pred=marcha, modx=ola)
interact <- lmer(brecha_perc~ola_num*marcha+class2+sexo+edad+pos_id+(1|idencuesta), data=data)
interactions::sim_slopes(interact, pred=marcha, modx=ola_num)
interactions::sim_slopes(interact, pred=marcha, modx=ola_num, jnplot = TRUE)
interact <- lmer(brecha_perc~ola_num*class2+marcha+sexo+edad+pos_id+(1|idencuesta), data=data)
interactions::sim_slopes(interact, pred=class2, modx=ola_num, jnplot = TRUE)
reg5 <- lmer(brecha_perc~ola+marcha+class2+sexo+edad+pos_id+(1|idencuesta), data=data)
ggeffects::ggpredict(reg5, terms = c("ola")) %>%
ggplot(aes(x=x, y=predicted)) +
geom_bar(stat="identity", color="grey", fill="grey")+
geom_errorbar(aes(ymin = conf.low, ymax = conf.high), width=.1) +
labs(title="Ola", x = "", y = "") +
theme_bw() +
scale_x_continuous(name = "",
breaks = c(0,1,2,3,4,5,6,7))
ggeffects::ggpredict(reg5, terms = c("ola")) %>%
ggplot(aes(x=x, y=predicted)) +
geom_bar(stat="identity", color="grey", fill="grey")+
geom_errorbar(aes(ymin = conf.low, ymax = conf.high), width=.1) +
labs(title="Ola", x = "", y = "") +
theme_bw()
texreg::knitreg(list(reg1, reg2, reg3, reg4, reg5, reg6, reg7),
custom.model.names=rep(c("Brecha percibida"),7))
reg1 <- lmer(brecha_perc~ola+(1|idencuesta), data=data)
reg2 <- lmer(brecha_perc~ola+marcha+(1|idencuesta), data=data)
reg3 <- lmer(brecha_perc~ola+marcha+class2+(1|idencuesta), data=data)
reg4 <- lmer(brecha_perc~ola+marcha+class2+sexo+edad+(1|idencuesta), data=data)
reg5 <- lmer(brecha_perc~ola+marcha+class2+sexo+edad+pos_id+(1|idencuesta), data=data)
reg6 <- lmer(brecha_perc~ola*class2+marcha+sexo+edad+pos_id+(1|idencuesta), data=data)
reg7 <- lmer(brecha_perc~ola*marcha+class2+sexo+edad+pos_id+(1|idencuesta), data=data)
texreg::knitreg(list(reg1, reg2, reg3, reg4, reg5, reg6, reg7),
custom.model.names=rep(c("Brecha percibida"),7))
ggeffects::ggpredict(reg5, terms = c("ola")) %>%
ggplot(aes(x=x, y=predicted)) +
geom_bar(stat="identity", color="grey", fill="grey")+
geom_errorbar(aes(ymin = conf.low, ymax = conf.high), width=.1) +
labs(title="Ola", x = "", y = "") +
theme_bw()
ggeffects::ggpredict(reg5, terms="marcha") %>%
ggplot(mapping=aes(x = x, y=predicted)) +
labs(title="Participación en manifestaciones", x = "", y = "")+
theme_bw() +
geom_smooth()+
geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = .2, fill = "black")
ggeffects::ggpredict(reg5, terms = c("class2")) %>%
ggplot(aes(x=x, y=predicted)) +
geom_bar(stat="identity", color="grey", fill="grey")+
geom_errorbar(aes(ymin = conf.low, ymax = conf.high), width=.1) +
labs(title="Ola", x = "", y = "") +
theme_bw()
ggeffects::ggpredict(reg5, terms = c("sexo")) %>%
ggplot(aes(x=x, y=predicted)) +
geom_bar(stat="identity", color="grey", fill="grey")+
geom_errorbar(aes(ymin = conf.low, ymax = conf.high), width=.1) +
labs(title="Ola", x = "", y = "") +
theme_bw()
ggeffects::ggpredict(reg5, terms = c("pos_id")) %>%
ggplot(aes(x=x, y=predicted)) +
geom_bar(stat="identity", color="grey", fill="grey")+
geom_errorbar(aes(ymin = conf.low, ymax = conf.high), width=.1) +
labs(title="Ola", x = "", y = "") +
theme_bw()

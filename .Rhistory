filter(ola==3) %>%
select(idencuesta,class2) %>%
rename(class4=class2) # Renombrar "class2" a "class3"
# Unir esta información con la base de datos original
data <- data %>%
left_join(class2_ola3,by="idencuesta")
# Tabla de frecuencias y porcentajes
sjt.xtab(data$class4,data$ola,
show.col.prc=TRUE,
var.labels=c("Posición de clase 4","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de la Posición de clase 4, por ola")
# Identificar los valores de "class1" en la ola 3
class2a_ola3 <- data %>%
filter(ola==3) %>%
select(idencuesta,class2a) %>%
rename(class4a=class2a) # Renombrar "class2" a "class3"
# Unir esta información con la base de datos original
data <- data %>%
left_join(class2a_ola3,by="idencuesta")
# Tabla de frecuencias y porcentajes
sjt.xtab(data$class4a,data$ola,
show.col.prc=TRUE,
var.labels=c("Posición de clase 4 a","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de la Posición de clase 4 a, por ola")
# Identificar los valores de "class1" en la ola 3
class1_ola1 <- data %>%
filter(ola==1) %>%
select(idencuesta,class1) %>%
rename(class5=class1) # Renombrar "class1" a "class3"
# Unir esta información con la base de datos original
data <- data %>%
left_join(class1_ola1,by="idencuesta")
# Tabla de frecuencias y porcentajes
sjt.xtab(data$class5,data$ola,
show.col.prc=TRUE,
var.labels=c("Posición de clase 5","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de la Posición de clase 5, por ola")
# Identificar los valores de "class1a" en la ola 3
class1a_ola1 <- data %>%
filter(ola==1) %>%
select(idencuesta,class1a) %>%
rename(class5a=class1a) # Renombrar "class2" a "class3"
# Unir esta información con la base de datos original
data <- data %>%
left_join(class1a_ola1,by="idencuesta")
# Tabla de frecuencias y porcentajes
sjt.xtab(data$class5a,data$ola,
show.col.prc=TRUE,
var.labels=c("Posición de clase 5 a","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de la Posición de clase 5 a, por ola")
# Identificar los valores de "class1" en la ola 3
class2_ola1 <- data %>%
filter(ola==1) %>%
select(idencuesta,class2) %>%
rename(class6=class2) # Renombrar "class2" a "class3"
# Unir esta información con la base de datos original
data <- data %>%
left_join(class2_ola1,by="idencuesta")
# Tabla de frecuencias y porcentajes
sjt.xtab(data$class6,data$ola,
show.col.prc=TRUE,
var.labels=c("Posición de clase 6","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de la Posición de clase 6, por ola")
# Identificar los valores de "class1" en la ola 3
class2a_ola1 <- data %>%
filter(ola==1) %>%
select(idencuesta,class2a) %>%
rename(class6a=class2a) # Renombrar "class2" a "class3"
# Unir esta información con la base de datos original
data <- data %>%
left_join(class2a_ola1,by="idencuesta")
# Tabla de frecuencias y porcentajes
sjt.xtab(data$class6a,data$ola,
show.col.prc=TRUE,
var.labels=c("Posición de clase 6 a","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de la Posición de clase 6 a, por ola")
# Ir armando data final
data2 <- data %>%
select(idencuesta,                                     # identificacion enctdo
ola,                                            # identificacion ola
version,muestra,tipo_atricion,estrato,          # identificacion srvy
segmento_disenno,ponderador02,estrato_disenno,  # identificacion srvy
actividad,actividad2,rel_empleo,rel_empleo2,    # caract empleo
sector,isco08,isco08_1d,isco08_2d,              # caract empleo
cualificacion,isic4,isic4_2d,rama,rama_2,       # caract empleo
#         supervisa,                                      # caract empleo
#         class1,class1a,class2,class2a,class3,
class3a   # caract empleo
#         class4,class4a,class5,class5a,class6,class6a    # caract empleo
) %>%
sjlabelled::set_na(.,na=c(-999,-888,-777,-666))
data2 <- na.omit(data2)
# 9.072 obs.
elsoc_diseno <- svydesign(ids = ~segmento_disenno, #muestreo por conglomerado a nivel de manzanas (segmento)
strata = ~estrato_disenno, #muestreo estratificado a nivel ciudad (estato)
weights = ~ponderador_long_total, #ponderador longitudinal
nest = TRUE,
data = data)
#Paso 1
datos.clase <- data.frame((svytable(~class1 + ola + idencuesta, elsoc_diseno, round = F))) %>% dplyr::filter(Freq>0)  %>% group_by(ola) %>% mutate(porcentaje=Freq/sum(Freq)) %>% na.omit()
#Paso 2
etiquetas.clase <- data.frame((svytable(~class1 + ola, elsoc_diseno, round = F))) %>% group_by(ola) %>% mutate(porcentaje=Freq/sum(Freq)) %>% na.omit() %>%
mutate(idencuesta = 1)
datos.clase$class1 <- factor(datos.clase$class1, levels = rev(levels(datos.clase$class1)))
etiquetas.clase$class1 <- factor(etiquetas.clase$class1, levels = rev(levels(etiquetas.clase$class1)))
colors<- c("#f1eef6ff","#bdc9e1ff","#b3b3b3ff","#74a9cfff","#0570b0ff")
alluvial_clase <- ggplot(datos.clase, aes(x = ola, fill = class1, stratum = class1,
alluvium = idencuesta, y = porcentaje))+
ggalluvial::geom_flow(alpha = .66) +
ggalluvial::geom_stratum(linetype = 0) +
scale_y_continuous(labels = scales::percent) +
ylab(label = NULL) +
xlab(label = NULL) +
theme(#legend.position = 'top',
legend.title = element_blank(),
plot.caption = element_text(hjust = 1)) +
#    scale_fill_manual(values = colors) +
geom_shadowtext(data = etiquetas.clase,
aes(label = ifelse(porcentaje > 0 , scales::percent(porcentaje, accuracy = .1),"")),
position = position_stack(vjust = .5),
show.legend = FALSE,
size = 4,
color = rep('white'),
bg.colour='grey30')+
scale_x_discrete(labels = c(2016, 2017, 2018, 2019, 2021, 2022, 2023))
alluvial_clase
ggsave(alluvial_clase, file="output/graphs/alluvial_clase.png", height = 8, width = 7)
# Crear una columna con la variable "c12_04" adelantada una ola
data <- data %>%
arrange(ola) %>%  # Ordena por ola, por si acaso no está ordenado
group_by(idencuesta) %>%        # Agrupa por id para trabajar en cada individuo
mutate(c12_04_lagged=lag(c12_04,n=1)) %>%  # Desplaza c12_04 a la siguiente ola
ungroup()
# Rellenar los valores NA en la variable original
data <- data %>%
mutate(c12_04_full=ifelse(!is.na(c12_04),c12_04,c12_04_lagged)) %>%  # Si c12_04 es NA, sustituir con el valor de la ola anterior
select(-c12_04_lagged)
# Recodficar
data <- data %>%
mutate(mem_sindicato=car::recode(c12_04_full,
recodes=c("1='No es miembro';
2='Miembro inactivo';
3='Miembro activo'"),
as.factor=TRUE, # convertir a factor
levels=c("No es miembro",
"Miembro inactivo",
"Miembro activo"))) # ordenar niveles
# Tabla de frecuencias y porcentajes
sjt.xtab(data$mem_sindicato,data$ola,
show.col.prc=TRUE,
var.labels=c("Membresía sindical","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de Trabajadores/as miembros/as de sindicatos, por ola")
# Crear variable binaria: unionized
data <- mutate(data,
unionized=if_else(c12_04_full==2|c12_04_full==3,1,0))
# Tabla de frecuencias y porcentajes
sjt.xtab(data$unionized,data$ola,
show.col.prc=TRUE,
var.labels=c("Unionized","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de Trabajadores/as Sindicalizados/as, por ola")
# Ir armando data final
data2 <- data %>%
select(idencuesta,                                     # identificacion enctdo
ola,                                            # identificacion ola
version,muestra,tipo_atricion,estrato,          # identificacion srvy
segmento_disenno,ponderador02,estrato_disenno,  # identificacion srvy
actividad,actividad2,rel_empleo,rel_empleo2,    # caract empleo
sector,isco08,isco08_1d,isco08_2d,              # caract empleo
cualificacion,isic4,isic4_2d,rama,rama_2,       # caract empleo
#         supervisa,                                      # caract empleo
#         class1,class1a,class2,class2a,class3,
class3a   # caract empleo
#         class4,class4a,class5,class5a,class6,class6a    # caract empleo
#         unionized
) %>%
sjlabelled::set_na(.,na=c(-999,-888,-777,-666))
data2 <- na.omit(data2)
# 9.072 obs.
# Tabla de frecuencias y porcentajes
sjt.xtab(data$c15,data$ola,
show.col.prc=TRUE,
var.labels=c("Autoposicionamiento","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de Actividad principal, por ola")
# Recodficar
data <- data[!is.na(data$c15), ]
data$pol_id <- car::recode(data$c15,
recodes=c("c(11,12,-888,-999)='No se identifica';
c(0,1,2,3,4)='Izquierda';
c(5)='Centro';
c(6,7,8,9,10)='Derecha'"),
as.factor=TRUE,
levels=c('Izquierda',
'Centro',
'Derecha',
'No se identifica'))
# Tabla de frecuencias y porcentajes
sjt.xtab(data$pol_id,data$ola,
show.col.prc=TRUE,
var.labels=c("Identificación política","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de Identificación Política, por ola")
# Recodficar
data <- data[!is.na(data$c13), ]
data <- data %>%
mutate(pol_interes=c13)
# Tabla de frecuencias y porcentajes
sjt.xtab(data$pol_interes,data$ola,
show.col.prc=TRUE,
var.labels=c("Interés en la política","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de Trabajadores/as interesados en la política, por ola")
# Recodficar
data <- data[!is.na(data$c14_01), ]
data <- data %>%
mutate(pol_habla=c14_01)
# Tabla de frecuencias y porcentajes
sjt.xtab(data$pol_habla,data$ola,
show.col.prc=TRUE,
var.labels=c("Habla de política","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de Habla de política, por ola")
# Recodficar
data <- data[!is.na(data$c14_02), ]
data <- data %>%
mutate(pol_inform=c14_02)
# Tabla de frecuencias y porcentajes
sjt.xtab(data$pol_inform,data$ola,
show.col.prc=TRUE,
var.labels=c("Se informa de política","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de Se informa de política, por ola")
summary(data$perc_gerente)
data <- data %>% filter(perc_gerente>100000)
data <- data %>% filter(perc_gerente<1200000000)
hist(data$perc_gerente)
summary(data$perc_obrero)
data <- data %>% filter(perc_obrero>10000)
data <- data %>% filter(perc_obrero<10000000)
hist(data$perc_obrero)
summary(data$just_gerente)
data <- data %>% filter(just_gerente>100000)
data <- data %>% filter(just_gerente<1200000000)
hist(data$just_gerente)
data <- data %>% filter(just_obrero>10000)
data <- data %>% filter(just_obrero<10000000)
hist(data$just_obrero)
data$brecha_perc <- log(data$perc_gerente/data$perc_obrero)
data$brecha_just <- log(data$just_gerente/data$just_obrero)
data$brecha_gerente <- log(data$perc_gerente/data$just_gerente)
data$brecha_obrero <- log(data$perc_obrero/data$just_obrero)
summary(data$brecha_perc)
summary(data$brecha_just)
summary(data$brecha_gerente)
summary(data$brecha_obrero)
# Crear variable sector
data <- data %>%
mutate(metrop=if_else(region_cod==13,1,0))
# Tabla de frecuencias y porcentajes
sjt.xtab(data$metrop,data$ola,
show.col.prc=TRUE,
var.labels=c("Región Metropolitana","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de variable Región Metropolitana, por ola")
data <- data[!is.na(data$educ), ]
data$educ <- car::recode(data$educ,
recodes=c("c(1,2,3)='Básica';
c(4,5)='Media';
c(6,7)='Técnica';
c(8,9,10)='Superior'"),
as.factor=TRUE,
levels=c('Básica',
'Media',
'Técnica',
'Superior'))
# Tabla de frecuencias y porcentajes
sjt.xtab(data$educ,data$ola,
show.col.prc=TRUE,
var.labels=c("Educación","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de variable Educación, por ola")
# data <- data[!is.na(data$c33), ]
data$class_id <- car::recode(data$c33,
recodes=c("c(1,2)='Baja';
c(3)='Media';
c(4,5)='Alta'"),
as.factor=TRUE,
levels=c('Baja',
'Media',
'Alta'))
# Crear una columna con la variable class_id adelantada una ola
data <- data %>%
group_by(idencuesta) %>%  # Agrupa por id para trabajar en cada individuo
mutate(class_id_lagged=if_else(ola==2,lag(as.character(class_id),n=1),NA_character_)) %>%  # Desplaza class_id solo para la ola 2
ungroup() %>%
# Rellenar los valores NA (de las olas que no estaban) en la variable original
mutate(class_id=ifelse(!is.na(class_id),as.character(class_id),class_id_lagged)) %>%  # Sustituye valores de class_id si es NA solo con la variable desplazada
mutate(class_id=factor(class_id)) %>%  # Convierte de nuevo a factor
select(-class_id_lagged)  # Elimina la columna temporal
# Volver a establecer niveles
data$class_id <- factor(data$class_id,
levels=c("Baja",
"Media",
"Alta"))
# Tabla de frecuencias y porcentajes
sjt.xtab(data$class_id,data$ola,
show.col.prc=TRUE,
var.labels=c("Identidad de Clase","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de variable Identidad de Clase, por ola")
data <- data[!is.na(data$d01_01), ]
data <- data %>%
mutate(class_estatus=d01_01)
# Tabla de frecuencias y porcentajes
sjt.xtab(data$class_estatus,data$ola,
show.col.prc=TRUE,
var.labels=c("Estatus social subjetivo","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de variable Estatus social subjetivo, por ola")
#Impute midpoint of income ranges
data$m14_rec <- as.numeric(car::recode(data$m14,
"1=20000;
2=62500;
3=105000;
4=147500;
5=190000;
6=220000;
7=255000;
8=300000;
9=340000;
10=380000;
11=432500;
12=502500;
13=602500;
14=757500;
15=1075000;
16=1300000"))
#Impute midpoint of income ranges (2021)
data$m14b_rec <- as.numeric(car::recode(data$m14b,
"1=125000;
2=300000;
3=400000;
4=575000;
5=700000;
c(9,10,11,12,16)=NA"))
#Recode DK/DA of Income to NA
data$m13_rec <- as.numeric(car::recode(data$m13,"c(-888,-999)=NA"))
#replace NA of income with new imputed variable
data$m13_imp <- ifelse(!is.na(data$m13_rec),data$m13_rec,data$m14_rec)
summary(data$m13_imp)
data$m13_imp <- ifelse(is.na(data$m13_imp),data$m14b_rec,data$m13_imp)
summary(data$m13_imp)
data$ingreso <- data$m13_imp
data$ingreso_log <- log(data$ingreso)
data$edad2 <- (data$edad)**2
# Crear variable binaria: female
data <- mutate(data,
female=if_else(sexo==2,1,0))
# Tabla de frecuencias y porcentajes
sjt.xtab(data$female,data$ola,
show.col.prc=TRUE,
var.labels=c("Female","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de Mujeres, por ola")
# Ir armando data final
elsoc_minicoes <- data %>%
select(idencuesta,                                     # identificacion enctdo
ola,                                            # identificacion ola
version,muestra,tipo_atricion,estrato,          # identificacion srvy
segmento_disenno,ponderador02,estrato_disenno,  # identificacion srvy
sexo,female,edad,edad2,educ,metrop,             # caract sociodem
ingreso,ingreso_log,                            # caract sociodem
actividad,actividad2,rel_empleo,rel_empleo2,    # caract empleo
sector,isco08,isco08_1d,isco08_2d,              # caract empleo
cualificacion,isic4,isic4_2d,rama,rama_2,       # caract empleo
supervisa,                                      # caract empleo
class1,class1a,class2,class2a,                  # clase y estatus
class3,class3a,class4,class4a,                  # clase y estatus
class5,class5a,class6,class6a,                  # clase y estatus
mem_sindicato,unionized,                        # membresia sindicato
marcha,                                         # freq participa marchas
huelga,                                         # freq participa huelgas
c15,pol_id,pol_interes,pol_habla,pol_inform,    # interes politica
perc_gerente,                                   # Salario percibido gerente
perc_obrero,                                    # Salario percibido obrero
just_gerente,                                   # Salario justo gerente
just_obrero,                                    # Salario justo obrero
brecha_perc,brecha_just,brecha_gerente,brecha_obrero
) %>%
sjlabelled::set_na(.,na=c(-999,-888,-777,-666))
save(elsoc_minicoes,file=(here::here("output/elsoc-minicoes.Rdata")))
saveRDS(elsoc_minicoes,file=(here::here("output/elsoc-minicoes.rds")))
# data2 <- na.omit(data2)
# 9.072 obs.
colSums(is.na(elsoc_minicoes))
# Ir armando data final
elsoc_minicoes2 <- data %>%
select(idencuesta,                                     # identificacion enctdo
ola,                                            # identificacion ola
version,muestra,tipo_atricion,estrato,          # identificacion srvy
segmento_disenno,ponderador02,estrato_disenno,  # identificacion srvy
sexo,female,edad,edad2,educ,metrop,             # caract sociodem
ingreso,ingreso_log,                            # caract sociodem
actividad,actividad2,rel_empleo,rel_empleo2,    # caract empleo
sector,isco08,isco08_1d,isco08_2d,              # caract empleo
cualificacion,isic4,isic4_2d,rama,rama_2,       # caract empleo
supervisa,                                      # caract empleo
class1,class1a,class2,class2a,                  # clase y estatus
class3,class3a,class4,class4a,                  # clase y estatus
class5,class5a,class6,class6a,                  # clase y estatus
mem_sindicato,unionized,                        # membresia sindicato
marcha,                                         # freq participa marchas
huelga,                                         # freq participa huelgas
c15,pol_id,pol_interes,pol_habla,pol_inform,    # interes politica
perc_gerente,                                   # Salario percibido gerente
perc_obrero,                                    # Salario percibido obrero
just_gerente,                                   # Salario justo gerente
just_obrero,                                    # Salario justo obrero
brecha_perc,brecha_just,brecha_gerente,brecha_obrero
) %>%
sjlabelled::set_na(.,na=c(-999,-888,-777,-666))
save(elsoc_minicoes2,file=(here::here("output/elsoc-minicoes2.Rdata")))
saveRDS(elsoc_minicoes,file=(here::here("output/elsoc-minicoes2.rds")))
data2 <- na.omit(data2)
# 18.645 obs.
View(elsoc_minicoes2)
# Ir armando data final
elsoc_minicoes2 <- data %>%
select(idencuesta,                                     # identificacion enctdo
ola,                                            # identificacion ola
version,muestra,tipo_atricion,estrato,          # identificacion srvy
segmento_disenno,ponderador02,estrato_disenno,  # identificacion srvy
sexo,female,edad,edad2,educ,metrop,             # caract sociodem
ingreso,ingreso_log,                            # caract sociodem
actividad,actividad2,rel_empleo,rel_empleo2,    # caract empleo
sector,isco08,isco08_1d,isco08_2d,              # caract empleo
cualificacion,isic4,isic4_2d,rama,rama_2,       # caract empleo
supervisa,                                      # caract empleo
class1,class1a,class2,class2a,                  # clase y estatus
class3,class3a,class4,class4a,                  # clase y estatus
class5,class5a,class6,class6a,                  # clase y estatus
mem_sindicato,unionized,                        # membresia sindicato
marcha,                                         # freq participa marchas
huelga,                                         # freq participa huelgas
c15,pol_id,pol_interes,pol_habla,pol_inform,    # interes politica
perc_gerente,                                   # Salario percibido gerente
perc_obrero,                                    # Salario percibido obrero
just_gerente,                                   # Salario justo gerente
just_obrero,                                    # Salario justo obrero
brecha_perc,brecha_just,brecha_gerente,brecha_obrero
) %>%
sjlabelled::set_na(.,na=c(-999,-888,-777,-666))
elsoc_minicoes2 <- na.omit(elsoc_minicoes2)
save(elsoc_minicoes2,file=(here::here("output/elsoc-minicoes2.Rdata")))
saveRDS(elsoc_minicoes2,file=(here::here("output/elsoc-minicoes2.rds")))
# 18.645 obs.
# Definir las categorías que deseas mantener
categorias_a_mantener <- c("Trabaja de manera remunerada con jornada completa",
"Trabaja de manera remunerada a tiempo parcial",
"Estudia y trabaja")
# Crear la nueva variable actividad2
data$actividad2 <- ifelse(as.character(data$actividad) %in% categorias_a_mantener,as.character(data$actividad),NA)
data$actividad2 <- factor(data$actividad2,
levels=categorias_a_mantener)
# Tabla de frecuencias y porcentajes
sjt.xtab(data$actividad2,data$ola,
show.col.prc=TRUE,
var.labels=c("Actividad 2","Ola"),
show.summary=FALSE,
title="Frecuencias y porcentajes de Actividad de ocupados, por ola")
# Ir armando data final
elsoc_minicoes2 <- data %>%
select(idencuesta,                                     # identificacion enctdo
ola,                                            # identificacion ola
version,muestra,tipo_atricion,estrato,          # identificacion srvy
segmento_disenno,ponderador02,estrato_disenno,  # identificacion srvy
sexo,female,edad,edad2,educ,metrop,             # caract sociodem
ingreso,ingreso_log,                            # caract sociodem
actividad,actividad2,rel_empleo,rel_empleo2,    # caract empleo
sector,isco08,isco08_1d,isco08_2d,              # caract empleo
cualificacion,isic4,isic4_2d,rama,rama_2,       # caract empleo
supervisa,                                      # caract empleo
class1,class1a,class2,class2a,                  # clase y estatus
class3,class3a,class4,class4a,                  # clase y estatus
class5,class5a,class6,class6a,                  # clase y estatus
mem_sindicato,unionized,                        # membresia sindicato
marcha,                                         # freq participa marchas
huelga,                                         # freq participa huelgas
c15,pol_id,pol_interes,pol_habla,pol_inform,    # interes politica
perc_gerente,                                   # Salario percibido gerente
perc_obrero,                                    # Salario percibido obrero
just_gerente,                                   # Salario justo gerente
just_obrero,                                    # Salario justo obrero
brecha_perc,brecha_just,brecha_gerente,brecha_obrero
) %>%
sjlabelled::set_na(.,na=c(-999,-888,-777,-666))
elsoc_minicoes2 <- elsoc_minicoes2 %>%
filter(actividad=='Trabaja de manera remunerada con jornada completa'|
actividad=='Trabaja de manera remunerada a tiempo parcial'|
actividad=='Estudia y trabaja')
# elsoc_minicoes2 <- na.omit(elsoc_minicoes2)
save(elsoc_minicoes2,file=(here::here("output/elsoc-minicoes2.Rdata")))
saveRDS(elsoc_minicoes2,file=(here::here("output/elsoc-minicoes2.rds")))
# 4.340 obs.

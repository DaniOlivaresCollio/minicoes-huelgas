# Regresiones

<div style="text-align: justify">

```{r cargar-paquetes-2,echo=FALSE,warning=FALSE,message=FALSE}
rm(list=ls())
options(scipen = 999)

library(pacman)
pacman::p_load(tidyverse,
       knitr,
       bookdown,
       car,
       sjmisc,
       sjPlot,
       sjlabelled,
       psych,
       kableExtra,
       gridExtra,
       lubridate,
       viridis,
       statar,
       readxl,
       tinytex,
       ggrepel,
       ggalluvial,
       survey, 
       httr,
       readr, 
       ggplot2, 
       labelled,
       shadowtext,
       lme4,
       interactions)
```

Cargamos la base de datos ELSOC 2016-2023 procesada en formato *long*.

```{r datos-2,echo=FALSE}
load(here::here("output/elsoc-minicoes.Rdata"))

data <- data %>% filter(muestra==1)

# obtain the idencuesta for wave 7
ids <- 
  data %>% 
  select(idencuesta,ola) %>% 
  filter(ola==7) %>% 
  sjmisc::frq(idencuesta,show.na = F) %>% as.data.frame()


# filter data by the idencuesta of t7
data <- 
  data %>%
  filter(idencuesta %in% ids$val)

```


```{r}
data$ola <- factor(data$ola)
sjmisc::frq(data$class2)
data$class2 <- factor(data$class2, levels = c("Expert managers", "Petit bourgeoisie", "Experts", "Supervisors", "Informal", "Workers", "Desocupados/Retirados"))

# Political position ____________________________
data$pos_id <-
factor(
  car::recode(
    data$c15,
    "c(11,12,-888,-999)='No se identifica';c(0,1,2,3,4)='Izquierda';
     c(5)='Centro';c(6,7,8,9,10)='Derecha'"
  ),
  levels = c('Izquierda', 'Centro', 'Derecha', 'No se identifica')
)

frq(data$class2)

data <- data %>% 
  dplyr::select(brecha_perc, brecha_just, brecha_obrero, brecha_gerente,
                marcha, class2, sexo, edad, pos_id, idencuesta, ola, c13) %>% 
  na.omit()

frq(data$ola)
```

## Brecha percibida

* Brecha > 0: El salario percibido de un gerente es mayor que el salario percibido de un obrero.
* Brecha = 0: El salario percibido de un gerente es igual al salario percibido de un obrero (equidad).
* Brecha < 0: El salario percibido de un gerente es menor que el salario percibido de un obrero.

```{r results='asis'}
reg1 <- lmer(brecha_perc~ola+(1|idencuesta), data=data)
reg2 <- lmer(brecha_perc~ola+marcha+(1|idencuesta), data=data)
reg3 <- lmer(brecha_perc~ola+marcha+class2+(1|idencuesta), data=data)
reg4 <- lmer(brecha_perc~ola+marcha+class2+sexo+edad+(1|idencuesta), data=data)
reg5 <- lmer(brecha_perc~ola+marcha+class2+sexo+edad+pos_id+(1|idencuesta), data=data)
reg6 <- lmer(brecha_perc~ola*class2+marcha+sexo+edad+pos_id+(1|idencuesta), data=data)
reg7 <- lmer(brecha_perc~ola*marcha+class2+sexo+edad+pos_id+(1|idencuesta), data=data)

texreg::knitreg(list(reg1, reg2, reg3, reg4, reg5, reg6, reg7),
                custom.model.names=rep(c("Brecha percibida"),7))
```

```{r}
ggeffects::ggpredict(reg5, terms = c("ola")) %>%
  ggplot(aes(x=x, y=predicted)) +
  geom_bar(stat="identity", color="grey", fill="grey")+
  geom_errorbar(aes(ymin = conf.low, ymax = conf.high), width=.1) +
  labs(title="Ola", x = "", y = "") +
  theme_bw()
```

```{r, warning=FALSE}
ggeffects::ggpredict(reg5, terms="marcha") %>%
  ggplot(mapping=aes(x = x, y=predicted)) +
  labs(title="Participación en manifestaciones", x = "", y = "")+
  theme_bw() +
  geom_smooth()+
  geom_ribbon(aes(ymin = conf.low, ymax = conf.high), alpha = .2, fill = "black")
```

```{r}
ggeffects::ggpredict(reg5, terms = c("class2")) %>%
  ggplot(aes(x=x, y=predicted)) +
  geom_bar(stat="identity", color="grey", fill="grey")+
  geom_errorbar(aes(ymin = conf.low, ymax = conf.high), width=.1) +
  labs(title="Ola", x = "", y = "") +
  theme_bw()
```

```{r}
ggeffects::ggpredict(reg5, terms = c("sexo")) %>%
  ggplot(aes(x=x, y=predicted)) +
  geom_bar(stat="identity", color="grey", fill="grey")+
  geom_errorbar(aes(ymin = conf.low, ymax = conf.high), width=.1) +
  labs(title="Ola", x = "", y = "") +
  theme_bw()
```

```{r}
ggeffects::ggpredict(reg5, terms = c("pos_id")) %>%
  ggplot(aes(x=x, y=predicted)) +
  geom_bar(stat="identity", color="grey", fill="grey")+
  geom_errorbar(aes(ymin = conf.low, ymax = conf.high), width=.1) +
  labs(title="Ola", x = "", y = "") +
  theme_bw()
```

## Brecha justa

* Brecha > 0: El salario de un gerente debería ser mayor que el salario obrero.
* Brecha = 0: El salario de un gerente debería ser igual al salario obrero (equidad).
* Brecha < 0: El salario de un gerente debería ser menor que el salario obrero.

```{r results='asis'}
reg1 <- lmer(brecha_just~ola+(1|idencuesta), data=data)
reg2 <- lmer(brecha_just~ola+marcha+(1|idencuesta), data=data)
reg3 <- lmer(brecha_just~ola+marcha+class2+(1|idencuesta), data=data)
reg4 <- lmer(brecha_just~ola+marcha+class2+sexo+edad+(1|idencuesta), data=data)
reg5 <- lmer(brecha_just~ola+marcha+class2+sexo+edad+pos_id+(1|idencuesta), data=data)
reg6 <- lmer(brecha_just~ola*class2+marcha+sexo+edad+pos_id+(1|idencuesta), data=data)
reg7 <- lmer(brecha_just~ola*marcha+class2+sexo+edad+pos_id+(1|idencuesta), data=data)

texreg::knitreg(list(reg1, reg2, reg3, reg4, reg5, reg6, reg7),
                custom.model.names=rep(c("Brecha justa"),7))
```

```{r}
ggeffects::ggpredict(reg5, terms = c("ola")) %>%
  ggplot(aes(x=x, y=predicted)) +
  geom_bar(stat="identity", color="grey", fill="grey")+
  geom_errorbar(aes(ymin = conf.low, ymax = conf.high), width=.1) +
  labs(title="Ola", x = "", y = "") +
  theme_bw()
```

## Brecha gerente

* Brecha > 0: El salario percibido de un gerente es mayor que el salario que debería tener (sobrepago).
* Brecha = 0: El salario percibido de un gerente es igual al salario que debería tener (equidad).
* Brecha < 0: El salario percibido de un gerente es menor que el salario que debería tener (infra-pago).

```{r results='asis'}
reg1 <- lmer(brecha_gerente~ola+(1|idencuesta), data=data)
reg2 <- lmer(brecha_gerente~ola+marcha+(1|idencuesta), data=data)
reg3 <- lmer(brecha_gerente~ola+marcha+class2+(1|idencuesta), data=data)
reg4 <- lmer(brecha_gerente~ola+marcha+class2+sexo+edad+(1|idencuesta), data=data)
reg5 <- lmer(brecha_gerente~ola+marcha+class2+sexo+edad+pos_id+(1|idencuesta), data=data)
reg6 <- lmer(brecha_gerente~ola*class2+marcha+sexo+edad+pos_id+(1|idencuesta), data=data)
reg7 <- lmer(brecha_gerente~ola*marcha+class2+sexo+edad+pos_id+(1|idencuesta), data=data)

texreg::knitreg(list(reg1, reg2, reg3, reg4, reg5, reg6, reg7),
                custom.model.names=rep(c("Brecha gerente"),7))
```

```{r}
ggeffects::ggpredict(reg5, terms = c("ola")) %>%
  ggplot(aes(x=x, y=predicted)) +
  geom_bar(stat="identity", color="grey", fill="grey")+
  geom_errorbar(aes(ymin = conf.low, ymax = conf.high), width=.1) +
  labs(title="Ola", x = "", y = "") +
  theme_bw()
```

## Brecha obrero

* Brecha > 0: El salario percibido de un obrero es mayor que el salario que debería tener (sobrepago).
* Brecha = 0: El salario percibido de un obrero es igual al salario que debería tener (equidad).
* Brecha < 0: El salario percibido de un obrero es menor que el salario que debería tener (infra-pago).

```{r results='asis'}
reg1 <- lmer(brecha_obrero~ola+(1|idencuesta), data=data)
reg2 <- lmer(brecha_obrero~ola+marcha+(1|idencuesta), data=data)
reg3 <- lmer(brecha_obrero~ola+marcha+class2+(1|idencuesta), data=data)
reg4 <- lmer(brecha_obrero~ola+marcha+class2+sexo+edad+(1|idencuesta), data=data)
reg5 <- lmer(brecha_obrero~ola+marcha+class2+sexo+edad+pos_id+(1|idencuesta), data=data)
reg6 <- lmer(brecha_obrero~ola*class2+marcha+sexo+edad+pos_id+(1|idencuesta), data=data)
reg7 <- lmer(brecha_obrero~ola*marcha+class2+sexo+edad+pos_id+(1|idencuesta), data=data)

texreg::knitreg(list(reg1, reg2, reg3, reg4, reg5, reg6, reg7),
                custom.model.names=rep(c("Brecha obrero"),7))
```

```{r}
ggeffects::ggpredict(reg5, terms = c("ola")) %>%
  ggplot(aes(x=x, y=predicted)) +
  geom_bar(stat="identity", color="grey", fill="grey")+
  geom_errorbar(aes(ymin = conf.low, ymax = conf.high), width=.1) +
  labs(title="Ola", x = "", y = "") +
  theme_bw()
```

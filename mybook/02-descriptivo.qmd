# Estadísticos descriptivos

<div style="text-align: justify">

## Cargar librerías

```{r,message=FALSE,warning=FALSE}
rm(list=ls())
options(scipen = 999)

library(pacman)
p_load(bookdown,
       car,
       flextable,
       forcats,
       ggrepel,
       ggalluvial,
       ggplot2,
       gridExtra,
       httr,
       janitor,
       kableExtra,
       knitr,
       labelled,
       lubridate,
       officer,
       psych,
       readr,
       readxl,
       shadowtext,
       sjmisc,
       sjPlot,
       sjlabelled,
       summarytools,
       statar,
       survey,
       tinytex,
       tidyverse,
       viridis
       )
```

## Cargar datos

```{r}
data_completa <- readRDS(here::here("input/data/elsoc_paper2.rds"))
```

## Procesamiento

```{r}
# Seleccionar variables
data <- data_completa %>% 
  select(
    # numericas
    "brecha_just","marcha","edad","pol_scale","brecha_perc","cambio_posible",
    "Meritocracy_scale",
    # categoricas
    "class3a","female","sector","pol_id","ola")

# Convertir a tipo factor y numérico
vars_numericas <- c("brecha_just", "marcha", "edad", "pol_scale",
                    "brecha_perc", "cambio_posible", "Meritocracy_scale")

vars_categoricas <- c("class3a", "female", "sector", "pol_id", "ola")

data[vars_numericas] <- lapply(data[vars_numericas], as.numeric)
data[vars_categoricas] <- lapply(data[vars_categoricas], as.factor)

# Etiquetar variables 
data <- set_label(data, label = c(
  brecha_just       = "Percepción de injusticia",
  marcha            = "Justificación de marchas",
  edad              = "Edad del entrevistado/a",
  pol_scale         = "Ubicación en escala izquierda-derecha",
  brecha_perc       = "Percepción de desigualdad",
  cambio_posible    = "Percepción de posibilidad de cambio",
  Meritocracy_scale = "Actitudes meritocráticas",
  class3a           = "Clase",
  female            = "Female",
  sector            = "Sector de actividad económica",
  pol_id            = "Identificación política",
  ola               = "Ola"
))
```

## Descriptivos

```{r}
#| label: tbl-summary-todas
#| tbl-cap: "Resumen descriptivo de las variables seleccionadas"
#| tbl-cap-location: top
#| results: asis
#| echo: true

# Crear tabla resumen para todas las variables seleccionadas
df_summary <- dfSummary(
  data,
  round.digits = 2,
  plain.ascii = FALSE,
  style = "multiline",
  tmp.img.dir = "/tmp",       # Necesario para gráficos mini en HTML
  graph.magnif = 0.75,
  headings = FALSE,
  varnumbers = FALSE,
  labels.col = TRUE,          # Mostrar etiquetas en vez de nombres
  na.col = TRUE,
  graph.col = FALSE,
  valid.col = TRUE,
  col.widths = c(20, 10, 10, 10, 10)
)

# Eliminar columna de nombre técnico si quieres
df_summary$Variable <- NULL

# Imprimir
print(df_summary)

# Guardar en HTML
print(df_summary, file = "output/tabla_resumen.html")
```

# Exploración y Preparación de datos

<div style="text-align: justify">

```{r cargar-paquetes-2,echo=FALSE,warning=FALSE,message=FALSE}
rm(list=ls())
options(scipen = 999)

library(pacman)
p_load(tidyverse,
       knitr,
       bookdown,
       car,
       sjmisc,
       sjPlot,
       sjlabelled,
       psych,
       kableExtra,
       gridExtra,
       lubridate,
       viridis,
       statar,
       readxl,
       tinytex,
       ggrepel,
       ggalluvial,
       survey, 
       httr,
       readr, 
       ggplot2, 
       labelled,
       shadowtext)
```


## Variables

Cargamos la base de datos ELSOC 2016-2023 en formato *long*.

```{r datos-2,echo=FALSE}
load(here::here("input/data/ELSOC_Long_2016_2023.RData"))
```

Seleccionamos las variables de interés.

```{r variables,echo=FALSE}
# Seleccion solo para mirar, aun sin ponderadores
data <- elsoc_long_2016_2023 %>%
  select(idencuesta,                                     # identificacion enctdo
         ola,ola_w01,ola_w02,ola_w03,                    # identificacion ola
         ola_w04,ola_w05,ola_w06,ola_w07,                # identificacion ola
         version,muestra,tipo_atricion,estrato,          # identificacion srvy
         segmento_disenno,ponderador02,estrato_disenno,  # identificacion srvy
         ponderador_long_total,                          # ponderador longit
         sexo=m0_sexo,edad=m0_edad,educ=m01,             # caract sociodem
         m02,m06,m07,m08,m10,region_cod,m13,m14,m14b,    # caract sociodem
         m03,ciuo88_m03,ciuo08_m03,                      # caract ocupacional
         m04,ciiu3_m04,ciiu4_m04,                        # caract ocupacional
         c33,d01_01,                                     # clase y estatus
         c12_04,                                         # membresia sindicato
         marcha=c08_02,                                  # freq participa marchas
         huelga=c08_03,                                  # freq participa huelgas
         c13,c14_01,c14_02,c15,                          # interes politica
         perc_gerente=d03_01,                            # Salario percibido gerente
         perc_obrero=d03_02,                             # Salario percibido obrero
         just_gerente=d04_01,                            # Salario justo gerente
         just_obrero=d04_02,                             # Salario justo obrero
         voto_deber=c10_01,                              # Votar es mi deber como ciudadano         
         voto_influye=c10_02,                            # Mi voto influye
         voto_ideas=c10_03,                              # Votar permite expresar mis ideas
         c18_01,                                         # Sociedad requiere grupos inferiores y superiores
         c18_02,                                         # Se debe dar a todos las mismas oportunidades
         c18_03,                                         # Se debe igualar las condiciones
         c18_08,                                         # Cambio social es posible
         c18_09,                                         # Las personas son recompensadas por su esfuerzo
         c18_10,                                         # Las personas son recompensadas por su inteligencia
         c18_11                                          # Las diferencias de ingreso son demasiado grandes.
         ) %>% 
  sjlabelled::set_na(.,na=c(-999,-888,-777,-666))
```

Primero, se realiza una revisión exploratoria de las variables de interés, considerando todas las olas de la base de datos, tanto para la muestra original como la de refresco.

```{r,echo=FALSE}
n <- nrow(data)
```

Se comienza con `r n` observaciones.


## Caracterización empleo


### actividad

Con la variable *numérica* ELSOC:

-   `m02`. ¿Cuál de estas situaciones describe mejor su actividad principal durante el último mes?

Creamos la variable *factor* `actividad`.

```{r,echo=FALSE}
# Recodficar
sum(is.na(data$m02)) # 48 casos
data <- data[!is.na(data$m02), ]
data$actividad <- car::recode(data$m02,
                              recodes=c("1='Trabaja de manera remunerada con jornada completa';
                                         2='Trabaja de manera remunerada a tiempo parcial';
                                         3='Estudia y trabaja';
                                         4='Solo estudia';
                                         5='Jubilado o pensionado';
                                         6='Desempleado, buscando trabajo';
                                         7='Realiza tareas no remuneradas';
                                         8='Esta enfermo o tiene una discapacidad';
                                         9='No estudia, no trabaja y no busca trabajo'"),
                              as.factor=TRUE, 
                              levels=c("Trabaja de manera remunerada con jornada completa",
                                       "Trabaja de manera remunerada a tiempo parcial",
                                       "Estudia y trabaja",
                                       "Solo estudia",
                                       "Jubilado o pensionado",
                                       "Desempleado, buscando trabajo",
                                       "Realiza tareas no remuneradas",
                                       "Esta enfermo o tiene una discapacidad",
                                       "No estudia, no trabaja y no busca trabajo"))

# Tabla de frecuencias y porcentajes
sjt.xtab(data$actividad,data$ola,
         show.col.prc=TRUE, 
         var.labels=c("Actividad","Ola"),
         show.summary=FALSE,
         title="Frecuencias y porcentajes de Actividad principal, por ola") 
```

```{r,echo=FALSE}
n <- nrow(data)
```

Al remover los NA's se queda con `r n` observaciones.

```{r,echo=FALSE}
# Ir armando data final
data2 <- data %>%
  select(idencuesta,                                     # identificacion enctdo
         ola,                                            # identificacion ola
         version,muestra,tipo_atricion,estrato,          # identificacion srvy
         segmento_disenno,ponderador02,estrato_disenno,  # identificacion srvy
         actividad                                       # caract empleo
         ) %>% 
  sjlabelled::set_na(.,na=c(-999,-888,-777,-666))

# 20.713 obs.
```


### actividad ocupados

Se crea la variable actividad solamente para ocupados

```{r,echo=FALSE}
# Definir las categorías que deseas mantener
categorias_a_mantener <- c("Trabaja de manera remunerada con jornada completa",
                           "Trabaja de manera remunerada a tiempo parcial",
                           "Estudia y trabaja") 

# Crear la nueva variable actividad2
data$actividad2 <- ifelse(as.character(data$actividad) %in% categorias_a_mantener,as.character(data$actividad),NA)
data$actividad2 <- factor(data$actividad2,
                          levels=categorias_a_mantener)


# Tabla de frecuencias y porcentajes
sjt.xtab(data$actividad2,data$ola,
         show.col.prc=TRUE, 
         var.labels=c("Actividad 2","Ola"),
         show.summary=FALSE,
         title="Frecuencias y porcentajes de Actividad de ocupados, por ola")
```

```{r,echo=FALSE}
# Ir armando data final
data2 <- data %>%
  select(idencuesta,                                     # identificacion enctdo
         ola,                                            # identificacion ola
         version,muestra,tipo_atricion,estrato,          # identificacion srvy
         segmento_disenno,ponderador02,estrato_disenno,  # identificacion srvy
         actividad,actividad2                            # caract empleo
         ) %>% 
  sjlabelled::set_na(.,na=c(-999,-888,-777,-666))

data2 <- na.omit(data2)

# 12.653 obs.
```


### rel_empleo

Con la variable *numérica* ELSOC:

-   `m07`. En su actual ocupación usted trabaja como:

Creamos la variable *factor* `rel_empleo`.

```{r,echo=FALSE}
# Recodficar
data$rel_empleo <- car::recode(data$m07,
                               recodes=c("1='Empleado u obrero en empresa privada';
                                          2='Empleado u obrero del sector público';
                                          3='Miembro de las Fuerzas Armadas y de Orden';
                                          4='Patrón/a o empleador/a';
                                          5='Trabaja solo, no tiene empleados';
                                          6='Familiar no remunerado';
                                          7='Servicio doméstico'"),
                               as.factor=TRUE, # convertir a factor
                               levels=c("Empleado u obrero en empresa privada",
                                        "Empleado u obrero del sector público",
                                        "Miembro de las Fuerzas Armadas y de Orden",
                                        "Patrón/a o empleador/a",
                                        "Trabaja solo, no tiene empleados",
                                        "Familiar no remunerado",
                                        "Servicio doméstico")) # ordenar niveles
```

Esta variable solamente está presente en las olas 2016, 2018 y 2021. Por lo tanto, se duplican los datos de relación de empleo para los años siguientes, es decir, en 2017 se pondrán los valores de 2016, y así sucesivamente.

```{r,echo=FALSE}
# Crear una columna con la variable rel_empleo adelantada una ola
data <- data %>%
  group_by(idencuesta) %>%        # Agrupa por id para trabajar en cada individuo
  mutate(rel_empleo_lagged=lag(as.character(rel_empleo),n=1)) %>%  # Desplaza rel_empleo a la siguiente ola, conviertiendo el factor en character temporalmente
  ungroup()

# Rellenar los valores NA (de las olas que no estaban) en la variable original
data <- data %>%
  mutate(rel_empleo=ifelse(!is.na(rel_empleo),as.character(rel_empleo),rel_empleo_lagged)) %>%  # Si rel empleo no es NA, sustituir con el valor de rel_empleo, y si es NA con la ola variable desplazada una ola y asegurarse que actividad esté en formato carácter
  mutate(rel_empleo=factor(rel_empleo)) %>%  # Convertir de nuevo a factor
  select(-rel_empleo_lagged)                 # Elimina la columna temporal
```

```{r,echo=FALSE}
# Volver a establecer niveles
data$rel_empleo <- factor(data$rel_empleo,
                          levels=c("Empleado u obrero en empresa privada",
                                   "Empleado u obrero del sector público",
                                   "Miembro de las Fuerzas Armadas y de Orden",
                                   "Patrón/a o empleador/a",
                                   "Trabaja solo, no tiene empleados",
                                   "Familiar no remunerado",
                                   "Servicio doméstico"))

# Tabla de frecuencias y porcentajes
sjt.xtab(data$rel_empleo,data$ola,
         show.col.prc=TRUE,
         var.labels=c("Relación de empleo","Ola"),
         show.summary=FALSE,
         title="Frecuencias y porcentajes de Relación de Empleo, por ola")
```

```{r,echo=FALSE}
# Ir armando data final
data2 <- data %>%
  select(idencuesta,                                     # identificacion enctdo
         ola,                                            # identificacion ola
         version,muestra,tipo_atricion,estrato,          # identificacion srvy
         segmento_disenno,ponderador02,estrato_disenno,  # identificacion srvy
         actividad,actividad2,rel_empleo                 # caract empleo
         ) %>% 
  sjlabelled::set_na(.,na=c(-999,-888,-777,-666))

data2 <- na.omit(data2)

# 11.495 obs.
```


### rel_empleo2

```{r,echo=FALSE}
data$rel_empleo2 <- car::recode(data$rel_empleo,
                                recodes=c("'Patrón/a o empleador/a'='Empleador';
                                           'Trabaja solo, no tiene empleados'='Autoempleado';
                                           'Empleado u obrero en empresa privada'='Asalariado';
                                           'Empleado u obrero del sector público'='Asalariado';
                                           'Miembro de las Fuerzas Armadas y de Orden'='Asalariado';
                                           'Familiar no remunerado'='Asalariado';
                                           'Servicio doméstico'='Asalariado'"),
                                as.factor=TRUE, # convertir a factor
                                levels=c("Empleador",
                                         "Autoempleado",
                                         "Asalariado")) # ordenar niveles

# Tabla de frecuencias y porcentajes
sjt.xtab(data$rel_empleo2,data$ola,
         show.col.prc=TRUE,
         var.labels=c("Relación de empleo 2","Ola"),
         show.summary=FALSE,
         title="Frecuencias y porcentajes de Relación de Empleo 2, por ola")
```

```{r,echo=FALSE}
# Ir armando data final
data2 <- data %>%
  select(idencuesta,                                     # identificacion enctdo
         ola,                                            # identificacion ola
         version,muestra,tipo_atricion,estrato,          # identificacion srvy
         segmento_disenno,ponderador02,estrato_disenno,  # identificacion srvy
         actividad,actividad2,rel_empleo,rel_empleo2     # caract empleo
         ) %>% 
  sjlabelled::set_na(.,na=c(-999,-888,-777,-666))

data2 <- na.omit(data2)

# 11.495 obs.
```


### sector

Se crea en una nueva variable *dicotómica*, `sector`, donde:

-   `sector==0`: Sector público más fuerzas armadas (`m07==2`, `m07==3`)
-   `sector==1`: Sector privado (`m07==1`, `m07==4`, `m07==5`,` m07==6`, `m07==7`)

```{r,echo=FALSE}
# Crear variable sector
data <- data %>%
  mutate(sector=if_else(rel_empleo=="Empleado u obrero del sector público"|rel_empleo=="Miembro de las Fuerzas Armadas y de Orden",0,1))

# Tabla de frecuencias y porcentajes 
sjt.xtab(data$sector, data$ola,
         show.col.prc = TRUE, 
         var.labels = c("Sector","Ola"),
         show.summary = FALSE,
         title = "Frecuencias y porcentajes de Sector, por ola")
```

```{r,echo=FALSE}
# Ir armando data final
data2 <- data %>%
  select(idencuesta,                                     # identificacion enctdo
         ola,                                            # identificacion ola
         version,muestra,tipo_atricion,estrato,          # identificacion srvy
         segmento_disenno,ponderador02,estrato_disenno,  # identificacion srvy
         actividad,actividad2,rel_empleo,rel_empleo2,    # caract empleo
         sector                                          # caract empleo
         ) %>% 
  sjlabelled::set_na(.,na=c(-999,-888,-777,-666))

data2 <- na.omit(data2)

# 11.495 obs.
```


### Ocupación: isco08

La variable *tipo character* ELSOC:

-   `m03`. ¿Cuál es su ocupación u oficio actual? Describa sus principales tareas y funciones en el puesto de trabajo actual

Se encuentra codificada de acuerdo con la CIUO88 para el año 2016 en la variable *numérica* `ciuo88_m03`, y CIUO08 para los años 2018 y 2021, en la variable *numérica* `ciuo08_m03`.

-   `ciuo88_m03`: CIUO (1988) del entrevistado, para año 2016
-   `ciuo08_m03`: CIUO (2008) del entrevistado, para año 2018 y 2021

Por lo tanto, se realiza una recodificación creando una nueva variable *numérica* donde están todas las olas homolagadas a la CIUO08, llamada `isco08`. 

```{r,echo=FALSE,message=FALSE,warning=FALSE}
# Carga bbdd con comparacion 88 y 08
isco08_88 <- read_excel(here::here("input/isco08-88.xls"))
isco08_88 <- isco08_88 %>%
  rename(isco08=`ISCO 08 Code`,isco88=`ISCO-88 code`)

# Exploración
valores_repetidos <- table(isco08_88$isco88) # Contar los valores repetidos en la variable
valores_repetidos <- valores_repetidos[valores_repetidos > 1]
valores_repetidos <- table(isco08_88$isco08) # Contar los valores repetidos en la variable
valores_repetidos <- valores_repetidos[valores_repetidos > 1]

# CIUO - ISCO: Recodificación 88->08 4 digitos en datos elsoc
indices <- match(data$ciuo88_m03,isco08_88$isco88)
data$ciuo08_rec <- isco08_88$isco08[indices]
data$ciuo08_rec <- as.numeric(data$ciuo08_rec) # es solo la recodificación de las que eran 88 en data, es decir, año 2016

# Creación variable isco08 con ciuo08_m03 y ciuo08_rec (ex ciuo88_m03) 4 digitos
data$isco08 <- ifelse(!is.na(data$ciuo08_rec),data$ciuo08_rec,data$ciuo08_m03) # es la unión en una variable de todo en 08
```

Además, esta variable también se presenta solamente en las olas 2016, 2018 y 2021. Por lo que, se duplican los datos de ocupación para los años siguientes, es decir, en 2017 se pondrán los valores de 2016, y así sucesivamente.

```{r,echo=FALSE}
# Crear una columna con la variable "isco08" adelantada una ola
data <- data %>%
  group_by(idencuesta) %>%        # Agrupa por id para trabajar en cada individuo
  mutate(isco08_lagged=lag(isco08,n=1)) %>%  # Desplaza isco08 a la siguiente ola
  ungroup()

# Rellenar los valores NA en la variable original
data <- data %>%
  mutate(isco08=ifelse(!is.na(isco08),isco08,isco08_lagged)) %>%  # Si isco08 es NA, sustituir con el valor de la ola anterior 
  select(-isco08_lagged)                 # Elimina la columna temporal
```

Se crean dos nuevas variables `isco08_1d` y `isco08_2d`, de la ISCO08 con 1 y 2 dígitos respectivamente. 

```{r,echo=FALSE}
# CIUO - ISCO: creación de variables con 1 dígito
data$isco08_1d <- as.character(data$isco08)
data$isco08_1d <- substr(data$isco08_1d,1,1)
data$isco08_1d <- as.numeric(data$isco08_1d)

# CIUO - ISCO: creación de variables con 2 dígitos
data$isco08_2d <- as.character(data$isco08)
data$isco08_2d <- substr(data$isco08_2d,1,2)
data$isco08_2d <- as.numeric(data$isco08_2d)

# Tabla de frecuencias y porcentajes 1 dígito
sjt.xtab(data$isco08_1d,data$ola,
         show.col.prc=TRUE, 
         var.labels=c("CIUO08","Ola"),
         show.summary=FALSE,
         title="Frecuencias y porcentajes de Ocupación con 1 dígito, por ola")

# Tabla de frecuencias y porcentajes 2 dígitos
sjt.xtab(data$isco08_2d,data$ola,
         show.col.prc=TRUE, 
         var.labels=c("CIUO08","Ola"),
         show.summary=FALSE,
         title="Frecuencias y porcentajes de Ocupación con 2 dígitos, por ola")
```

```{r,echo=FALSE}
# Ir armando data final
data2 <- data %>%
  select(idencuesta,                                     # identificacion enctdo
         ola,                                            # identificacion ola
         version,muestra,tipo_atricion,estrato,          # identificacion srvy
         segmento_disenno,ponderador02,estrato_disenno,  # identificacion srvy
         actividad,actividad2,rel_empleo,rel_empleo2,    # caract empleo
         sector,isco08,isco08_1d,isco08_2d               # caract empleo
         ) %>% 
  sjlabelled::set_na(.,na=c(-999,-888,-777,-666))

data2 <- na.omit(data2)

# 11.462 obs.
```


### cualificacion

Se crea una nueva variable *factor* con el Nivel de cualificación, llamada `cualificacion`, de acuerdo con la variable CIUO08 de 2 dígitos `isco08_2d`, siguiendo el criterio:

- Expertos (Experts): 11 a 34 con universitaria completa o más 
- Calificados (Skilled): 11 a 34 con universitaria incompleta o menos, y 35,41,42,43,44,53, y 51,54,61,62,71,72,73,74,75,81 con media completa o más.
- No calificados (Unskilled): 51,54,61,62,71,72,73,74,75,81 con media incompleta o menos, y 52,63,82,83,90+ 

```{r,echo=FALSE}
# Creación variable Nivel de cualificación
data <- mutate(data,
               cualificacion=factor(case_when(isco08_2d<=34&educ>=9~"Experts",
                                              isco08_2d<=34&educ<9~"Skilled",
                                              isco08_2d%in%c(35,41:44,53)~"Skilled",
                                              isco08_2d%in%c(51,54,61,62,71:75,81)&educ>5~"Skilled",
                                              isco08_2d%in%c(51,54,61,62,71:75,81)&educ<=5~"Unskilled",
                                              isco08_2d%in%c(52,63,82,83,91:99)~"Unskilled"),
                                    levels=c("Experts","Skilled","Unskilled")))

# Tabla de frecuencias y porcentajes 
sjt.xtab(data$cualificacion,data$ola,
         show.col.prc=TRUE, 
         var.labels=c("Nivel de cualificación","Ola"),
         show.summary=FALSE,
         title="Frecuencias y porcentajes del Nivel de Cualificación, por ola")
```

```{r,echo=FALSE}
# Ir armando data final
data2 <- data %>%
  select(idencuesta,                                     # identificacion enctdo
         ola,                                            # identificacion ola
         version,muestra,tipo_atricion,estrato,          # identificacion srvy
         segmento_disenno,ponderador02,estrato_disenno,  # identificacion srvy
         actividad,actividad2,rel_empleo,rel_empleo2,    # caract empleo
         sector,isco08,isco08_1d,isco08_2d,              # caract empleo
         cualificacion                                   # caract empleo
         ) %>% 
  sjlabelled::set_na(.,na=c(-999,-888,-777,-666))

data2 <- na.omit(data2)

# 11.434
```


### Rama: isic4 y rama

La variable *tipo character* ELSOC:

-   `m04`. ¿A qué rubro o giro de actividad se dedica principalmente la empresa, institución o negocio para la cual usted trabaja?

Se encuentra codificada de acuerdo con la CIIU3 para el año 2016 en la variable *numérica* `ciiu3_m04`, y CIIU4 para los años 2018 y 2021 en la variable *numérica* `ciiu4_m04`.

-   `ciiu3_m04`: CIIU (III version) del entrevistado, para el año 2016
-   `ciiu4_m04`: CIIU (IV version) del entrevistado, para el año 2018 y 2021

Por lo tanto, se realiza una recodificación generando una nueva variable *numérica* donde están todas las olas homolagadas a la CIIU4, llamada `isic4`.

```{r,echo=FALSE,message=FALSE}
# Recodificar variable CIIU 3 para que queden de 4 dígitos
data$ciiu3 <- sprintf("%04d",data$ciiu3_m04)

# Recodificar variable CIIU 4 para que queden de 4 dígitos
data$ciiu4 <- sprintf("%04d",data$ciiu4_m04)

# Creación de variable CIIU 4 con CIIU 3
## Carga bbdd con comparacion 31 y 4
isic4_isic31 <- read_csv(here::here("input/ISIC4_ISIC31.txt"))

## Recodificación CIIU 3 -> CIIU 4
indices <- match(data$ciiu3,isic4_isic31$ISIC31code)
data$ciiu4_rec <- isic4_isic31$ISIC4code[indices]

# Creación variable isic4 con ciiu4 y ciiu4_rec (ex ciiu3) 4 digitos
data$isic4 <- ifelse(!is.na(data$ciiu4_rec),data$ciiu4_rec,data$ciiu4) # es la unión en una variable de todo en ciiu4
```

Sin embargo, esta variable también se presente solamente en las olas 2016, 2018 y 2021. Por lo que, se duplican los datos de rama de la actividad económica para los años siguientes, es decir, en 2017 se pondrán los valores de 2016, y así sucesivamente.

```{r,echo=FALSE,message=FALSE,warning=FALSE}
# Crear una columna con la variable "isic4" adelantada una ola
data$isic4 <- as.numeric(data$isic4)

data <- data %>%
  arrange(ola) %>%  # Ordena por ola, por si acaso no está ordenado
  group_by(idencuesta) %>%        # Agrupa por id para trabajar en cada individuo
  mutate(isic4_lagged=lag(isic4,n=1)) %>%  # Desplaza "isic4" a la siguiente ola
  ungroup() 

# Rellenar los valores NA en la variable original
data <- data %>%
  mutate(isic4=ifelse(!is.na(isic4),isic4,isic4_lagged)) %>%  # Si isic4 es NA, sustituir con el valor de la ola anterior
  select(-isic4_lagged)                 # Elimina la columna temporal
```

Además, se crea la variable *numérica* `isic4_2d` con 2 dígitos, y la variable *factor* `rama` con la agrupación del CIIU4 de dos dígitos en ramas de la actividad económica. 

```{r,echo=FALSE}
# CIIU 4: creación de variable con 2 dígitos
data$isic4 <- sprintf("%04d",data$isic4)
data$isic4_2d <- as.character(data$isic4)
data$isic4_2d <- substr(data$isic4,1,2)
data$isic4_2d <- as.numeric(data$isic4_2d)

# Tabla de frecuencias y porcentajes
sjt.xtab(data$isic4_2d,data$ola,
         show.col.prc=TRUE, 
         var.labels=c("Rama de Actividad Económica","Ola"),
         show.summary=FALSE,
         title="Frecuencias y porcentajes de la Rama de Actividad Económica, por ola")



# Creación de variable con letra
data <- mutate(data,
               rama=factor(case_when(isic4_2d<=03~"A",
                              isic4_2d>=05&isic4_2d<=09~"B",
                              isic4_2d>=10&isic4_2d<=33~"C",
                              isic4_2d==35~"D",
                              isic4_2d>=36&isic4_2d<=39~"E",
                              isic4_2d>=41&isic4_2d<=43~"F",
                              isic4_2d>=45&isic4_2d<=47~"G",
                              isic4_2d>=49&isic4_2d<=53~"H",
                              isic4_2d>=55&isic4_2d<=56~"I",
                              isic4_2d>=58&isic4_2d<=63~"J",
                              isic4_2d>=64&isic4_2d<=66~"K",
                              isic4_2d==68~"L",
                              isic4_2d>=69&isic4_2d<=75~"M",
                              isic4_2d>=77&isic4_2d<=82~"N",
                              isic4_2d==84~"O",
                              isic4_2d==85~"P",
                              isic4_2d>=86&isic4_2d<=88~"Q",
                              isic4_2d>=90&isic4_2d<=93~"R",
                              isic4_2d>=94&isic4_2d<=96~"S",
                              isic4_2d>=97&isic4_2d<=98~"T",
                              isic4_2d==99~"U"))) 

# Tabla de frecuencias y porcentajes
sjt.xtab(data$rama,data$ola,
         show.col.prc=TRUE, 
         var.labels=c("Rama de Actividad Económica","Ola"),
         show.summary=FALSE,
         title="Frecuencias y porcentajes de la Rama de Actividad Económica, por ola")
```


### rama2

Se crea una segunda variable *tipo factor* de Rama de la Actividad Económica, llamada `rama_2`, donde:

-   Se unen *B* y *C*
-   Se unen *D*, *E* y *F*
-   Se unen *G* y *I*
-   Se unen *J*, *K*, *L*, *M* y *N*
-   Se unen *P* y *Q*
-   Se unen *R*, *S* y *U*

```{r,echo=FALSE}
# Creación de variable rama 2
data <- mutate(data,
               rama_2=factor(case_when(rama=="A"~"A",
                                rama=="B"|rama=="C"~"BC",
                                rama=="D"|rama=="E"|rama=="F"~"DEF",
                                rama=="G"|rama=="I"~"GI",
                                rama=="H"~"H",
                                rama=="J"|rama=="K"|rama=="L"|rama=="M"|rama=="N"~"JKLMN",
                                rama=="O"~"O",
                                rama=="P"|rama=="Q"~"PQ",
                                rama=="R"|rama=="S"|rama=="U"~"RSU",
                                rama=="T"~"T")))

# Tabla de frecuencias y porcentajes
sjt.xtab(data$rama_2,data$ola,
         show.col.prc=TRUE, 
         var.labels=c("Rama 2","Ola"),
         show.summary=FALSE,
         title="Frecuencias y porcentajes de la Rama 2, por ola")
```

```{r,echo=FALSE}
# Ir armando data final
data2 <- data %>%
  select(idencuesta,                                     # identificacion enctdo
         ola,                                            # identificacion ola
         version,muestra,tipo_atricion,estrato,          # identificacion srvy
         segmento_disenno,ponderador02,estrato_disenno,  # identificacion srvy
         actividad,actividad2,rel_empleo,rel_empleo2,    # caract empleo
         sector,isco08,isco08_1d,isco08_2d,              # caract empleo
         cualificacion,isic4,isic4_2d,rama,rama_2        # caract empleo
         ) %>% 
  sjlabelled::set_na(.,na=c(-999,-888,-777,-666))

data2 <- na.omit(data2)

# 10.858 obs.
```


### supervisa

La variable *numérica* ELSOC:

-   `m06`. En su trabajo, ¿a cuántas personas supervisa usted?

Se recodifica en una nueva variable *dicotómica numérica*, `supervisa`, donde:

-   `supervisa==0`: No supervisa (`m06==0`)
-   `supervisa==1`: Supervisa a una o más personas (`m06>=1`)

```{r,echo=FALSE}
# Crear variable supervisa==1, no supervisa==0
data <- data %>%
  mutate(supervisa=case_when(m06==0~0,
                             m06>=1~1))
```

Pero, dado que la variable `m06` solamente se encuentra en las olas 2016, 2018 y 2021, se duplican los datos para los años siguientes, es decir, en 2017 se pondrán los valores de 2016, y así sucesivamente.

```{r,echo=FALSE}
# Crear una columna con la variable "m06" adelantada una ola
data <- data %>%
  arrange(ola) %>%  # Ordena por ola, por si acaso no está ordenado
  group_by(idencuesta) %>%        # Agrupa por id para trabajar en cada individuo
  mutate(m06_lagged=lag(m06,n=1)) %>%  # Desplaza "m06" a la siguiente ola
  ungroup() 

# Rellenar los valores NA en la variable original
data <- data %>%
  mutate(m06_full=ifelse(!is.na(m06),m06,m06_lagged)) %>%  # Si m06 es NA, sustituir con el valor de la ola anterior
  select(-m06_lagged) 
```

```{r,echo=FALSE}
# Crear variable supervisa==1, no supervisa==0
data <- data %>%
  mutate(supervisa=case_when(m06_full==0~0,
                             m06_full>=1~1))

# Tabla de frecuencias y porcentajes 
sjt.xtab(data$supervisa,data$ola,
         show.col.prc=TRUE, 
         var.labels=c("Supervisa","Ola"),
         show.summary=FALSE,
         title="Frecuencias y porcentajes de variable Supervisa, por ola")


# # Tabla de frecuencias y porcentajes 
# sjt.xtab(elsoc_long_2016_2023$m06,elsoc_long_2016_2023$ola,
#          show.col.prc=TRUE, 
#          var.labels=c("Supervisa","Ola"),
#          show.summary=FALSE,
#          title="Frecuencias y porcentajes de variable Supervisa, por ola")
# 
# resumen_na <- elsoc_long_2016_2023 %>%
#   group_by(ola) %>%                   # Agrupa por la columna "ola"
#   summarise(total_na = sum(is.na(m06)))
```

```{r,echo=FALSE}
# Ir armando data final
data2 <- data %>%
  select(idencuesta,                                     # identificacion enctdo
         ola,                                            # identificacion ola
         version,muestra,tipo_atricion,estrato,          # identificacion srvy
         segmento_disenno,ponderador02,estrato_disenno,  # identificacion srvy
         actividad,actividad2,rel_empleo,rel_empleo2,    # caract empleo
         sector,isco08,isco08_1d,isco08_2d,              # caract empleo
         cualificacion,isic4,isic4_2d,rama,rama_2,       # caract empleo
         supervisa                                       # caract empleo
         ) %>% 
  sjlabelled::set_na(.,na=c(-999,-888,-777,-666))

data2 <- na.omit(data2)

# 10.130 obs.
```


### class1

Se crea la variable tipo factor posición de clase `class1` con 6 categorías:

1. Empleadores y autoempleados profesionales: pequeña burguesia
2. Autoempleados superior incompleta o menos: informales
3. Expert managers
4. Experts
5. Supervisors
6. Workers

```{r,echo=FALSE}
# Creación de variable posición de clase
data <- mutate(data,
               class1=case_when(
                 rel_empleo2=="Empleador"~"Petit bourgeoisie",
                 rel_empleo2=="Autoempleado"&educ>=9~"Petit bourgeoisie",
                 rel_empleo2=="Autoempleado"&educ<9~"Informal",
                 rel_empleo2=="Asalariado"&cualificacion=="Experts"&supervisa==1~"Expert managers",
                 rel_empleo2=="Asalariado"&cualificacion=="Experts"&supervisa==0~"Experts",
                 rel_empleo2=="Asalariado"&cualificacion=="Skilled"&supervisa==1~"Supervisors",
                 rel_empleo2=="Asalariado"&cualificacion=="Unskilled"&supervisa==1~"Supervisors",
                 rel_empleo2=="Asalariado"&cualificacion=="Skilled"&supervisa==0~"Workers",
                 rel_empleo2=="Asalariado"&cualificacion=="Unskilled"&supervisa==0~"Workers"))

data$class1 <- factor(data$class1,
                      levels=c("Petit bourgeoisie",
                               "Informal",
                               "Expert managers",
                               "Experts",
                               "Supervisors",
                               "Workers"))

# Tabla de frecuencias y porcentajes 
sjt.xtab(data$class1, data$ola,
         show.col.prc = TRUE, 
         var.labels = c("Posición de clase 1","Ola"),
         show.summary = FALSE,
         title = "Frecuencias y porcentajes de la Posición de clase 1, por ola")
```


### class1a 

Se crea la variable tipo factor posición de clase `class1a` con 6 categorías ordenadas, dejando a `Expert managers` como categoría de referencia.

```{r,echo=FALSE}
data$class1a <- factor(data$class1,
                       levels=c("Expert managers",
                                "Petit bourgeoisie",
                                "Informal",
                                "Experts",
                                "Supervisors",
                                "Workers"))

# Tabla de frecuencias y porcentajes 
sjt.xtab(data$class1a,data$ola,
         show.col.prc=TRUE, 
         var.labels=c("Posición de clase 1 a","Ola"),
         show.summary=FALSE,
         title="Frecuencias y porcentajes de la Posición de clase 1 a, por ola")
```


### class2

Se crea la variable tipo factor posición de clase `class2` con 7 categorías:

1. Empleadores y autoempleados profesionales: pequeña burguesia
2. Autoempleados superior incompleta o menos: informales
3. Eexpert managers
4. Experts
5. Supervisors
6. Workers
7. Desocupados/Retirados

```{r,echo=FALSE}
# Creación de variable posición de clase
data <- mutate(data,
               class2=case_when(rel_empleo=="Patrón/a o empleador/a"|rel_empleo=="Trabaja solo, no tiene empleados"&educ>=9~"Petit bourgeoisie",
                                rel_empleo=="Trabaja solo, no tiene empleados"&educ<9~"Informal",
                                cualificacion=="Experts"&supervisa==1~"Expert managers",
                                cualificacion=="Experts"&supervisa==0~"Experts",
                                cualificacion=="Skilled"|cualificacion=="Unskilled"&supervisa==1~"Supervisors",
                                cualificacion=="Skilled"|cualificacion=="Unskilled"&supervisa==0~"Workers",
                                actividad=="Jubilado o pensionado"|actividad=="Desempleado, buscando trabajo"~"Desocupados/Retirados"))

data$class2 <- factor(data$class2,
                      levels=c("Petit bourgeoisie",
                               "Informal",
                               "Expert managers",
                               "Experts",
                               "Supervisors",
                               "Workers",
                               "Desocupados/Retirados"))

# Tabla de frecuencias y porcentajes 
sjt.xtab(data$class2,data$ola,
         show.col.prc=TRUE, 
         var.labels=c("Posición de clase 2","Ola"),
         show.summary=FALSE,
         title="Frecuencias y porcentajes de la Posición de clase 2, por ola")
```


### class2a 

Se crea la variable tipo factor posición de clase `class2a` con 7 categorías ordenadas, dejando a `Expert managers` como categoría de referencia.

```{r,echo=FALSE}
data$class2a <- factor(data$class2,
                       levels=c("Expert managers",
                                "Petit bourgeoisie",
                                "Informal",
                                "Experts",
                                "Supervisors",
                                "Workers",
                                "Desocupados/Retirados"))

# Tabla de frecuencias y porcentajes 
sjt.xtab(data$class2a,data$ola,
         show.col.prc=TRUE, 
         var.labels=c("Posición de clase 2 a","Ola"),
         show.summary=FALSE,
         title="Frecuencias y porcentajes de la Posición de clase 2 a, por ola")
```


### class3

Se crea la variable tipo factor posición de clase `class3` con 6 categorías, fijando la clase para la ola 3.

```{r,echo=FALSE}
# Identificar los valores de "class1" en la ola 3
class1_ola3 <- data %>%
  filter(ola==3) %>%
  select(idencuesta,class1) %>%  
  rename(class3=class1) # Renombrar "class1" a "class3"

# Unir esta información con la base de datos original
data <- data %>%
  left_join(class1_ola3,by="idencuesta") 

# Tabla de frecuencias y porcentajes 
sjt.xtab(data$class3,data$ola,
         show.col.prc=TRUE, 
         var.labels=c("Posición de clase 3","Ola"),
         show.summary=FALSE,
         title="Frecuencias y porcentajes de la Posición de clase 3, por ola")
```


### class3a 

```{r,echo=FALSE}
# Identificar los valores de "class1a" en la ola 3
class1a_ola3 <- data %>%
  filter(ola==3) %>%
  select(idencuesta,class1a) %>%  
  rename(class3a=class1a) # Renombrar "class2" a "class3"

# Unir esta información con la base de datos original
data <- data %>%
  left_join(class1a_ola3,by="idencuesta")

# Tabla de frecuencias y porcentajes 
sjt.xtab(data$class3a,data$ola,
         show.col.prc=TRUE, 
         var.labels=c("Posición de clase 3 a","Ola"),
         show.summary=FALSE,
         title="Frecuencias y porcentajes de la Posición de clase 3 a, por ola")
```


### class4

```{r,echo=FALSE}
# Identificar los valores de "class1" en la ola 3
class2_ola3 <- data %>%
  filter(ola==3) %>%
  select(idencuesta,class2) %>%  
  rename(class4=class2) # Renombrar "class2" a "class3"

# Unir esta información con la base de datos original
data <- data %>%
  left_join(class2_ola3,by="idencuesta") 

# Tabla de frecuencias y porcentajes 
sjt.xtab(data$class4,data$ola,
         show.col.prc=TRUE, 
         var.labels=c("Posición de clase 4","Ola"),
         show.summary=FALSE,
         title="Frecuencias y porcentajes de la Posición de clase 4, por ola")
```


### class4a 

```{r,echo=FALSE}
# Identificar los valores de "class1" en la ola 3
class2a_ola3 <- data %>%
  filter(ola==3) %>%
  select(idencuesta,class2a) %>%  
  rename(class4a=class2a) # Renombrar "class2" a "class3"

# Unir esta información con la base de datos original
data <- data %>%
  left_join(class2a_ola3,by="idencuesta") 

# Tabla de frecuencias y porcentajes 
sjt.xtab(data$class4a,data$ola,
         show.col.prc=TRUE, 
         var.labels=c("Posición de clase 4 a","Ola"),
         show.summary=FALSE,
         title="Frecuencias y porcentajes de la Posición de clase 4 a, por ola")
```

### class5

Se crea la variable tipo factor posición de clase `class3` con 6 categorías, fijando la clase para la ola 3.

```{r,echo=FALSE}
# Identificar los valores de "class1" en la ola 3
class1_ola1 <- data %>%
  filter(ola==1) %>%
  select(idencuesta,class1) %>%  
  rename(class5=class1) # Renombrar "class1" a "class3"

# Unir esta información con la base de datos original
data <- data %>%
  left_join(class1_ola1,by="idencuesta") 

# Tabla de frecuencias y porcentajes 
sjt.xtab(data$class5,data$ola,
         show.col.prc=TRUE, 
         var.labels=c("Posición de clase 5","Ola"),
         show.summary=FALSE,
         title="Frecuencias y porcentajes de la Posición de clase 5, por ola")
```


### class5a 

```{r,echo=FALSE}
# Identificar los valores de "class1a" en la ola 3
class1a_ola1 <- data %>%
  filter(ola==1) %>%
  select(idencuesta,class1a) %>%  
  rename(class5a=class1a) # Renombrar "class2" a "class3"

# Unir esta información con la base de datos original
data <- data %>%
  left_join(class1a_ola1,by="idencuesta")

# Tabla de frecuencias y porcentajes 
sjt.xtab(data$class5a,data$ola,
         show.col.prc=TRUE, 
         var.labels=c("Posición de clase 5 a","Ola"),
         show.summary=FALSE,
         title="Frecuencias y porcentajes de la Posición de clase 5 a, por ola")
```


### class6

```{r,echo=FALSE}
# Identificar los valores de "class1" en la ola 3
class2_ola1 <- data %>%
  filter(ola==1) %>%
  select(idencuesta,class2) %>%  
  rename(class6=class2) # Renombrar "class2" a "class3"

# Unir esta información con la base de datos original
data <- data %>%
  left_join(class2_ola1,by="idencuesta") 

# Tabla de frecuencias y porcentajes 
sjt.xtab(data$class6,data$ola,
         show.col.prc=TRUE, 
         var.labels=c("Posición de clase 6","Ola"),
         show.summary=FALSE,
         title="Frecuencias y porcentajes de la Posición de clase 6, por ola")
```


### class6a 

```{r,echo=FALSE}
# Identificar los valores de "class1" en la ola 3
class2a_ola1 <- data %>%
  filter(ola==1) %>%
  select(idencuesta,class2a) %>%  
  rename(class6a=class2a) # Renombrar "class2" a "class3"

# Unir esta información con la base de datos original
data <- data %>%
  left_join(class2a_ola1,by="idencuesta") 

# Tabla de frecuencias y porcentajes 
sjt.xtab(data$class6a,data$ola,
         show.col.prc=TRUE, 
         var.labels=c("Posición de clase 6 a","Ola"),
         show.summary=FALSE,
         title="Frecuencias y porcentajes de la Posición de clase 6 a, por ola")
```

```{r,echo=FALSE}
# Ir armando data final
data2 <- data %>%
  select(idencuesta,                                     # identificacion enctdo
         ola,                                            # identificacion ola
         version,muestra,tipo_atricion,estrato,          # identificacion srvy
         segmento_disenno,ponderador02,estrato_disenno,  # identificacion srvy
         actividad,actividad2,rel_empleo,rel_empleo2,    # caract empleo
         sector,isco08,isco08_1d,isco08_2d,              # caract empleo
         cualificacion,isic4,isic4_2d,rama,rama_2,       # caract empleo
#         supervisa,                                      # caract empleo
#         class1,class1a,class2,class2a,class3,
         class3a   # caract empleo
#         class4,class4a,class5,class5a,class6,class6a    # caract empleo
         ) %>% 
  sjlabelled::set_na(.,na=c(-999,-888,-777,-666))

data2 <- na.omit(data2)

# 9.072 obs.
```


### Alluvial

```{r,echo=FALSE}
elsoc_diseno <- svydesign(ids = ~segmento_disenno, #muestreo por conglomerado a nivel de manzanas (segmento)
                          strata = ~estrato_disenno, #muestreo estratificado a nivel ciudad (estato)
                          weights = ~ponderador_long_total, #ponderador longitudinal
                          nest = TRUE,
                          data = data)

#Paso 1
datos.clase <- data.frame((svytable(~class1 + ola + idencuesta, elsoc_diseno, round = F))) %>% dplyr::filter(Freq>0)  %>% group_by(ola) %>% mutate(porcentaje=Freq/sum(Freq)) %>% na.omit()

#Paso 2
etiquetas.clase <- data.frame((svytable(~class1 + ola, elsoc_diseno, round = F))) %>% group_by(ola) %>% mutate(porcentaje=Freq/sum(Freq)) %>% na.omit() %>% 
  mutate(idencuesta = 1)
datos.clase$class1 <- factor(datos.clase$class1, levels = rev(levels(datos.clase$class1)))
etiquetas.clase$class1 <- factor(etiquetas.clase$class1, levels = rev(levels(etiquetas.clase$class1)))
```

```{r alluvial,echo=FALSE}
colors<- c("#f1eef6ff","#bdc9e1ff","#b3b3b3ff","#74a9cfff","#0570b0ff")
alluvial_clase <- ggplot(datos.clase, aes(x = ola, fill = class1, stratum = class1,
                             alluvium = idencuesta, y = porcentaje))+
    ggalluvial::geom_flow(alpha = .66) + 
    ggalluvial::geom_stratum(linetype = 0) +
    scale_y_continuous(labels = scales::percent) + 
    ylab(label = NULL) +
    xlab(label = NULL) + 
    theme(#legend.position = 'top',
          legend.title = element_blank(),
          plot.caption = element_text(hjust = 1)) +
#    scale_fill_manual(values = colors) +
    geom_shadowtext(data = etiquetas.clase, 
              aes(label = ifelse(porcentaje > 0 , scales::percent(porcentaje, accuracy = .1),"")),
              position = position_stack(vjust = .5),
              show.legend = FALSE,
              size = 4,
              color = rep('white'),
              bg.colour='grey30')+
  scale_x_discrete(labels = c(2016, 2017, 2018, 2019, 2021, 2022, 2023))

alluvial_clase

ggsave(alluvial_clase, file="output/graphs/alluvial_clase.png", height = 8, width = 7)
```

### Participación en sindicatos

Con la variable *numérica* ELSOC:

-   `c12_04`. Membresía sindicatos

Se crea la variable `mem_sindicato`. Pero, dado que la variable `c12_04` solamente se encuentra en las olas 2016, 2018 y 2021, se duplican los datos para los años siguientes, es decir, en 2017 se pondrán los valores de 2016, y así sucesivamente.

```{r,echo=FALSE}
# Crear una columna con la variable "c12_04" adelantada una ola
data <- data %>%
  arrange(ola) %>%  # Ordena por ola, por si acaso no está ordenado
  group_by(idencuesta) %>%        # Agrupa por id para trabajar en cada individuo
  mutate(c12_04_lagged=lag(c12_04,n=1)) %>%  # Desplaza c12_04 a la siguiente ola
  ungroup() 

# Rellenar los valores NA en la variable original
data <- data %>%
  mutate(c12_04_full=ifelse(!is.na(c12_04),c12_04,c12_04_lagged)) %>%  # Si c12_04 es NA, sustituir con el valor de la ola anterior
  select(-c12_04_lagged) 
```

```{r,echo=FALSE}
# Recodficar
data <- data %>%
  mutate(mem_sindicato=car::recode(c12_04_full,
                                   recodes=c("1='No es miembro';
                                              2='Miembro inactivo';
                                              3='Miembro activo'"),
                                   as.factor=TRUE, # convertir a factor
                                   levels=c("No es miembro",
                                            "Miembro inactivo",
                                            "Miembro activo"))) # ordenar niveles

# Tabla de frecuencias y porcentajes
sjt.xtab(data$mem_sindicato,data$ola,
         show.col.prc=TRUE, 
         var.labels=c("Membresía sindical","Ola"),
         show.summary=FALSE,
         title="Frecuencias y porcentajes de Trabajadores/as miembros/as de sindicatos, por ola") 
```


### unionized

Se crea una nueva variable *dicotómica*, llamada `unionized`, para identificar a aquellas personas que:

-   `unionized==1`: Sean mienmbros activos (`c12_04==3`) o inactivos (`c12_04==2`) de sindicatos
-   `unionized==0`: No sean miembros de sindicatos (`c12_04==1`)

```{r,echo=FALSE}
# Crear variable binaria: unionized
data <- mutate(data,
               unionized=if_else(c12_04_full==2|c12_04_full==3,1,0))

# Tabla de frecuencias y porcentajes
sjt.xtab(data$unionized,data$ola,
         show.col.prc=TRUE, 
         var.labels=c("Unionized","Ola"),
         show.summary=FALSE,
         title="Frecuencias y porcentajes de Trabajadores/as Sindicalizados/as, por ola") 
```

```{r,echo=FALSE}
# Ir armando data final
data2 <- data %>%
  select(idencuesta,                                     # identificacion enctdo
         ola,                                            # identificacion ola
         version,muestra,tipo_atricion,estrato,          # identificacion srvy
         segmento_disenno,ponderador02,estrato_disenno,  # identificacion srvy
         actividad,actividad2,rel_empleo,rel_empleo2,    # caract empleo
         sector,isco08,isco08_1d,isco08_2d,              # caract empleo
         cualificacion,isic4,isic4_2d,rama,rama_2,       # caract empleo
#         supervisa,                                      # caract empleo
#         class1,class1a,class2,class2a,class3,
         class3a   # caract empleo
#         class4,class4a,class5,class5a,class6,class6a    # caract empleo
#         unionized
) %>% 
  sjlabelled::set_na(.,na=c(-999,-888,-777,-666))

data2 <- na.omit(data2)

# 9.072 obs.
```


## Política

### Autoposicionamiento

Observamos la variable *numérica* ELSOC:

-   `c15`. Cambiando de tema, tradicionalmente en nuestro país la gente define las posiciones políticas como más cercanas a la izquierda, al centro o a la derecha. Usando una escala de 0 a 10, donde 0 es ser de "izquierda", 5 es ser de "centro" y 10 es ser de "derecha", ¿Dónde se ubicaría usted en esta escala?

```{r,echo=FALSE}
# Tabla de frecuencias y porcentajes
sjt.xtab(data$c15,data$ola,
         show.col.prc=TRUE, 
         var.labels=c("Autoposicionamiento","Ola"),
         show.summary=FALSE,
         title="Frecuencias y porcentajes de Actividad principal, por ola") 
```


### pol_id

Con la variable *numérica* ELSOC:

-   `c15`. Cambiando de tema, tradicionalmente en nuestro país la gente define las posiciones políticas como más cercanas a la izquierda, al centro o a la derecha. Usando una escala de 0 a 10, donde 0 es ser de "izquierda", 5 es ser de "centro" y 10 es ser de "derecha", ¿Dónde se ubicaría usted en esta escala?

Se crea la variable *factor* `pol_id`.

```{r,echo=FALSE}
# Recodficar
data <- data[!is.na(data$c15), ]
data$pol_id <- car::recode(data$c15,
                           recodes=c("c(11,12,-888,-999)='No se identifica';
                                      c(0,1,2,3,4)='Izquierda';
                                      c(5)='Centro';
                                      c(6,7,8,9,10)='Derecha'"),
                           as.factor=TRUE, 
                           levels=c('Izquierda', 
                                    'Centro',
                                    'Derecha',
                                    'No se identifica'))

# Tabla de frecuencias y porcentajes
sjt.xtab(data$pol_id,data$ola,
         show.col.prc=TRUE, 
         var.labels=c("Identificación política","Ola"),
         show.summary=FALSE,
         title="Frecuencias y porcentajes de Identificación Política, por ola") 
```


### pol_interes

Observamos la variable *numérica* ELSOC:

-   `c13`. ¿Qué tan interesado está usted en la política?

Se crea la variable `pol_interes`.

```{r,echo=FALSE}
# Recodficar
data <- data[!is.na(data$c13), ]
data <- data %>%
  mutate(pol_interes=c13)

# Tabla de frecuencias y porcentajes
sjt.xtab(data$pol_interes,data$ola,
         show.col.prc=TRUE, 
         var.labels=c("Interés en la política","Ola"),
         show.summary=FALSE,
         title="Frecuencias y porcentajes de Trabajadores/as interesados en la política, por ola") 
```


### pol_habla

Observamos la variable *numérica* ELSOC:

-   `c14_01`. ¿Con qué frecuencia realiza usted las siguientes actividades? Habla de política con familiares o amigos

Se crea la variable `pol_habla`.

```{r,echo=FALSE}
# Recodficar
data <- data[!is.na(data$c14_01), ]
data <- data %>%
  mutate(pol_habla=c14_01)

# Tabla de frecuencias y porcentajes
sjt.xtab(data$pol_habla,data$ola,
         show.col.prc=TRUE, 
         var.labels=c("Habla de política","Ola"),
         show.summary=FALSE,
         title="Frecuencias y porcentajes de Habla de política, por ola") 
```


### pol_inform

Observamos la variable *numérica* ELSOC:

-   `c14_02`. ¿Con qué frecuencia realiza usted las siguientes actividades? Se informa activamente sobre política en medios tales como televisión, radios, diarios o internet

Se crea la variable `pol_inform`.

```{r,echo=FALSE}
# Recodficar
data <- data[!is.na(data$c14_02), ]
data <- data %>%
  mutate(pol_inform=c14_02)

# Tabla de frecuencias y porcentajes
sjt.xtab(data$pol_inform,data$ola,
         show.col.prc=TRUE, 
         var.labels=c("Se informa de política","Ola"),
         show.summary=FALSE,
         title="Frecuencias y porcentajes de Se informa de política, por ola") 
```


## Brechas salariales

Eliminamos los casos que responden '0' en salario.
{revisar si se deberían eliminar también los que responden 1}

```{r}
summary(data$perc_gerente)
data <- data %>% filter(perc_gerente>100000)
data <- data %>% filter(perc_gerente<1200000000)
hist(data$perc_gerente)
summary(data$perc_obrero)
data <- data %>% filter(perc_obrero>10000)
data <- data %>% filter(perc_obrero<10000000)
hist(data$perc_obrero)
summary(data$just_gerente)
data <- data %>% filter(just_gerente>100000)
data <- data %>% filter(just_gerente<1200000000)
hist(data$just_gerente)
data <- data %>% filter(just_obrero>10000)
data <- data %>% filter(just_obrero<10000000)
hist(data$just_obrero)
```


```{r}
data$brecha_perc <- log(data$perc_gerente/data$perc_obrero)
data$brecha_just <- log(data$just_gerente/data$just_obrero)
data$brecha_gerente <- log(data$perc_gerente/data$just_gerente)
data$brecha_obrero <- log(data$perc_obrero/data$just_obrero)
```

```{r}
summary(data$brecha_perc)
```

* Brecha > 0: El salario percibido gerente es mayor que el salario percibido obrero.
* Brecha = 0: El salario percibido gerente es igual al salario percibido obrero (equidad).
* Brecha < 0: El salario percibido gerente es menor que el salario percibido obrero.

```{r}
summary(data$brecha_just)
```

* Brecha > 0: El salario de un gerente debería ser mayor que el salario obrero.
* Brecha = 0: El salario de un gerente debería ser igual al salario obrero (equidad).
* Brecha < 0: El salario de un gerente debería ser menor que el salario obrero.

```{r}
summary(data$brecha_gerente)
```

* Brecha > 0: El salario percibido de un gerente es mayor que el salario que debería tener (sobrepago).
* Brecha = 0: El salario percibido de un gerente es igual al salario que debería tener (equidad).
* Brecha < 0: El salario percibido de un gerente es menor que el salario que debería tener (infra-pago).

```{r}
summary(data$brecha_obrero)
```

* Brecha > 0: El salario percibido de un obrero es mayor que el salario que debería tener (sobrepago).
* Brecha = 0: El salario percibido de un obrero es igual al salario que debería tener (equidad).
* Brecha < 0: El salario percibido de un obrero es menor que el salario que debería tener (infra-pago).


## Sociodemográficos

### metrop

Con la variable *numérica* ELSOC:

-   `region_cod`. Region (Codigo)

Se crea la variable *dicotómica* `metrop`, donde:

-   `metrop==0`: No pertenece a la Región Metropolitana
-   `metrop==1`: Pertenece a la Región Metropolitana (`region_cod==13`)

```{r,echo=FALSE}
# Crear variable sector
data <- data %>%
  mutate(metrop=if_else(region_cod==13,1,0))

# Tabla de frecuencias y porcentajes 
sjt.xtab(data$metrop,data$ola,
         show.col.prc=TRUE, 
         var.labels=c("Región Metropolitana","Ola"),
         show.summary=FALSE,
         title="Frecuencias y porcentajes de variable Región Metropolitana, por ola")
```


### educ

Con la variable *numérica* ELSOC:

-   `m01`. ¿Cuál es su nivel educacional? Indique el tipo de estudio actual (si estudia actualmente) o el último tipo aprobado (si no estudia actualmente).

Se crea la variable *factor* `educ`, donde:

-   `educ==Básica`: Educación básica completa o menos (`m02==1`,`m02==2`,`m02==3`)
-   `educ==Media`: Educación media incompleta o completa (`m02==4`,`m02==5`)
-   `educ==Técnica`: Educación técnica incompleta o completa (`m02==6`,`m02==7`)
-   `educ==Superior`: Educación superior incompleta o completa, y postgrado (`m02==8`,`m02==9`,`m02==10`)

```{r,echo=FALSE}
data <- data[!is.na(data$educ), ]
data$educ <- car::recode(data$educ,
                         recodes=c("c(1,2,3)='Básica';
                                    c(4,5)='Media';
                                    c(6,7)='Técnica';
                                    c(8,9,10)='Superior'"),
                         as.factor=TRUE, 
                         levels=c('Básica',
                                  'Media',
                                  'Técnica',
                                  'Superior'))

# Tabla de frecuencias y porcentajes 
sjt.xtab(data$educ,data$ola,
         show.col.prc=TRUE, 
         var.labels=c("Educación","Ola"),
         show.summary=FALSE,
         title="Frecuencias y porcentajes de variable Educación, por ola")
```


### Identidad de clase

Con la variable *numérica* ELSOC:

-   `c33`. En la sociedad, comúnmente, existen distintos grupos o clases sociales. Las personas de clase social alta son las que tienen los ingresos más altos, el mayor nivel de educación y los trabajos más valorados. Las personas de clase social baja son las que tienen los ingresos más bajos, el menor nivel de educación y los trabajos menos valorados. Entre estas clases existen otras intermedias. Según su opinión, a cuál de los siguientes grupos o clases sociales pertenece usted:

Se crea la variable *factor* `class_id`, donde:

-   `class_id==Baja`: Clase baja y media baja (`c33==1`,`c33==2`)
-   `class_id==Media`: Clase media  (`c33==3`)
-   `class_id==Alta`: Clase media alta y alta (`c33==4`,`c33==5`)

```{r,echo=FALSE}
# data <- data[!is.na(data$c33), ]
data$class_id <- car::recode(data$c33,
                         recodes=c("c(1,2)='Baja';
                                    c(3)='Media';
                                    c(4,5)='Alta'"),
                         as.factor=TRUE, 
                         levels=c('Baja',
                                  'Media',
                                  'Alta'))
```

Ya que esta variable no se preguntó en la ola 2 (2018), se duplican los valores de la ola 1. Tener en consideración que desde la ola 4 en adelante, solamente se pregunta para la muestra de refresco.

```{r,echo=FALSE}
# Crear una columna con la variable class_id adelantada una ola
data <- data %>%
  group_by(idencuesta) %>%  # Agrupa por id para trabajar en cada individuo
  mutate(class_id_lagged=if_else(ola==2,lag(as.character(class_id),n=1),NA_character_)) %>%  # Desplaza class_id solo para la ola 2
  ungroup() %>%
# Rellenar los valores NA (de las olas que no estaban) en la variable original
  mutate(class_id=ifelse(!is.na(class_id),as.character(class_id),class_id_lagged)) %>%  # Sustituye valores de class_id si es NA solo con la variable desplazada
  mutate(class_id=factor(class_id)) %>%  # Convierte de nuevo a factor
  select(-class_id_lagged)  # Elimina la columna temporal
```

```{r,echo=FALSE}
# Volver a establecer niveles
data$class_id <- factor(data$class_id,
                        levels=c("Baja",
                                 "Media",
                                 "Alta"))

# Tabla de frecuencias y porcentajes
sjt.xtab(data$class_id,data$ola,
         show.col.prc=TRUE, 
         var.labels=c("Identidad de Clase","Ola"),
         show.summary=FALSE,
         title="Frecuencias y porcentajes de variable Identidad de Clase, por ola")
```



### Estatus social subjetivo

Con la variable *numérica* ELSOC:

-   `d01_01`. En nuestra sociedad, hay grupos que tienden a ubicarse en los niveles más altos y grupos que tienden a ubicarse en los niveles más bajos de la sociedad. Usando la escala presentada, donde 0 es el nivel más bajo y 10 el nivel más alto,  ¿Dónde se ubicaría usted en la sociedad chilena?

Se crea la variable *numérica* `class_estatus`, donde:

```{r,echo=FALSE}
data <- data[!is.na(data$d01_01), ]
data <- data %>%
  mutate(class_estatus=d01_01)

# Tabla de frecuencias y porcentajes 
sjt.xtab(data$class_estatus,data$ola,
         show.col.prc=TRUE, 
         var.labels=c("Estatus social subjetivo","Ola"),
         show.summary=FALSE,
         title="Frecuencias y porcentajes de variable Estatus social subjetivo, por ola")
```


### Ingreso

```{r,echo=FALSE}
#Impute midpoint of income ranges
data$m14_rec <- as.numeric(car::recode(data$m14,
                                       "1=20000;
                                       2=62500;
                                       3=105000;
                                       4=147500;
                                       5=190000;
                                       6=220000;
                                       7=255000;
                                       8=300000;
                                       9=340000;
                                       10=380000;
                                       11=432500;
                                       12=502500;
                                       13=602500;
                                       14=757500;
                                       15=1075000;
                                       16=1300000"))

#Impute midpoint of income ranges (2021)
data$m14b_rec <- as.numeric(car::recode(data$m14b,
                                        "1=125000;
                                        2=300000;
                                        3=400000;
                                        4=575000;
                                        5=700000;
                                        c(9,10,11,12,16)=NA"))

#Recode DK/DA of Income to NA
data$m13_rec <- as.numeric(car::recode(data$m13,"c(-888,-999)=NA"))

#replace NA of income with new imputed variable
data$m13_imp <- ifelse(!is.na(data$m13_rec),data$m13_rec,data$m14_rec)
summary(data$m13_imp)

data$m13_imp <- ifelse(is.na(data$m13_imp),data$m14b_rec,data$m13_imp)
summary(data$m13_imp)

data$ingreso <- data$m13_imp
```


### Log del ingreso

```{r,echo=FALSE}
data$ingreso_log <- log(data$ingreso)
```


### Edad al cuadrado

Con la variable *numérica* ELSOC:

- `m0_edad`: Edad del entrevistado

Se crea la variable *numérica* `edad2` con la edad al cuadrado.

```{r,echo=FALSE}
data$edad2 <- (data$edad)**2
```


### female

Se crea una nueva variable dicotómica, llamada `female`, para identificar a aquellas personas que:

-   `female==0`: En la variable sexo no se identifican como mujeres
-   `female==1`: En la variable sexo se identifican como mujeres

```{r,echo=FALSE}
# Crear variable binaria: female
data <- mutate(data,
               female=if_else(sexo==2,1,0))

# Tabla de frecuencias y porcentajes
sjt.xtab(data$female,data$ola,
         show.col.prc=TRUE, 
         var.labels=c("Female","Ola"),
         show.summary=FALSE,
         title="Frecuencias y porcentajes de Mujeres, por ola") 
```


## Nuevas

### c10_01: Votar es mi deber como ciudadano

```{r,echo=FALSE}
# Tabla de frecuencias y porcentajes
sjt.xtab(data$voto_deber,data$ola,
         show.col.prc=TRUE, 
         var.labels=c("Votar es mi deber como ciudadano","Ola"),
         show.summary=FALSE,
         title="Frecuencias y porcentajes de Votar es mi deber como ciudadano, por ola") 
```


### c10_02: Mi voto influye

```{r,echo=FALSE}
# Tabla de frecuencias y porcentajes
sjt.xtab(data$voto_influye,data$ola,
         show.col.prc=TRUE, 
         var.labels=c("Mi voto influye","Ola"),
         show.summary=FALSE,
         title="Frecuencias y porcentajes de Mi voto influye, por ola") 
```


### c10_03: Votar permite expresar mis ideas

```{r,echo=FALSE}
# Tabla de frecuencias y porcentajes
sjt.xtab(data$voto_ideas,data$ola,
         show.col.prc=TRUE, 
         var.labels=c("Votar permite expresar mis ideas","Ola"),
         show.summary=FALSE,
         title="Frecuencias y porcentajes de Votar permite expresar mis ideas, por ola") 
```


### c18_01: Sociedad requiere grupos inferiores y superiores

```{r}
data <- data %>%
  mutate(grupos_inf_sup=c18_01)

# Tabla de frecuencias y porcentajes
sjt.xtab(data$grupos_inf_sup,data$ola,
         show.col.prc=TRUE, 
         var.labels=c("Sociedad requiere grupos inferiores y superiores","Ola"),
         show.summary=FALSE,
         title="Frecuencias y porcentajes de Sociedad requiere grupos inferiores y superiores, por ola") 
```


### c18_02: Se debe dar a todos las mismas oportunidades

```{r}
data <- data %>%
  mutate(mismas_oportunidades=c18_02)

# Tabla de frecuencias y porcentajes
sjt.xtab(data$mismas_oportunidades,data$ola,
         show.col.prc=TRUE, 
         var.labels=c("Se debe dar a todos las mismas oportunidades","Ola"),
         show.summary=FALSE,
         title="Frecuencias y porcentajes de Se debe dar a todos las mismas oportunidades, por ola") 
```


### c18_03: Se debe igualar las condiciones

```{r}
data <- data %>%
  mutate(igualar_condiciones=c18_03)

# Tabla de frecuencias y porcentajes
sjt.xtab(data$igualar_condiciones,data$ola,
         show.col.prc=TRUE, 
         var.labels=c("Se debe igualar las condiciones","Ola"),
         show.summary=FALSE,
         title="Frecuencias y porcentajes de Se debe igualar las condiciones, por ola") 
```


### c18_08: Cambio social es posible

```{r}
data <- data %>%
  mutate(cambio_posible=c18_08)

# Tabla de frecuencias y porcentajes
sjt.xtab(data$cambio_posible,data$ola,
         show.col.prc=TRUE, 
         var.labels=c("Cambio social es posible","Ola"),
         show.summary=FALSE,
         title="Frecuencias y porcentajes de Cambio social es posible, por ola") 
```


### c18_09: Las personas son recompensadas por su esfuerzo

```{r}
data <- data %>%
  mutate(recompensa_esfuerzo=c18_09)

# Tabla de frecuencias y porcentajes
sjt.xtab(data$recompensa_esfuerzo,data$ola,
         show.col.prc=TRUE, 
         var.labels=c("Las personas son recompensadas por su esfuerzo","Ola"),
         show.summary=FALSE,
         title="Frecuencias y porcentajes de Las personas son recompensadas por su esfuerzo, por ola") 
```


### c18_10: Las personas son recompensadas por su inteligencia

```{r}
data <- data %>%
  mutate(recompensa_inteligencia=c18_10)

# Tabla de frecuencias y porcentajes
sjt.xtab(data$recompensa_inteligencia,data$ola,
         show.col.prc=TRUE, 
         var.labels=c("Las personas son recompensadas por su inteligencia","Ola"),
         show.summary=FALSE,
         title="Frecuencias y porcentajes de Las personas son recompensadas por su inteligencia, por ola") 
```


### c18_11: Las diferencias de ingreso son demasiado grandes

```{r}
data <- data %>%
  mutate(dif_ingreso=c18_11)

# Tabla de frecuencias y porcentajes
sjt.xtab(data$dif_ingreso,data$ola,
         show.col.prc=TRUE, 
         var.labels=c("Las diferencias de ingreso son demasiado grandes","Ola"),
         show.summary=FALSE,
         title="Frecuencias y porcentajes de Las diferencias de ingreso son demasiado grandes, por ola") 
```


## Guardar datos

Las bases generadas serán:

- Principal: Con todos los datos
  - `elsoc-minicoes.Rdata`
  - `elsoc-minicoes.rds`
  
```{r,echo=FALSE}
# Ir armando data final
elsoc_minicoes <- data %>%
  select(idencuesta,                                     # identificacion enctdo
         ola,                                            # identificacion ola
         version,muestra,tipo_atricion,estrato,          # identificacion srvy
         segmento_disenno,ponderador02,estrato_disenno,  # identificacion srvy
         sexo,female,edad,edad2,educ,metrop,             # caract sociodem
         ingreso,ingreso_log,                            # caract sociodem
         actividad,actividad2,rel_empleo,rel_empleo2,    # caract empleo
         sector,isco08,isco08_1d,isco08_2d,              # caract empleo
         cualificacion,isic4,isic4_2d,rama,rama_2,       # caract empleo
         supervisa,                                      # caract empleo
         class1,class1a,class2,class2a,                  # clase y estatus
         class3,class3a,class4,class4a,                  # clase y estatus
         class5,class5a,class6,class6a,                  # clase y estatus
         class_id, class_estatus,                        # clase y estatus
         c12_04,c12_04_full,mem_sindicato,unionized,     # membresia sindicato
         marcha,                                         # freq participa marchas
         huelga,                                         # freq participa huelgas
         c15,pol_id,pol_interes,pol_habla,pol_inform,    # interes politica
         perc_gerente,                                   # Salario percibido gerente
         perc_obrero,                                    # Salario percibido obrero
         just_gerente,                                   # Salario justo gerente
         just_obrero,                                    # Salario justo obrero
         brecha_perc,brecha_just,
         brecha_gerente,brecha_obrero,
         voto_deber,voto_influye,voto_ideas,
         grupos_inf_sup,mismas_oportunidades,
         igualar_condiciones,cambio_posible,
         recompensa_esfuerzo,recompensa_inteligencia,
         dif_ingreso
         ) %>% 
  sjlabelled::set_na(.,na=c(-999,-888,-777,-666))

save(elsoc_minicoes,file=(here::here("output/elsoc-minicoes.Rdata")))
saveRDS(elsoc_minicoes,file=(here::here("output/elsoc-minicoes.rds")))

# 18.645 obs.
```  
  
```{r}
colSums(is.na(elsoc_minicoes))
```


```{r,echo=FALSE}
# Ir armando data final
elsoc_minicoes2 <- elsoc_minicoes %>%
  filter(actividad=='Trabaja de manera remunerada con jornada completa'|
         actividad=='Trabaja de manera remunerada a tiempo parcial'|
         actividad=='Estudia y trabaja')

save(elsoc_minicoes2,file=(here::here("output/elsoc-minicoes2.Rdata")))
saveRDS(elsoc_minicoes2,file=(here::here("output/elsoc-minicoes2.rds")))

# 11.632 obs.
```  


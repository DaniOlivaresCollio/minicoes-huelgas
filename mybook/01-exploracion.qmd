# Exploración y Preparación de datos

<div style="text-align: justify">

```{r cargar-paquetes-2,echo=FALSE,warning=FALSE,message=FALSE}
rm(list=ls())
options(scipen = 999)
library(pacman)
p_load(tidyverse,
       knitr,
       bookdown,
       car,
       sjmisc,
       sjPlot,
       sjlabelled,
       psych,
       kableExtra,
       gridExtra,
       lubridate,
       viridis,
       statar,
       readxl,
       tinytex,
       ggrepel,
       ggalluvial,
       survey, 
       httr,
       # devtools,
       readr, 
       ggplot2, 
       labelled)

# devtools::install_github("DiogoFerrari/occupar",dependencies=F)
```

Cargamos la base de datos ELSOC 2016-2022 en formato *long*.

```{r datos-2,echo=FALSE}
load(here::here("input/data/ELSOC_Long.RData"))
```

Seleccionamos las variables de interés.

```{r seleccion}
# Seleccion solo para mirar, aun sin ponderadores
data <- elsoc_long_2016_2022 %>%
  select(idencuesta,                                     # identificacion enctdo
         ola,ola_w01,ola_w02,ola_w03,                    # identificacion ola
         ola_w04,ola_w05,ola_w06,                        # identificacion ola
         version,muestra,tipo_atricion,estrato,          # identificacion srvy
         segmento_disenno,ponderador02,estrato_disenno,  # identificacion srvy
         sexo=m0_sexo,edad=m0_edad,educ=m01,             # caract sociodem
         m02,m06,m07,m08,m10,                            # caract sociodem
         m03,ciuo88_m03,ciuo08_m03,                      # caract ocupacional
         m04,ciiu3_m04,ciiu4_m04,                        # caract ocupacional
         c12_04,                                         # membresia sindicato
         c08_02,                                         # freq participa marchas
         marcha=c08_03,                                  # freq participa huelgas ## Kev debiése llamarse huelgas?
         c20,c20_otro,                                   # mov que mas valora
         c21_01,c21_02,c21_03,c21_04,c21_05,c21_06,      # caract mov valora
         c21_07,c21_08,c21_09,c21_10,c21_11,c22,c23,c24, # caract mov valora
         c13,c14_01,c14_02,                              # interes politica
         perc_gerente=d03_01,                            # Salario percibido gerente
         perc_obrero=d03_02,                             # Salario percibido obrero
         just_gerente=d04_01,                            # Salario justo gerente
         just_obrero=d04_02                              # Salario justo obrero
         )%>% 
  sjlabelled::set_na(., na = c(-999, -888, -777, -666))
```

Primero, se realiza una revisión exploratoria de las variables de interés, considerando todas las olas de la base de datos, tanto para la muestra original como la de refresco.

```{r,echo=FALSE}
n <- nrow(data)
```

Se comienza con `r n` observaciones.


## Caracterización empleo

### Actividad

Con la variable ELSOC:

-   `m02`. ¿Cuál de estas situaciones describe mejor su actividad principal durante el último mes?

Creamos la variable `actividad`. Se presentan las frecuencias y porcentajes de la Actividad Principal, por ola.

```{r,echo=FALSE}
# Recodficar
data$actividad <- car::recode(data$m02,
                              recodes=c("1='Trabaja de manera remunerada con jornada completa';
                                         2='Trabaja de manera remunerada a tiempo parcial';
                                         3='Estudia y trabaja';
                                         4='Solo estudia';
                                         5='Jubilado o pensionado';
                                         6='Desempleado, buscando trabajo';
                                         7='Realiza tareas no remuneradas';
                                         8='Esta enfermo o tiene una discapacidad';
                                         9='No estudia, no trabaja y no busca trabajo';
                                         -888=NA; 
                                         -999=NA"),
                              as.factor=TRUE, 
                              levels=c("Trabaja de manera remunerada con jornada completa",
                                       "Trabaja de manera remunerada a tiempo parcial",
                                       "Estudia y trabaja",
                                       "Solo estudia",
                                       "Jubilado o pensionado",
                                       "Desempleado, buscando trabajo",
                                       "Realiza tareas no remuneradas",
                                       "Esta enfermo o tiene una discapacidad",
                                       "No estudia, no trabaja y no busca trabajo"))

# Tabla de frecuencias y porcentajes
sjt.xtab(data$actividad, data$ola,
         show.col.prc = TRUE, 
         var.labels = c("Actividad","Ola"),
         show.summary = FALSE,
         title = "Frecuencias y porcentajes de Actividad principal, por ola") 
```

Se continua con una base de datos filtrada dejando solo a las personas ocupadas de acuerdo con las siguientes categorías de actividad principal:

- `m02==1`: Trabaja de manera remunerada con jornada completa
- `m02==2`: Trabaja de manera remunerada a tiempo parcial
- `m03==3`: Estudia y trabaja

Dejando afuera:

- `m02==4`: Solo estudia
- `m02==5`: Jubilado o pensionado     
- `m02==6`: Desempleado, buscando trabajo
- `m02==7`: Realiza tareas no remuneradas
- `m02==8`: Esta enfermo o tiene una discapacidad
- `m02==9`: No estudia, no trabaja y no busca trabajo

```{r, echo=FALSE}
# Filtrar para ocupados
data <- filter(data, actividad %in% c("Trabaja de manera remunerada con jornada completa",
                                      "Trabaja de manera remunerada a tiempo parcial",
                                      "Estudia y trabaja"))
```

```{r,echo=FALSE}
n <- nrow(data)
```

Quedan `r n` observaciones.


### Relación de empleo

Con la variable ELSOC:

-   `m07`. En su actual ocupación usted trabaja como:

Creamos la variable `rel_empleo`.

```{r,echo=FALSE}
# Recodficar
data <- data %>%
  mutate(rel_empleo=car::recode(m07,
                                recodes=c("1='Empleado u obrero en empresa privada';
                                           2='Empleado u obrero del sector público';
                                           3='Miembro de las Fuerzas Armadas y de Orden';
                                           4='Patrón/a o empleador/a';
                                           5='Trabaja solo, no tiene empleados';
                                           6='Familiar no remunerado';
                                           7='Servicio doméstico';
                                           -888=NA; 
                                           -999=NA"),
                                as.factor=TRUE, # convertir a factor
                                levels=c("Empleado u obrero en empresa privada",
                                         "Empleado u obrero del sector público",
                                         "Miembro de las Fuerzas Armadas y de Orden",
                                         "Patrón/a o empleador/a",
                                         "Trabaja solo, no tiene empleados",
                                         "Familiar no remunerado",
                                         "Servicio doméstico"))) # ordenar niveles

# Tabla de frecuencias y porcentajes 2 dígitos
sjt.xtab(data$rel_empleo, data$ola,
         show.col.prc = TRUE,
         var.labels = c("Relación de empleo","Ola"),
         show.summary = FALSE,
         title = "Frecuencias y porcentajes de la Relación de empleo, por ola")
```

La variable de Relación de Empleo, llamada `rel_empleo` (ex `m07`), solamente está presente en las olas 2016, 2018 y 2021. Por lo tanto, se duplican los datos de relación de empleo para los años siguientes, es decir, en 2017 se pondrán los valores de 2016, y así sucesivamente.

```{r,echo=FALSE}
# Crear una columna con la variable rel_empleo adelantada una ola
data <- data %>%
  # arrange(idencuesta, ola) %>%  # Ordena por id y ola, por si acaso no está ordenado
  group_by(idencuesta) %>%        # Agrupa por id para trabajar en cada individuo
  mutate(rel_empleo_lagged=lag(as.character(rel_empleo),n=1)) %>%  # Desplaza rel_empleo a la siguiente ola, conviertiendo el factor en character temporalmente
  ungroup()

# Rellenar los valores NA (de las olas que no estaban) en la variable original
data <- data %>%
  mutate(rel_empleo=ifelse(!is.na(rel_empleo),as.character(rel_empleo),rel_empleo_lagged)) %>%  # Si rel empleo no es NA, sustituir con el valor de rel_empleo, y si es NA con la ola variable desplazada una ola y asegurarse que actividad esté en formato carácter
  mutate(rel_empleo=factor(rel_empleo)) %>%  # Convertir de nuevo a factor
  select(-rel_empleo_lagged)                 # Elimina la columna temporal
```

Se presentan las frecuencias y porcentajes de la Relación de Empleo, por ola.

```{r,echo=FALSE}
# Volver a establecer niveles
data$rel_empleo <- factor(data$rel_empleo,
                          levels=c("Empleado u obrero en empresa privada",
                                   "Empleado u obrero del sector público",
                                   "Miembro de las Fuerzas Armadas y de Orden",
                                   "Patrón/a o empleador/a",
                                   "Trabaja solo, no tiene empleados",
                                   "Familiar no remunerado",
                                   "Servicio doméstico"))

# Tabla de frecuencias y porcentajes
sjt.xtab(data$rel_empleo,data$ola,
         show.col.prc=TRUE,
         var.labels=c("Relación de empleo","Ola"),
         show.summary=FALSE,
         title="Frecuencias y porcentajes de la Relación de Empleo, por ola")
```


### Ocupación

La variable ELSOC:

-   `m03`. ¿Cuál es su ocupación u oficio actual? Describa sus principales tareas y funciones en el puesto de trabajo actual

Se encuentra codificada de acuerdo con la CIUO88 para el año 2016, y CIUO08 para los años 2018 y 2021.

-   `ciuo88_m03`: CIUO (1988) del entrevistado
-   `ciuo08_m03`: CIUO (2008) del entrevistado

Por lo tanto, se realiza una recodificación creando una nueva variable donde están todas las olas homolagadas a la CIUO08, llamada `isco08`. 

```{r,echo=FALSE,message=FALSE,warning=FALSE}
# Carga bbdd con comparacion 88 y 08
isco08_88 <- read_excel(here::here("input/isco08-88.xls"))
isco08_88 <- isco08_88 %>%
  rename(isco08=`ISCO 08 Code`,isco88=`ISCO-88 code`)

# Exploración
valores_repetidos <- table(isco08_88$isco88) # Contar los valores repetidos en la variable
valores_repetidos <- valores_repetidos[valores_repetidos > 1]
valores_repetidos <- table(isco08_88$isco08) # Contar los valores repetidos en la variable
valores_repetidos <- valores_repetidos[valores_repetidos > 1]

# CIUO - ISCO: Recodificación 88->08 4 digitos en datos elsoc
indices <- match(data$ciuo88_m03,isco08_88$isco88)
data$ciuo08_rec <- isco08_88$isco08[indices]
data$ciuo08_rec <- as.numeric(data$ciuo08_rec) # es solo la recodificación de las que eran 88 en data, es decir, año 2016

# Creación variable isco08 con ciuo08_m03 y ciuo08_rec (ex ciuo88_m03) 4 digitos
data$isco08 <- ifelse(!is.na(data$ciuo08_rec),data$ciuo08_rec,data$ciuo08_m03) # es la unión en una variable de todo en 08
```

Además, esta variable también se presenta solamente en las olas 2016, 2018 y 2021. Por lo que, se duplican los datos de ocupación para los años siguientes, es decir, en 2017 se pondrán los valores de 2016, y así sucesivamente.

```{r,echo=FALSE}
# Crear una columna con la variable "isco08" adelantada una ola
data <- data %>%
  # arrange(idencuesta, ola) %>%  # Ordena por id y ola, por si acaso no está ordenado
  group_by(idencuesta) %>%        # Agrupa por id para trabajar en cada individuo
  mutate(isco08_lagged=lag(isco08,n=1)) %>%  # Desplaza isco08 a la siguiente ola
  ungroup()

# Rellenar los valores NA en la variable original
data <- data %>%
  mutate(isco08=ifelse(!is.na(isco08),isco08,isco08_lagged)) %>%  # Si isco08 es NA, sustituir con el valor de la ola anterior 
  select(-isco08_lagged)                 # Elimina la columna temporal
```

Se crean dos nuevas variables `isco08_1d` y `isco08_2d`, de la ISCO08 con 1 y 2 dígitos respectivamente. Se presentan las frecuencias y porcentajes con uno y dos dígitos.

```{r,echo=FALSE}
# CIUO - ISCO: creación de variables con 1 dígito
data$isco08_1d <- as.character(data$isco08)
data$isco08_1d <- substr(data$isco08_1d,1,1)
data$isco08_1d <- as.numeric(data$isco08_1d)

# CIUO - ISCO: creación de variables con 2 dígitos
data$isco08_2d <- as.character(data$isco08)
data$isco08_2d <- substr(data$isco08_2d,1,2)
data$isco08_2d <- as.numeric(data$isco08_2d)

# Tabla de frecuencias y porcentajes 1 dígito
sjt.xtab(data$isco08_1d,data$ola,
         show.col.prc=TRUE, 
         var.labels=c("CIUO08","Ola"),
         show.summary=FALSE,
         title="Frecuencias y porcentajes de Ocupación con 1 dígito, por ola")

# Tabla de frecuencias y porcentajes 2 dígitos
sjt.xtab(data$isco08_2d,data$ola,
         show.col.prc=TRUE, 
         var.labels=c("CIUO08","Ola"),
         show.summary=FALSE,
         title="Frecuencias y porcentajes de Ocupación con 2 dígitos, por ola")
```


### Cualificación

Se crea una nueva variable con el Nivel de cualificación, de acuerdo con la variable CIUO08 de 2 dígitos *isco08_2d*, siguiendo el criterio:

- Expertos (Experts): 11 a 34 con universitaria completa o más 
- Calificados (Skilled): 11 a 34 con universitaria incompleta o menos, y 35,41,42,43,44,53, y 51,54,61,62,71,72,73,74,75,81 con media completa o más.
- No calificados (Unskilled): 51,54,61,62,71,72,73,74,75,81 con media incompleta o menos, y 52,61,63,75,82,83,90+ 

```{r,echo=FALSE}
# Creación variable Nivel de cualificación
data <- mutate(data,
               cualificacion = case_when(isco08_2d <= 34 & educ >= 9 ~ "Experts",
                                         isco08_2d <= 34 & educ < 9 ~ "Skilled",
                                         isco08_2d == 35 ~ "Skilled",
                                         isco08_2d >= 41 & isco08_2d <= 44 ~ "Skilled",
                                         isco08_2d == 53 ~ "Skilled",
                                         isco08_2d == 51 & educ <= 5 ~ "Unskilled",
                                         isco08_2d == 51 & educ > 5 ~ "Skilled",
                                         isco08_2d == 54 & educ <= 5 ~ "Unskilled",
                                         isco08_2d == 54 & educ > 5 ~ "Skilled",
                                         isco08_2d == 61 & educ <= 5 ~ "Unskilled",
                                         isco08_2d == 61 & educ > 5 ~ "Skilled",
                                         isco08_2d == 62 & educ <= 5 ~ "Unskilled",
                                         isco08_2d == 62 & educ > 5 ~ "Skilled",
                                         isco08_2d == 71 & educ <= 5 ~ "Unskilled",
                                         isco08_2d == 71 & educ > 5 ~ "Skilled",
                                         isco08_2d == 72 & educ <= 5 ~ "Unskilled",
                                         isco08_2d == 72 & educ > 5 ~ "Skilled",
                                         isco08_2d == 73 & educ <= 5 ~ "Unskilled",
                                         isco08_2d == 73 & educ > 5 ~ "Skilled",
                                         isco08_2d == 74 & educ <= 5 ~ "Unskilled",
                                         isco08_2d == 74 & educ > 5 ~ "Skilled",
                                         isco08_2d == 75 & educ <= 5 ~ "Unskilled",
                                         isco08_2d == 75 & educ > 5 ~ "Skilled",
                                         isco08_2d == 81 & educ <= 5 ~ "Unskilled",
                                         isco08_2d == 81 & educ > 5 ~ "Skilled",
                                         isco08_2d == 52 ~ "Unskilled",
                                         isco08_2d == 61 ~ "Unskilled",
                                         isco08_2d == 63 ~ "Unskilled",
                                         isco08_2d == 75 ~ "Unskilled",
                                         isco08_2d == 82 ~ "Unskilled",
                                         isco08_2d == 83 ~ "Unskilled",
                                         isco08_2d == 90 ~ "Unskilled"))

# Tabla de frecuencias y porcentajes 2 dígitos
sjt.xtab(data$cualificacion, data$ola,
         show.col.prc = TRUE, 
         var.labels = c("Nivel de cualificación","Ola"),
         show.summary = FALSE,
         title = "Frecuencias y porcentajes del Nivel de Cualificación, por ola")
```


### Rama

La variable ELSOC:

-   `m04`. ¿A qué rubro o giro de actividad se dedica principalmente la empresa, institución o negocio para la cual usted trabaja?

Se encuentra codificada de acuerdo con la CIIU3 para el año 2016, y CIIU4 para los años 2018 y 2021.

-   `ciiu3_m04`: CIIU (III version) del entrevistado
-   `ciiu4_m04`: CIIU (IV version) del entrevistado

Por lo tanto, se realiza una recodificación generando una nueva variable donde están todas las olas homolagadas a la CIIU4, llamada `isic4`.

```{r,echo=FALSE,message=FALSE}
# Recodificar variable CIIU 3 para que queden de 4 dígitos
data$ciiu3 <- sprintf("%04d",data$ciiu3_m04)

# Recodificar variable CIIU 4 para que queden de 4 dígitos
data$ciiu4 <- sprintf("%04d",data$ciiu4_m04)

# Creación de variable CIIU 4 con CIIU 3
## Carga bbdd con comparacion 31 y 4
isic4_isic31 <- read_csv(here::here("input/ISIC4_ISIC31.txt"))

## Recodificación CIIU 3 -> CIIU 4
indices <- match(data$ciiu3,isic4_isic31$ISIC31code)
data$ciiu4_rec <- isic4_isic31$ISIC4code[indices]

# Creación variable isic4 con ciiu4 y ciiu4_rec (ex ciiu3) 4 digitos
data$isic4 <- ifelse(!is.na(data$ciiu4_rec),data$ciiu4_rec,data$ciiu4) # es la unión en una variable de todo en ciiu4
```

Sin embargo, esta variable también se presente solamente en las olas 2016, 2018 y 2021. Por lo que, se duplican los datos de rama de la actividad económica para los años siguientes, es decir, en 2017 se pondrán los valores de 2016, y así sucesivamente.

```{r,echo=FALSE,message=FALSE,warning=FALSE}
# Crear una columna con la variable "isic4" adelantada una ola
data$isic4 <- as.numeric(data$isic4)

data <- data %>%
  arrange(ola) %>%  # Ordena por ola, por si acaso no está ordenado
  group_by(idencuesta) %>%        # Agrupa por id para trabajar en cada individuo
  mutate(isic4_lagged=lag(isic4,n=1)) %>%  # Desplaza "isic4" a la siguiente ola
  ungroup() 

# Rellenar los valores NA en la variable original
data <- data %>%
  mutate(isic4=ifelse(!is.na(isic4),isic4,isic4_lagged)) %>%  # Si isic4 es NA, sustituir con el valor de la ola anterior
  select(-isic4_lagged)                 # Elimina la columna temporal
```

Además, se crea la variable `isic4_2d` con 2 dígitos, y la variable `rama` con la agrupación del CIIU4 de dos dígitos en ramas de la actividad económica. Se presentan las frecuencias y porcentajes de la Rama de Actividad Económica, por ola.

```{r,echo=FALSE}
# CIIU 4: creación de variable con 2 dígitos
data$isic4 <- sprintf("%04d",data$isic4)
data$isic4_2d <- as.character(data$isic4)
data$isic4_2d <- substr(data$isic4,1,2)
data$isic4_2d <- as.numeric(data$isic4_2d)

# Creación de variable con letra
data <- mutate(data,
               rama=case_when(isic4_2d<=03~"A",
                              isic4_2d>=05&isic4_2d<=09~"B",
                              isic4_2d>=10&isic4_2d<=33~"C",
                              isic4_2d==35~"D",
                              isic4_2d>=36&isic4_2d<=39~"E",
                              isic4_2d>=41&isic4_2d<=43~"F",
                              isic4_2d>=45&isic4_2d<=47~"G",
                              isic4_2d>=49&isic4_2d<=53~"H",
                              isic4_2d>=55&isic4_2d<=56~"I",
                              isic4_2d>=58&isic4_2d<=63~"J",
                              isic4_2d>=64&isic4_2d<=66~"K",
                              isic4_2d==68~"L",
                              isic4_2d>=69&isic4_2d<=75~"M",
                              isic4_2d>=77&isic4_2d<=82~"N",
                              isic4_2d==84~"O",
                              isic4_2d==85~"P",
                              isic4_2d>=86&isic4_2d<=88~"Q",
                              isic4_2d>=90&isic4_2d<=93~"R",
                              isic4_2d>=94&isic4_2d<=96~"S",
                              isic4_2d>=97&isic4_2d<=98~"T",
                              isic4_2d==99~"U"))

# Tabla de frecuencias y porcentajes
sjt.xtab(data$rama,data$ola,
         show.col.prc=TRUE, 
         var.labels=c("Rama de Actividad Económica","Ola"),
         show.summary=FALSE,
         title="Frecuencias y porcentajes de la Rama de Actividad Económica, por ola")
```

Se crea una segunda variable de Rama de la Actividad Económica, llamada `rama_2`, donde:

-   Se unen *B* y *C*
-   Se unen *D*, *E* y *F*
-   Se unen *G* y *I*
-   Se unen *J*, *K*, *L*, *M* y *N*
-   Se unen *P* y *Q*
-   Se unen *R*, *S* y *U*

```{r,echo=FALSE}
# Creación de variable rama 2
data <- mutate(data,
               rama_2=case_when(rama=="A"~"A",
                                rama=="B"|rama=="C"~"BC",
                                rama=="D"|rama=="E"|rama=="F"~"DEF",
                                rama=="G"|rama=="I"~"GI",
                                rama=="H"~"H",
                                rama=="J"|rama=="K"|rama=="L"|rama=="M"|rama=="N"~"JKLMN",
                                rama=="O"~"O",
                                rama=="P"|rama=="Q"~"PQ",
                                rama=="R"|rama=="S"|rama=="U"~"RSU",
                                rama=="T"~"T"))

# data$rama_2 <- factor(data$rama_2,
#                       levels = c("Self-employed",
#                                  "Expert managers",
#                                  "Experts",
#                                  "Supervisors",
#                                  "Workers"))

# Tabla de frecuencias y porcentajes
sjt.xtab(data$rama_2,data$ola,
         show.col.prc=TRUE, 
         var.labels=c("Rama 2","Ola"),
         show.summary=FALSE,
         title="Frecuencias y porcentajes de la Rama 2, por ola")
```



### Supervisión 

La variable ELSOC:

-   `m06`. En su trabajo, ¿a cuántas personas supervisa usted?

Se recodifica en una nueva variable, `supervisa`, donde:

-   `supervisa==1`: Supervisa a una o más personas (`m06>=1`)
-   `supervisa==0`: No supervisa (`m06==0`)

```{r,echo=FALSE}
# Crear variable supervisa==1, no supervisa==0
data <- data %>%
  mutate(supervisa=case_when(m06 == 0 ~ 0,
                             m06 >= 1 ~ 1,
                             m06 == -888 ~ NA,
                             m06 == -999 ~ NA))

# Tabla de frecuencias y porcentajes 2 dígitos
sjt.xtab(data$supervisa, data$ola,
         show.col.prc = TRUE, 
         var.labels = c("Supervisa","Ola"),
         show.summary = FALSE,
         title = "Frecuencias y porcentajes de variable Supervisa, por ola")
```

Pero, dado que la variable `m06` solamente se encuentra en las olas 2016, 2018 y 2021, se duplican los datos para los años siguientes, es decir, en 2017 se pondrán los valores de 2016, y así sucesivamente.

```{r,echo=FALSE}
# Crear una columna con la variable "m06" adelantada una ola
data <- data %>%
  arrange(ola) %>%  # Ordena por ola, por si acaso no está ordenado
  group_by(idencuesta) %>%        # Agrupa por id para trabajar en cada individuo
  mutate(m06_lagged=lag(m06,n=1)) %>%  # Desplaza "m06" a la siguiente ola
  ungroup() 

# Rellenar los valores NA en la variable original
data <- data %>%
  mutate(m06_full=ifelse(!is.na(m06),m06,m06_lagged)) %>%  # Si m06 es NA, sustituir con el valor de la ola anterior
  select(-m06_lagged) 
```

```{r,echo=FALSE}
# Crear variable supervisa==1, no supervisa==0
data <- data %>%
  mutate(supervisa=case_when(m06_full==0~0,
                             m06_full>=1~1,
                             m06_full==-888~NA,
                             m06_full==-999~NA))

# Tabla de frecuencias y porcentajes 2 dígitos
sjt.xtab(data$supervisa,data$ola,
         show.col.prc=TRUE, 
         var.labels=c("Supervisa","Ola"),
         show.summary=FALSE,
         title="Frecuencias y porcentajes de variable Supervisa, por ola")
```


### Class

Se crea la variable posición de clase (class) con 7 categorías:

1. Self-employed
2. Expert managers: expertos que supervisan
3. Experts: expertos que no supervisan
4. Skilled supervisors: skilled que supervisan
5. Skilled workers: skilled que no supervisan
6. Unskilled supervisors: unskilled que supervisan
7. Workers: skilled que no supervisan

```{r,echo=FALSE}
# Creación de variable posición de clase
data <- mutate(data,
               class=case_when(rel_empleo == "Trabaja solo, no tiene empleados" ~ "Self-employed",
                               cualificacion == "Experts" & supervisa == 1 ~ "Expert managers",
                               cualificacion == "Experts" & supervisa == 0 ~ "Experts",
                               cualificacion == "Skilled" & supervisa == 1 ~ "Skilled supervisors",
                               cualificacion == "Skilled" & supervisa == 0 ~ "Skilled workers",
                               cualificacion == "Unskilled" & supervisa == 1 ~ "Unskilled supervisors",
                               cualificacion == "Unskilled" & supervisa == 0 ~ "Workers"))

data$class <- factor(data$class,
                     levels = c("Self-employed",
                                "Expert managers",
                                "Experts",
                                "Skilled supervisors",
                                "Skilled workers",
                                "Unskilled supervisors",
                                "Workers"))

# Tabla de frecuencias y porcentajes 2 dígitos
sjt.xtab(data$class, data$ola,
         show.col.prc = TRUE, 
         var.labels = c("Posición de clase","Ola"),
         show.summary = FALSE,
         title = "Frecuencias y porcentajes de la Posición de clase, por ola")
```

Class 2: 

- Se unen *Skilled supervisors* y *Unskilled supervisors*
- Se unen *Skilled workers* y *Workers*

```{r,echo=FALSE}
# Creación de variable posición de clase
data <- mutate(data,
               class_2=case_when(class == "Self-employed" ~ "Self-employed",
                                 class == "Expert managers" ~ "Expert managers",
                                 class == "Experts" ~ "Experts",
                                 class == "Skilled supervisors" | class == "Unskilled supervisors" ~ "Supervisors",
                                 class == "Skilled workers" | class == "Workers" ~ "Workers"))

data$class_2 <- factor(data$class_2,
                       levels = c("Self-employed",
                                  "Expert managers",
                                  "Experts",
                                  "Supervisors",
                                  "Workers"))

# Tabla de frecuencias y porcentajes 2 dígitos
sjt.xtab(data$class_2, data$ola,
         show.col.prc = TRUE, 
         var.labels = c("Posición de clase 2","Ola"),
         show.summary = FALSE,
         title = "Frecuencias y porcentajes de la Posición de clase 2, por ola")
```

### Alluvial


# Brechas salariales

Eliminamos los casos que responden '0' en salario.
{revisar si se deberían eliminar también los que responden 1}

```{r}
summary(data$perc_gerente)
data <- data %>% filter(perc_gerente>0)
data <- data %>% filter(perc_obrero>0)
data <- data %>% filter(just_gerente>0)
data <- data %>% filter(just_obrero>0)
summary(data$perc_gerente)
```


```{r}
data$brecha_perc <- log(data$perc_gerente/data$perc_obrero)
data$brecha_just <- log(data$just_gerente/data$just_obrero)
data$brecha_gerente <- log(data$perc_gerente/data$just_gerente)
data$brecha_obrero <- log(data$perc_obrero/data$just_obrero)
```

```{r}
summary(data$brecha_perc)
```

* Brecha > 0: El salario percibido gerente es mayor que el salario percibido obrero.
* Brecha = 0: El salario percibido gerente es igual al salario percibido obrero (equidad).
* Brecha < 0: El salario percibido gerente es menor que el salario percibido obrero.

```{r}
summary(data$brecha_just)
```

* Brecha > 0: El salario de un gerente debería ser mayor que el salario obrero.
* Brecha = 0: El salario de un gerente debería ser igual al salario obrero (equidad).
* Brecha < 0: El salario de un gerente debería ser menor que el salario obrero.

```{r}
summary(data$brecha_gerente)
```

* Brecha > 0: El salario percibido de un gerente es mayor que el salario que debería tener (sobrepago).
* Brecha = 0: El salario percibido de un gerente es igual al salario que debería tener (equidad).
* Brecha < 0: El salario percibido de un gerente es menor que el salario que debería tener (infra-pago).

```{r}
summary(data$brecha_obrero)
```

* Brecha > 0: El salario percibido de un obrero es mayor que el salario que debería tener (sobrepago).
* Brecha = 0: El salario percibido de un obrero es igual al salario que debería tener (equidad).
* Brecha < 0: El salario percibido de un obrero es menor que el salario que debería tener (infra-pago).

## Regresiones

### Ola

```{r}
data$ola <- factor(data$ola)
```


```{r results='asis'}
reg1 <- lm(brecha_perc~ola, data=data)
reg2 <- lm(brecha_just~ola, data=data)
reg3 <- lm(brecha_gerente~ola, data=data)
reg4 <- lm(brecha_obrero~ola, data=data)

texreg::htmlreg(list(reg1, reg2, reg3, reg4),
                custom.model.names=c("Brecha percibida", "Brecha justa", "Brecha gerente", "Brecha obrero"))
```

### Ola + marcha

```{r results='asis'}
reg1 <- lm(brecha_perc~ola+marcha, data=data)
reg2 <- lm(brecha_just~ola+marcha, data=data)
reg3 <- lm(brecha_gerente~ola+marcha, data=data)
reg4 <- lm(brecha_obrero~ola+marcha, data=data)

texreg::htmlreg(list(reg1, reg2, reg3, reg4),
                custom.model.names=c("Brecha percibida", "Brecha justa", "Brecha gerente", "Brecha obrero"))
```


